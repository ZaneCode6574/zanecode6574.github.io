<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZaneCode6574的博客</title>
  
  <subtitle>时光机</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zanecode6574.github.io/"/>
  <updated>2020-12-02T09:12:49.962Z</updated>
  <id>https://zanecode6574.github.io/</id>
  
  <author>
    <name>ZaneCode6574</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第一章：介绍</title>
    <link href="https://zanecode6574.github.io/2020/10/04/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E4%BB%8B%E7%BB%8D/"/>
    <id>https://zanecode6574.github.io/2020/10/04/第一章：介绍/</id>
    <published>2020-10-04T07:20:23.000Z</published>
    <updated>2020-12-02T09:12:49.962Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、非线性控制原因"><a href="#一、非线性控制原因" class="headerlink" title="一、非线性控制原因"></a>一、非线性控制原因</h1><h2 id="1、绝大多数系统都是非线性的（根本原因）"><a href="#1、绝大多数系统都是非线性的（根本原因）" class="headerlink" title="1、绝大多数系统都是非线性的（根本原因）"></a>1、绝大多数系统都是非线性的（根本原因）</h2><h2 id="2、改善现有的控制系统"><a href="#2、改善现有的控制系统" class="headerlink" title="2、改善现有的控制系统"></a>2、改善现有的控制系统</h2><ul><li>线性控制器要求系统在小范围运行时，线性模型的假设是成立的。大范围运行的时候由于系统中的非线性得不到补偿，会使线性控制器性能低下或者是产生不稳定的情况</li><li>非线性控制器则可以直接处理大范围运行的非线性情况，比如机器人的运动控制</li></ul><h2 id="3、严重非线性分析"><a href="#3、严重非线性分析" class="headerlink" title="3、严重非线性分析"></a>3、严重非线性分析</h2><ul><li>线性控制的另一假设是系统模型实际上能够被线性化。然而，控制系统中存在许多所谓的“强非线性” ，如哥氏摩擦、饱和、死区、啮合间隙和磁滞，其不连续特性不允许进行线性近似，而且不允许忽略，因为会引起系统出现不合需要的特性 (如不稳定性或伪极限环等)。</li></ul><a id="more"></a><h2 id="4、处理模型不确定性"><a href="#4、处理模型不确定性" class="headerlink" title="4、处理模型不确定性"></a>4、处理模型不确定性</h2><ul><li>模型不确定性是个普遍的现象：如由于参数随时间而缓慢变化(如飞机飞行过程中的周围空气压力)，或者是由于参数的突然变化(如机器人抓起一个新的物体时的惯性参数)。但在设计线性控制器时，通常需要假定系统模型的参数应当是已知的。结果：基亍不精确戒失效的模型参数值的线性控制器表现出明显的特性恶化，甚至产生不稳定。可以有意地把非线性引入控制系统的控制器部分，以便能够承受模型的不确定性。例子：鲁棒控制器和自适应控制器。</li></ul><h2 id="5、设计简便"><a href="#5、设计简便" class="headerlink" title="5、设计简便"></a>5、设计简便</h2><ul><li>好的非线性控制设计可能要比线性控制设计简单而又直观。原因：非线性控制器的设计往往深深地扎根于对象的物理特性中。 例子：挂在铰链上的单摆。</li></ul><h1 id="二、非线性系统特性"><a href="#二、非线性系统特性" class="headerlink" title="二、非线性系统特性"></a>二、非线性系统特性</h1><h2 id="1、非线性"><a href="#1、非线性" class="headerlink" title="1、非线性"></a>1、非线性</h2><h3 id="根据物理特性划分"><a href="#根据物理特性划分" class="headerlink" title="根据物理特性划分"></a>根据物理特性划分</h3><ul><li>固有：固有非线性自然地源于系统的硬件和运动，如旋转运动的向心力和接触面之间的哥氏摩擦力等。这种非线性往往具有不良的作用，控制系统必须对非线性加以适当补偿。</li><li>人为：外加非线性是由设计者人为地引入系统的。诸如自适应控制律和bang—bang最优控制律等非线性控制律是外加非线性的典型例子。</li></ul><h3 id="根据数学特性划分"><a href="#根据数学特性划分" class="headerlink" title="根据数学特性划分"></a>根据数学特性划分</h3><ul><li>连续非线性</li><li>断续非线性：断续非线性不能由线性函数局部逼近，因此又把它称为“强”非线性</li></ul><p>控制系统在小范围运行和大范围运行时，通常都能发现强非线性，诸如齿隙、磁滞和静摩擦等。对亍某个小范围运行的控制系统，到底应该把它看做非线性戒线性，取决于强非线性的量级及其对系统特性的影响程度。</p><h2 id="2、线性系统"><a href="#2、线性系统" class="headerlink" title="2、线性系统"></a>2、线性系统</h2><ul><li>线性控制论主要涉及的是线性定常（LTI）控制系统的研究，形式如下</li></ul><script type="math/tex; mode=display">\dot{x}=Ax</script><ul><li>$x$为状态矢量，$A$为系统矩阵<ul><li>如果一个线性系统的$A$为非奇异矩阵，那么该线性系统具有唯一的平衡点；</li><li>如果止的所有特征值均有负实部，那么该平衡点是稳定的，而不管其初始条件如何；</li><li>线性系统的暂态响应是由系统的各自然振荡模态组成的，而且其通解能够通过解析方法求得；</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、非线性控制原因&quot;&gt;&lt;a href=&quot;#一、非线性控制原因&quot; class=&quot;headerlink&quot; title=&quot;一、非线性控制原因&quot;&gt;&lt;/a&gt;一、非线性控制原因&lt;/h1&gt;&lt;h2 id=&quot;1、绝大多数系统都是非线性的（根本原因）&quot;&gt;&lt;a href=&quot;#1、绝大多数系统都是非线性的（根本原因）&quot; class=&quot;headerlink&quot; title=&quot;1、绝大多数系统都是非线性的（根本原因）&quot;&gt;&lt;/a&gt;1、绝大多数系统都是非线性的（根本原因）&lt;/h2&gt;&lt;h2 id=&quot;2、改善现有的控制系统&quot;&gt;&lt;a href=&quot;#2、改善现有的控制系统&quot; class=&quot;headerlink&quot; title=&quot;2、改善现有的控制系统&quot;&gt;&lt;/a&gt;2、改善现有的控制系统&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;线性控制器要求系统在小范围运行时，线性模型的假设是成立的。大范围运行的时候由于系统中的非线性得不到补偿，会使线性控制器性能低下或者是产生不稳定的情况&lt;/li&gt;
&lt;li&gt;非线性控制器则可以直接处理大范围运行的非线性情况，比如机器人的运动控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3、严重非线性分析&quot;&gt;&lt;a href=&quot;#3、严重非线性分析&quot; class=&quot;headerlink&quot; title=&quot;3、严重非线性分析&quot;&gt;&lt;/a&gt;3、严重非线性分析&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;线性控制的另一假设是系统模型实际上能够被线性化。然而，控制系统中存在许多所谓的“强非线性” ，如哥氏摩擦、饱和、死区、啮合间隙和磁滞，其不连续特性不允许进行线性近似，而且不允许忽略，因为会引起系统出现不合需要的特性 (如不稳定性或伪极限环等)。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="应用非线性控制" scheme="https://zanecode6574.github.io/categories/%E5%BA%94%E7%94%A8%E9%9D%9E%E7%BA%BF%E6%80%A7%E6%8E%A7%E5%88%B6/"/>
    
    
      <category term="Nonelinear System" scheme="https://zanecode6574.github.io/tags/Nonelinear-System/"/>
    
      <category term="非线性控制" scheme="https://zanecode6574.github.io/tags/%E9%9D%9E%E7%BA%BF%E6%80%A7%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Predicting Long-Term Skeletal Motions by a Spatio-Temporal Hierarchical Recurrent Network</title>
    <link href="https://zanecode6574.github.io/2019/12/13/Predicting-Long-Term-Skeletal-Motions-by-a-Spatio-Temporal-Hierarchical-Recurrent-Network/"/>
    <id>https://zanecode6574.github.io/2019/12/13/Predicting-Long-Term-Skeletal-Motions-by-a-Spatio-Temporal-Hierarchical-Recurrent-Network/</id>
    <published>2019-12-13T13:31:51.000Z</published>
    <updated>2019-12-13T13:34:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>Github link: <a href="https://zanecode6574.github.io/ST-Hierarchical-Recurrent-Network/">https://zanecode6574.github.io/ST-Hierarchical-Recurrent-Network/</a></p><p>Paper link: <a href="https://arxiv.org/abs/1911.02404" target="_blank" rel="noopener">https://arxiv.org/abs/1911.02404</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Github link: &lt;a href=&quot;https://zanecode6574.github.io/ST-Hierarchical-Recurrent-Network/&quot;&gt;https://zanecode6574.github.io/ST-Hierarchical-R
      
    
    </summary>
    
      <category term="Papers" scheme="https://zanecode6574.github.io/categories/Papers/"/>
    
    
  </entry>
  
  <entry>
    <title>第六章：手势检测</title>
    <link href="https://zanecode6574.github.io/2019/03/08/%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9A%E6%89%8B%E5%8A%BF%E6%A3%80%E6%B5%8B/"/>
    <id>https://zanecode6574.github.io/2019/03/08/第六章：手势检测/</id>
    <published>2019-03-08T14:18:39.000Z</published>
    <updated>2019-03-08T14:51:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>移动应用中一个必不可少的环节就是与用户的交互，在Android中提供了手势检测，并为手势检测提供了相应的监听。Flutter中提供的手势检测为GestureDetector。</p><p>Flutter中的手势系统分为两层，第一层是触摸原事件（指针），有相应的四种事件类型：</p><ul><li>PointerDownEvent：用户与屏幕接触产生了联系。</li><li>PointerMoveEvent：手指已从屏幕上的一个位置移动到另一个位置。</li><li>PointerUpEvent：用户已停止接触屏幕。</li><li>PointerCancelEvent：此指针的输入不再指向此应用程序。</li></ul><p>第二层就是我们可以检测到的手势，主要分为三大类，包括轻击、拖动和缩放。</p><p>本章通过介绍手势的处理方法，来展示Flutter手势的基本用法。内容如下：</p><ul><li>用GestureDetector进行手势检测</li><li>用Dismissible实现滑动删除</li></ul><a id="more"></a><h1 id="使用GestureDetector进行手势检测"><a href="#使用GestureDetector进行手势检测" class="headerlink" title="使用GestureDetector进行手势检测"></a>使用GestureDetector进行手势检测</h1><p>GestureDetector可以进行手势检测，比如点击一次、双击、长按、垂直拖动及水平拖动等。</p><p><img src="/2019/03/08/第六章：手势检测/GestureDetector1.JPG" alt=""><br><img src="/2019/03/08/第六章：手势检测/GestureDetector2.JPG" alt=""></p><ul><li>制作一个自定义按钮，点击时显示“你已按下”</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(<span class="type">MyApp</span>());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyButton</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="comment">//一定要把被触摸的组件放在GestureDetector里面</span></span><br><span class="line">    <span class="keyword">return</span> <span class="type">GestureDetector</span>(</span><br><span class="line">      onTap: ()&#123;</span><br><span class="line">        <span class="comment">//底部消息提示</span></span><br><span class="line">        <span class="keyword">final</span> snackBar=<span class="keyword">new</span> <span class="type">SnackBar</span>(content: <span class="keyword">new</span> <span class="type">Text</span>(<span class="string">"你已按下"</span>),);</span><br><span class="line">        <span class="type">Scaffold</span>.of(context).showSnackBar(snackBar);</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="comment">//添加容器接收触摸动作</span></span><br><span class="line">      child: <span class="type">Container</span>(</span><br><span class="line">        padding: <span class="keyword">new</span> <span class="type">EdgeInsets</span>.all(<span class="number">12.0</span>),</span><br><span class="line">        decoration: <span class="type">BoxDecoration</span>(</span><br><span class="line">          color: <span class="type">Theme</span>.of(context).buttonColor,</span><br><span class="line">          borderRadius: <span class="type">BorderRadius</span>.circular(<span class="number">10.0</span>)</span><br><span class="line">        ),</span><br><span class="line">        child: <span class="type">Text</span>('测试按钮'),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: '测试手势',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>('测试手势'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="keyword">new</span> <span class="type">MyButton</span>(),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/08/第六章：手势检测/GestureDetectorTest.png" alt=""></p><h1 id="Dismissible实现滑动删除"><a href="#Dismissible实现滑动删除" class="headerlink" title="Dismissible实现滑动删除"></a>Dismissible实现滑动删除</h1><p>滑动删除模式在很多移动应用中很常见。例如，我们在整理手机通讯录时，希望能快速删除一些联系人，一般用手指轻轻一滑即可以实现删除功能。Flutter通过提供Dismissible组件使这项任务变得简单。</p><p><img src="/2019/03/08/第六章：手势检测/Dismissible.JPG" alt=""></p><ul><li>删除列表中某一项数据</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(<span class="type">MyApp</span>());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//构建30条列表数据</span></span><br><span class="line">  <span class="type">List</span>&lt;<span class="type">String</span>&gt; items=<span class="keyword">new</span> <span class="type">List</span>&lt;<span class="type">String</span>&gt;.generate(<span class="number">30</span>, (i)=&gt;<span class="string">"列表项$&#123;i+1&#125;"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: '滑动删除',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>('手势检测'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">ListView</span>.builder(</span><br><span class="line">          itemCount: items.length,</span><br><span class="line">          itemBuilder: (context,index)&#123;</span><br><span class="line">            <span class="comment">//提出被删除的项</span></span><br><span class="line">            <span class="keyword">final</span> item=items[index];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//返回一个可以被删除的列表项</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Dismissible</span>(key: <span class="type">Key</span>(item),</span><br><span class="line">              onDismissed: (direction)&#123;</span><br><span class="line">              items.removeAt(index);</span><br><span class="line">              <span class="comment">//弹出消息提示被删除了</span></span><br><span class="line">                <span class="type">Scaffold</span>.of(context).showSnackBar(<span class="type">SnackBar</span>(content: <span class="type">Text</span>('$item 被删除了！')));</span><br><span class="line">              &#125;,</span><br><span class="line">              child: <span class="type">ListTile</span>(title: <span class="type">Text</span>(<span class="string">"$item"</span>),),</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/08/第六章：手势检测/DismissibleDemo.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;移动应用中一个必不可少的环节就是与用户的交互，在Android中提供了手势检测，并为手势检测提供了相应的监听。Flutter中提供的手势检测为GestureDetector。&lt;/p&gt;
&lt;p&gt;Flutter中的手势系统分为两层，第一层是触摸原事件（指针），有相应的四种事件类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PointerDownEvent：用户与屏幕接触产生了联系。&lt;/li&gt;
&lt;li&gt;PointerMoveEvent：手指已从屏幕上的一个位置移动到另一个位置。&lt;/li&gt;
&lt;li&gt;PointerUpEvent：用户已停止接触屏幕。&lt;/li&gt;
&lt;li&gt;PointerCancelEvent：此指针的输入不再指向此应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二层就是我们可以检测到的手势，主要分为三大类，包括轻击、拖动和缩放。&lt;/p&gt;
&lt;p&gt;本章通过介绍手势的处理方法，来展示Flutter手势的基本用法。内容如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用GestureDetector进行手势检测&lt;/li&gt;
&lt;li&gt;用Dismissible实现滑动删除&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Flutter" scheme="https://zanecode6574.github.io/categories/Flutter/"/>
    
    
      <category term="手势" scheme="https://zanecode6574.github.io/tags/%E6%89%8B%E5%8A%BF/"/>
    
  </entry>
  
  <entry>
    <title>第五章：页面布局</title>
    <link href="https://zanecode6574.github.io/2019/03/01/%E7%AC%AC%E4%BA%94%E7%AB%A0%EF%BC%9A%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/"/>
    <id>https://zanecode6574.github.io/2019/03/01/第五章：页面布局/</id>
    <published>2019-03-01T01:33:48.000Z</published>
    <updated>2019-03-08T03:46:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>基础布局处理</li><li>宽高尺寸处理</li><li>列表及表格布局</li><li>其他布局处理</li><li>布局综合示例</li></ul><p><img src="/2019/03/01/第五章：页面布局/Arrangement.JPG" alt=""><br><img src="/2019/03/01/第五章：页面布局/Arrangement2.JPG" alt=""></p><a id="more"></a><h1 id="基础布局"><a href="#基础布局" class="headerlink" title="基础布局"></a>基础布局</h1><p>基础布局组件包括容器布局，各种缩放、排列方式的组件</p><h2 id="Container（容器布局）"><a href="#Container（容器布局）" class="headerlink" title="Container（容器布局）"></a>Container（容器布局）</h2><p>Container（容器布局）在Flutter里大量使用，它是一个组合Widget，内部有绘制Widget、定位Widget和尺寸Widget。Container组件的常见属性请参考“容器组件”的介绍。</p><ul><li>准备几张图片，在项目下新建一个images文件夹，放入图片，配置pubspec.yaml文件，添加图片路径</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">assets:</span><br><span class="line">- images/xxx.jpg</span><br><span class="line">- images/xxx.jpg</span><br><span class="line">- images/xxx.jpg</span><br></pre></td></tr></table></figure><ul><li>编写代码</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class MyApp extends StatelessWidget&#123;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    Widget container=<span class="keyword">new</span> Container(</span><br><span class="line">      decoration: <span class="keyword">new</span> BoxDecoration(</span><br><span class="line">        <span class="built_in">color</span>: Colors.grey,</span><br><span class="line">      ),</span><br><span class="line">      child: <span class="keyword">new</span> Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          <span class="keyword">new</span> Row(</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              <span class="comment">//使用Expanded防止内容溢出</span></span><br><span class="line">              <span class="keyword">new</span> Expanded(child: <span class="keyword">new</span> Container(</span><br><span class="line">                <span class="built_in">width</span>: <span class="number">150</span>,</span><br><span class="line">                <span class="built_in">height</span>: <span class="number">150</span>,</span><br><span class="line">                decoration: <span class="keyword">new</span> BoxDecoration(</span><br><span class="line">                    border: <span class="keyword">new</span> Border.all(<span class="built_in">width</span>: <span class="number">10.0</span>,<span class="built_in">color</span>: Colors.blueGrey),</span><br><span class="line">                    borderRadius: <span class="keyword">const</span> BorderRadius.all(<span class="keyword">const</span> Radius.circular(<span class="number">8.0</span>))</span><br><span class="line">                ),</span><br><span class="line">                margin: <span class="keyword">const</span> EdgeInsets.all(<span class="number">4.0</span>),</span><br><span class="line">                child: <span class="keyword">new</span> Image.asset(<span class="string">'images/1.png'</span>),</span><br><span class="line">              ),),</span><br><span class="line">              <span class="keyword">new</span> Expanded(child: <span class="keyword">new</span> Container(</span><br><span class="line">                <span class="built_in">width</span>: <span class="number">150</span>,</span><br><span class="line">                <span class="built_in">height</span>: <span class="number">150</span>,</span><br><span class="line">                decoration: <span class="keyword">new</span> BoxDecoration(</span><br><span class="line">                    border: <span class="keyword">new</span> Border.all(<span class="built_in">width</span>: <span class="number">10.0</span>,<span class="built_in">color</span>: Colors.blueGrey),</span><br><span class="line">                    borderRadius: <span class="keyword">const</span> BorderRadius.all(<span class="keyword">const</span> Radius.circular(<span class="number">8.0</span>))</span><br><span class="line">                ),</span><br><span class="line">                margin: <span class="keyword">const</span> EdgeInsets.all(<span class="number">4.0</span>),</span><br><span class="line">                child: <span class="keyword">new</span> Image.asset(<span class="string">'images/1.png'</span>),</span><br><span class="line">              ),),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line"></span><br><span class="line">          <span class="keyword">new</span> Row(</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              <span class="comment">//使用Expanded防止内容溢出</span></span><br><span class="line">              <span class="keyword">new</span> Expanded(child: <span class="keyword">new</span> Container(</span><br><span class="line">                <span class="built_in">width</span>: <span class="number">150</span>,</span><br><span class="line">                <span class="built_in">height</span>: <span class="number">150</span>,</span><br><span class="line">                decoration: <span class="keyword">new</span> BoxDecoration(</span><br><span class="line">                    border: <span class="keyword">new</span> Border.all(<span class="built_in">width</span>: <span class="number">10.0</span>,<span class="built_in">color</span>: Colors.blueGrey),</span><br><span class="line">                    borderRadius: <span class="keyword">const</span> BorderRadius.all(<span class="keyword">const</span> Radius.circular(<span class="number">8.0</span>))</span><br><span class="line">                ),</span><br><span class="line">                margin: <span class="keyword">const</span> EdgeInsets.all(<span class="number">4.0</span>),</span><br><span class="line">                child: <span class="keyword">new</span> Image.asset(<span class="string">'images/1.png'</span>),</span><br><span class="line">              ),),</span><br><span class="line">              <span class="keyword">new</span> Expanded(child: <span class="keyword">new</span> Container(</span><br><span class="line">                <span class="built_in">width</span>: <span class="number">150</span>,</span><br><span class="line">                <span class="built_in">height</span>: <span class="number">150</span>,</span><br><span class="line">                decoration: <span class="keyword">new</span> BoxDecoration(</span><br><span class="line">                    border: <span class="keyword">new</span> Border.all(<span class="built_in">width</span>: <span class="number">10.0</span>,<span class="built_in">color</span>: Colors.blueGrey),</span><br><span class="line">                    borderRadius: <span class="keyword">const</span> BorderRadius.all(<span class="keyword">const</span> Radius.circular(<span class="number">8.0</span>))</span><br><span class="line">                ),</span><br><span class="line">                margin: <span class="keyword">const</span> EdgeInsets.all(<span class="number">4.0</span>),</span><br><span class="line">                child: <span class="keyword">new</span> Image.asset(<span class="string">'images/1.png'</span>),</span><br><span class="line">              ),),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">'Container布局测试'</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          title: Text(<span class="string">'Container布局'</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: container,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/ContainerArrangementDemo.png" alt=""></p><h2 id="Center（居中布局）"><a href="#Center（居中布局）" class="headerlink" title="Center（居中布局）"></a>Center（居中布局）</h2><p>子元素处于水平垂直居中</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Center</span>布局测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Center</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="keyword">new</span> <span class="type">Text</span>('测试测试',style: <span class="type">TextStyle</span>(fontSize: <span class="number">36.0</span>),),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/CenterDemo.png" alt=""></p><h2 id="Padding（填充布局）"><a href="#Padding（填充布局）" class="headerlink" title="Padding（填充布局）"></a>Padding（填充布局）</h2><p>Padding即为填充组件，用于处理容器与其子元素之间的间距，与padding属性对应的是margin属性，margin处理容器与其他组件之间的间距。</p><p><img src="/2019/03/01/第五章：页面布局/Padding.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Padding</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Padding</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">            width: <span class="number">300.0</span>,</span><br><span class="line">            height: <span class="number">300.0</span>,</span><br><span class="line">            padding: <span class="type">EdgeInsets</span>.all(<span class="number">30.0</span>),</span><br><span class="line">            decoration: <span class="keyword">new</span> <span class="type">BoxDecoration</span>(</span><br><span class="line">              color: <span class="type">Colors</span>.white,</span><br><span class="line">              border: <span class="keyword">new</span> <span class="type">Border</span>.all(</span><br><span class="line">                color: <span class="type">Colors</span>.green,</span><br><span class="line">                width: <span class="number">8.0</span></span><br><span class="line">              )</span><br><span class="line">            ),</span><br><span class="line">            child: <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">              width: <span class="number">200.0</span>,</span><br><span class="line">              height: <span class="number">200.0</span>,</span><br><span class="line">              decoration: <span class="keyword">new</span> <span class="type">BoxDecoration</span>(</span><br><span class="line">                color: <span class="type">Colors</span>.white,</span><br><span class="line">                border: <span class="keyword">new</span> <span class="type">Border</span>.all(</span><br><span class="line">                  color: <span class="type">Colors</span>.blue,</span><br><span class="line">                  width: <span class="number">8.0</span></span><br><span class="line">                )</span><br><span class="line">              ),</span><br><span class="line">              child: <span class="keyword">new</span> <span class="type">FlutterLogo</span>(),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/PaddingDemo.png" alt=""></p><h2 id="Align（对齐布局）"><a href="#Align（对齐布局）" class="headerlink" title="Align（对齐布局）"></a>Align（对齐布局）</h2><p>Align组件即对齐组件，能将子组件按指定方式对齐，并根据子组件的大小调整自己的大小。</p><p><img src="/2019/03/01/第五章：页面布局/Align.JPG" alt=""></p><ul><li>这里放入几张图片</li><li>代码</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line"><span class="symbol">      title:</span> <span class="string">'Align测试'</span>,</span><br><span class="line"><span class="symbol">      home:</span> Scaffold(</span><br><span class="line"><span class="symbol">        appBar:</span> AppBar(</span><br><span class="line"><span class="symbol">          title:</span> Text(<span class="string">'Align测试'</span>),</span><br><span class="line">        ),</span><br><span class="line"><span class="symbol">        body:</span> Stack(</span><br><span class="line"><span class="symbol">          children:</span> &lt;Widget&gt;[</span><br><span class="line">            <span class="comment">//左上角</span></span><br><span class="line">            <span class="keyword">new</span> Align(</span><br><span class="line"><span class="symbol">              alignment:</span> <span class="keyword">new</span> FractionalOffset(<span class="number">0.0</span>, <span class="number">0.0</span>),</span><br><span class="line"><span class="symbol">              child:</span> <span class="keyword">new</span> Image.asset(<span class="string">'images/1.png'</span>,<span class="string">width:</span> <span class="number">128.0</span>,<span class="string">height:</span> <span class="number">128.0</span>,),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="comment">//右上角</span></span><br><span class="line">            <span class="keyword">new</span> Align(</span><br><span class="line"><span class="symbol">              alignment:</span> <span class="keyword">new</span> FractionalOffset(<span class="number">1.0</span>, <span class="number">0.0</span>),</span><br><span class="line"><span class="symbol">              child:</span> <span class="keyword">new</span> Image.asset(<span class="string">'images/1.png'</span>,<span class="string">width:</span> <span class="number">128.0</span>,<span class="string">height:</span> <span class="number">128.0</span>,),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="comment">//水平垂直居中</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">new</span> Align(</span><br><span class="line"><span class="symbol">              alignment:</span> FractionalOffset.center,</span><br><span class="line"><span class="symbol">              child:</span> <span class="keyword">new</span> Image.asset(<span class="string">'images/1.png'</span>,<span class="string">width:</span> <span class="number">128.0</span>,<span class="string">height:</span> <span class="number">128.0</span>,),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="comment">//底部居左</span></span><br><span class="line">            <span class="keyword">new</span> Align(</span><br><span class="line"><span class="symbol">              alignment:</span> FractionalOffset.bottomLeft,</span><br><span class="line"><span class="symbol">              child:</span> <span class="keyword">new</span> Image.asset(<span class="string">'images/1.png'</span>,<span class="string">width:</span> <span class="number">128.0</span>,<span class="string">height:</span> <span class="number">128.0</span>,),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="comment">//底部居左</span></span><br><span class="line">            <span class="keyword">new</span> Align(</span><br><span class="line"><span class="symbol">              alignment:</span> FractionalOffset.bottomRight,</span><br><span class="line"><span class="symbol">              child:</span> <span class="keyword">new</span> Image.asset(<span class="string">'images/1.png'</span>,<span class="string">width:</span> <span class="number">128.0</span>,<span class="string">height:</span> <span class="number">128.0</span>,),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/AlignDemo.png" alt=""></p><h2 id="Row（水平布局）"><a href="#Row（水平布局）" class="headerlink" title="Row（水平布局）"></a>Row（水平布局）</h2><p>水平布局是一种常用的布局方式，我们主要使用Row组件来完成子组件在水平方向的排列。对Row来说，水平方向是主轴，垂直方向次轴，可以完全参照Web中的Flex布局（虽然我不知道这是啥）</p><p><img src="/2019/03/01/第五章：页面布局/Row.JPG" alt=""></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line"><span class="symbol">      title:</span> <span class="string">'Align测试'</span>,</span><br><span class="line"><span class="symbol">      home:</span> Scaffold(</span><br><span class="line"><span class="symbol">        appBar:</span> AppBar(</span><br><span class="line"><span class="symbol">          title:</span> Text(<span class="string">'Align测试'</span>),</span><br><span class="line">        ),</span><br><span class="line"><span class="symbol">        body:</span> <span class="keyword">new</span> Row(</span><br><span class="line"><span class="symbol">          children:</span> &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">new</span> Expanded(<span class="string">child:</span> <span class="keyword">new</span> Text(<span class="string">'左侧文本'</span>,<span class="string">textAlign:</span> TextAlign.center,)),</span><br><span class="line">            <span class="keyword">new</span> Expanded(<span class="string">child:</span> <span class="keyword">new</span> Text(<span class="string">'中间文本'</span>,<span class="string">textAlign:</span> TextAlign.center,)),</span><br><span class="line">            <span class="keyword">new</span> Expanded(<span class="string">child:</span> <span class="keyword">new</span> FittedBox(<span class="string">fit:</span> BoxFit.contain,<span class="string">child:</span> const FlutterLogo(),))</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/RowDemo.png" alt=""></p><h2 id="Column（垂直布局）"><a href="#Column（垂直布局）" class="headerlink" title="Column（垂直布局）"></a>Column（垂直布局）</h2><p>垂直布局是一种常用的布局方式，我们主要使用Column组件来完成对子组件纵向的排列。</p><p><img src="/2019/03/01/第五章：页面布局/Column.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">Column</span>(</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Text</span>('垂直布局'),</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Text</span>(<span class="symbol">'Flutte</span>r'),</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Expanded</span>(child: <span class="keyword">new</span> <span class="type">FittedBox</span>(</span><br><span class="line">              fit: <span class="type">BoxFit</span>.contain,</span><br><span class="line">              child: const <span class="type">FlutterLogo</span>(),</span><br><span class="line">            ))</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/ColumnDemo.png" alt=""></p><ul><li>增加水平方向靠左对齐，主轴方向最小化处理，其中最后一行文字字号专门放大</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">Column</span>(</span><br><span class="line">          crossAxisAlignment: <span class="type">CrossAxisAlignment</span>.start, <span class="comment">//水平方向靠左对齐</span></span><br><span class="line">          mainAxisSize: <span class="type">MainAxisSize</span>.min, <span class="comment">//主轴方向最小化处理</span></span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Text</span>('垂直布局'),</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Text</span>(<span class="symbol">'Flutte</span>r'),</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Expanded</span>(child: <span class="keyword">new</span> <span class="type">FittedBox</span>(</span><br><span class="line">              fit: <span class="type">BoxFit</span>.contain,</span><br><span class="line">              child: const <span class="type">FlutterLogo</span>(),</span><br><span class="line">            ))</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/ColumnDemo2.png" alt=""></p><h2 id="FittedBox（缩放布局）"><a href="#FittedBox（缩放布局）" class="headerlink" title="FittedBox（缩放布局）"></a>FittedBox（缩放布局）</h2><p>FittedBox组件主要做两件事情，缩放（Scale）和位置调整（Position）。</p><p>FittedBox会在自己的尺寸范围内缩放并调整child位置，使child适合其尺寸。类似ImageView组件，它是将图片在其范围内按照规则进行缩放位置调整。FittedBox跟ImageView有些类似，可以猜出，它肯定有一个类似于ScaleType的属性。</p><p>布局行为分两种情况</p><ul><li>如果外部有约束的话，按照外部约束调整自身尺寸，然后缩放调整child，按照指定的条件进行布局。</li><li>如果没有外部约束条件，则跟child尺寸一致，指定的缩放以及位置属性将不起作用。</li></ul><h3 id="fit和alignment两个重要属性"><a href="#fit和alignment两个重要属性" class="headerlink" title="fit和alignment两个重要属性"></a>fit和alignment两个重要属性</h3><h4 id="fit"><a href="#fit" class="headerlink" title="fit"></a>fit</h4><p>fit：缩放的方式，默认的属性是BoxFit.contain，child在FittedBox范围内，尽可能大，但是不超出其尺寸。这里需要注意一点，contain是在保持着child宽高比的大前提下，尽可能填满。一般情况下，宽度或者高度达到最大值时，就会停止缩放。</p><p><img src="/2019/03/01/第五章：页面布局/FittedBox.JPG" alt=""></p><ul><li>BoxFit.none没有任何填充模式</li><li>BoxFit.fill不按宽高比填充模式，内容不会超过容器范围</li><li>BoxFit.contain按宽高比等比填充模式，内容不会超过容器范围</li><li>BoxFit.cover按原始尺寸填充整个容器模式，内容有可能会超过容器范围</li><li>BoxFit.width及BoxFit.height分别是按宽/高填充整个容器的模式，内容不会超过容器范围</li><li>BoxFit.scaleDown会根据情况缩小范围，有时和BoxFit.contain一样，有时和BoxFit.none一样，内容不会超过容器范围</li></ul><h4 id="alignment"><a href="#alignment" class="headerlink" title="alignment"></a>alignment</h4><p>alignment：设置对齐方式，默认的属性是Alignment.center，居中显示child</p><h2 id="Stack-Alignment"><a href="#Stack-Alignment" class="headerlink" title="Stack/Alignment"></a>Stack/Alignment</h2><p>Stack组件的每一个子组件要么定位，要么不定位，定位的子组件是用Positioned组件包裹的。Stack组件本身包含所有不定位的子组件，子组件根据alignment属性定位（默认为左上角）。然后根据定位的子组件的top、right、bottom和left属性将它们放置在Stack组件上。</p><p><img src="/2019/03/01/第五章：页面布局/Stack.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> stack=<span class="keyword">new</span> <span class="type">Stack</span>(</span><br><span class="line">    alignment: <span class="type">Alignment</span>.topLeft,</span><br><span class="line">    children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">      <span class="comment">//添加一个圆形头像</span></span><br><span class="line">      <span class="keyword">new</span> <span class="type">CircleAvatar</span>(</span><br><span class="line">        backgroundImage: <span class="keyword">new</span> <span class="type">AssetImage</span>(<span class="symbol">'images</span>/<span class="number">1.</span>png'),</span><br><span class="line">        radius: <span class="number">100.0</span>,</span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line">      <span class="comment">//上面加一个容器，容器里放文本</span></span><br><span class="line">      <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">        decoration: <span class="keyword">new</span> <span class="type">BoxDecoration</span>(</span><br><span class="line">          color: <span class="type">Colors</span>.black38</span><br><span class="line">        ),</span><br><span class="line">        child: <span class="keyword">new</span> <span class="type">Text</span>(<span class="string">"测试一下文字"</span>,style: <span class="keyword">new</span> <span class="type">TextStyle</span>(fontSize: <span class="number">22.0</span>,fontWeight: <span class="type">FontWeight</span>.bold,color: <span class="type">Colors</span>.white),),</span><br><span class="line">      ),</span><br><span class="line">    ],</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: stack,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/StackDemo.png" alt=""></p><h2 id="Stack-Positioned"><a href="#Stack-Positioned" class="headerlink" title="Stack/Positioned"></a>Stack/Positioned</h2><p>Pisitioned组件是用来定位的，Stack使用Positioned布局主要是因为在Stack组件里面需要包裹一个定位组件</p><p><img src="/2019/03/01/第五章：页面布局/StackPositioned.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">Stack</span>(</span><br><span class="line">            children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">              <span class="comment">//添加图片</span></span><br><span class="line">              <span class="keyword">new</span> <span class="type">Image</span>(image: <span class="type">NetworkImage</span>(<span class="string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1541655494719&amp;di=6b49d24b5172a34828b9d6506e4bf100&amp;imgtype=0&amp;src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn11%2F266%2Fw640h426%2F20180813%2Fce56-hhqtawx8254771.jpg"</span>)),</span><br><span class="line">              <span class="keyword">new</span> <span class="type">Positioned</span>(</span><br><span class="line">                bottom: <span class="number">0.0</span>,</span><br><span class="line">                right: <span class="number">0.0</span>,</span><br><span class="line">                child: <span class="type">Text</span>(<span class="symbol">'Hell</span>o',style: <span class="keyword">new</span> <span class="type">TextStyle</span>(fontSize: <span class="number">36.0</span>,fontWeight: <span class="type">FontWeight</span>.bold,fontFamily: <span class="symbol">'seri</span>f',color: <span class="type">Colors</span>.white),),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/PositionedDemo.png" alt=""></p><h2 id="IndexedStack"><a href="#IndexedStack" class="headerlink" title="IndexedStack"></a>IndexedStack</h2><p>IndexedStack继承自Stack，它的作用是显示第index个child，其他child都是不可见的，所以IndexedStack的尺寸永远是和最大的子节点尺寸一致。由于IndexedStack是继承自Stack的，所以它只比Stack多了一个index属性，即对应child的索引。</p><p>这里我们改造Stack布局示例，把Stack组件替换为IndexedStack组件，同时添加index属性值，当index设置为1时，运行结果只显示“我是超级飞侠”几个字及它的容器。因为CircleAvatar组件索引为0，所以不显示。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">IndexedStack</span>(</span><br><span class="line">            index: <span class="number">0</span>,</span><br><span class="line">            children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">              <span class="comment">//添加图片</span></span><br><span class="line">              <span class="keyword">new</span> <span class="type">Image</span>(image: <span class="type">NetworkImage</span>(<span class="string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1541655494719&amp;di=6b49d24b5172a34828b9d6506e4bf100&amp;imgtype=0&amp;src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn11%2F266%2Fw640h426%2F20180813%2Fce56-hhqtawx8254771.jpg"</span>)),</span><br><span class="line">              <span class="keyword">new</span> <span class="type">Positioned</span>(</span><br><span class="line">                bottom: <span class="number">0.0</span>,</span><br><span class="line">                right: <span class="number">0.0</span>,</span><br><span class="line">                child: <span class="type">Text</span>(<span class="symbol">'Hell</span>o',style: <span class="keyword">new</span> <span class="type">TextStyle</span>(fontSize: <span class="number">36.0</span>,fontWeight: <span class="type">FontWeight</span>.bold,fontFamily: <span class="symbol">'seri</span>f',color: <span class="type">Colors</span>.white),),</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="OverflowBox溢出父容器显示"><a href="#OverflowBox溢出父容器显示" class="headerlink" title="OverflowBox溢出父容器显示"></a>OverflowBox溢出父容器显示</h2><p>OverflowBox组件允许子元素child超出父容器的范围显示。当OverflowBox的最大尺寸大于child的时候，child可以完整显示，当其小于child的时候，则以最大尺寸为基准，当然这个尺寸是可以突破父节点的。最后加上对齐方式，完成布局。有时候需要某个元素超出整个模块，这时可以使用OverflowBox组件。</p><p><img src="/2019/03/01/第五章：页面布局/OverflowBox.JPG" alt=""></p><ul><li>例子：添加两个容器，上层的容器会溢出下层的容器一定范围</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Container</span>(</span><br><span class="line">          color: <span class="type">Colors</span>.green,</span><br><span class="line">          width: <span class="number">200.0</span>,</span><br><span class="line">          height: <span class="number">200.0</span>,</span><br><span class="line">          padding: const <span class="type">EdgeInsets</span>.all(<span class="number">5.0</span>),</span><br><span class="line">          child: <span class="type">OverflowBox</span>(</span><br><span class="line">            alignment: <span class="type">Alignment</span>.topLeft,</span><br><span class="line">            maxWidth: <span class="number">300.0</span>,</span><br><span class="line">            maxHeight: <span class="number">500.0</span>,</span><br><span class="line">            child: <span class="type">Container</span>(</span><br><span class="line">              color: <span class="type">Colors</span>.blueGrey,</span><br><span class="line">              width: <span class="number">400.0</span>,</span><br><span class="line">              height: <span class="number">400.0</span>,</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/OverflowBoxDemo.png" alt=""></p><h1 id="宽高尺寸处理"><a href="#宽高尺寸处理" class="headerlink" title="宽高尺寸处理"></a>宽高尺寸处理</h1><h2 id="SizedBox（设置具体尺寸）"><a href="#SizedBox（设置具体尺寸）" class="headerlink" title="SizedBox（设置具体尺寸）"></a>SizedBox（设置具体尺寸）</h2><p>SizedBox组件是一个特定大小的盒子，这个组件强制它的child有特定的宽度和高度。如果宽度或高度为null，则此组件将调整自身大小以匹配该维度中child的大小。</p><p><img src="/2019/03/01/第五章：页面布局/SizedBox.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">SizedBox</span>(</span><br><span class="line">          width: <span class="number">200.0</span>,</span><br><span class="line">          height: <span class="number">200.0</span>,</span><br><span class="line">          child: const <span class="type">Card</span>(</span><br><span class="line">            child: <span class="type">Text</span>(<span class="symbol">'SizedBo</span>x',style: <span class="type">TextStyle</span>(fontSize: <span class="number">28.0</span>),),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/SizedBoxDemo.png" alt=""></p><h2 id="ConstrainedBox（限定最大最小宽高布局）"><a href="#ConstrainedBox（限定最大最小宽高布局）" class="headerlink" title="ConstrainedBox（限定最大最小宽高布局）"></a>ConstrainedBox（限定最大最小宽高布局）</h2><p>ConstrainedBox的作用是限定子元素child的最大宽度、最大高度、最小宽度和最小高度。</p><p><img src="/2019/03/01/第五章：页面布局/ConstrainedBox.JPG" alt=""></p><ul><li>示例：一个宽高为300.0的Container上添加一个约束最大最小宽高的ConstrainedBox，实际显示中，则是一个宽高为220.0的区域</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">ConstrainedBox</span>(constraints: const <span class="type">BoxConstraints</span>(</span><br><span class="line">          minWidth: <span class="number">150.0</span>,</span><br><span class="line">          minHeight: <span class="number">150.0</span>,</span><br><span class="line">          maxHeight: <span class="number">250.0</span>,</span><br><span class="line">          maxWidth: <span class="number">250.0</span></span><br><span class="line">        ),</span><br><span class="line">          child: <span class="type">Container</span>(</span><br><span class="line">            width: <span class="number">300.0</span>,</span><br><span class="line">            height: <span class="number">300.0</span>,</span><br><span class="line">            color: <span class="type">Colors</span>.green,</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/ConstrainedBoxDemo.png" alt=""></p><p>如果child不为null，则将限制条件加在child上，如果为null，则会尽可能地缩小尺寸</p><h2 id="LimitedBox（限定最大宽高布局）"><a href="#LimitedBox（限定最大宽高布局）" class="headerlink" title="LimitedBox（限定最大宽高布局）"></a>LimitedBox（限定最大宽高布局）</h2><p>LimitedBox组件是限制类型的组件，可对最大宽高进行限制。和ConstrainedBox类似，只不过LimitedBox组件没有最小宽高限制。</p><p>从布局的角度讲，LimitedBox是将child限制在其设定的最大宽高中的，但这个限定是有条件的。当LimitedBox最大宽度不受限制时，child的宽度就会受到这个最大宽度的限制，高度同理。</p><p>（明明ConstrainedBox不设置最小值就可以跟这个一样为什么要单独出一个LimitedBox？我暂时没理解到这其中的不同）</p><p><img src="/2019/03/01/第五章：页面布局/LimitedBox.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Column</span>(</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="type">Container</span>(</span><br><span class="line">              color: <span class="type">Colors</span>.grey,</span><br><span class="line">              height: <span class="number">100.0</span>,</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="type">LimitedBox</span>(</span><br><span class="line">              maxHeight: <span class="number">150.0</span>,</span><br><span class="line">              child: <span class="type">Container</span>(</span><br><span class="line">                color: <span class="type">Colors</span>.lightGreen,</span><br><span class="line">                height: <span class="number">250.0</span>,</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（原书中用的Row，我就想试试Column）</p><p><img src="/2019/03/01/第五章：页面布局/LimitedBoxDemo.png" alt=""></p><h2 id="AspectRatio（调整宽高比）"><a href="#AspectRatio（调整宽高比）" class="headerlink" title="AspectRatio（调整宽高比）"></a>AspectRatio（调整宽高比）</h2><p>AspectRatio的作用是根据设置调整子元素child的宽高比，Flutter提供此组件，就免去了自定义所带来的麻烦。AspectRatio适用于需要固定宽高比的情景。</p><p>AspectRatio的布局行为分为两种情况</p><ul><li>AspectRatio首先会在布局限制条件允许的范围内尽可能地扩展，Widget的高度是由宽度和比率决定的，类似于BoxFit中的contain，按照固定比率去尽量占满区域。</li><li>如果在满足所有限制条件后无法找到可行的尺寸，AspectRatio最终将会优先适应布局限制条件，而忽略所设置的比率。</li></ul><p><img src="/2019/03/01/第五章：页面布局/AspectRatio.JPG" alt=""></p><ul><li>示例：定义了一个高度为200的区域，内部AspectRatio比率设置为1.5，最终AspectRatio是宽300高200的一个区域</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">          height: <span class="number">200.0</span>,</span><br><span class="line">          child: <span class="keyword">new</span> <span class="type">AspectRatio</span>(aspectRatio: <span class="number">1.5</span>,</span><br><span class="line">          child: <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">            color: <span class="type">Colors</span>.grey,</span><br><span class="line">          ),),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/AspectRatioDemo.png" alt=""></p><h2 id="FractionallySizedBox（百分比布局）"><a href="#FractionallySizedBox（百分比布局）" class="headerlink" title="FractionallySizedBox（百分比布局）"></a>FractionallySizedBox（百分比布局）</h2><p>FractionallySizedBox组件会根据现有空间来调整child的尺寸，所以就算为child设置了具体的尺寸数值，也不起作用。当需要在一个区域里面取百分比尺寸时，可以使用这个组件，比如需要一个高度30%宽度60%的区域。</p><p>FractionallySizedBox的布局主要跟它的宽高因子（两个参数）有关，当参数为null或者有具体数值的时候，布局表现不一样。当然，还有一个辅助参数alignment，作为对齐方式进行布局。</p><p>具体有以下两种情况</p><ul><li>设置了具体的宽高因子，具体的宽高则根据现有空间宽高×因子，当宽高因子大于1的时候，有可能会超出父组件的范围。</li><li>没有设置宽高因子，则填满可用区域。</li></ul><p><img src="/2019/03/01/第五章：页面布局/FractionallySizedBox.JPG" alt=""></p><p>如果宽高因子不为null，那么实际的最大宽高度则为child的宽高乘以这个因子；如果因子为null，那么child的宽高则会尽量充满整个区域</p><ul><li>示例：两个容器，底部的容器宽高各为200。如果上面的容器宽度因子为0.5，则它的实际宽度为100；如果高度因子为1.5，则它的实际高度为300。对齐方式为左上角对齐。所以上层的元素横向在容器内部，纵向已经超出容器了。</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Container</span>(</span><br><span class="line">          color: <span class="type">Colors</span>.blueGrey,</span><br><span class="line">          height: <span class="number">200.0</span>,</span><br><span class="line">          width: <span class="number">200.0</span>,</span><br><span class="line">          child: <span class="type">FractionallySizedBox</span>(</span><br><span class="line">            alignment: <span class="type">Alignment</span>.topLeft,</span><br><span class="line">            widthFactor: <span class="number">0.5</span>,</span><br><span class="line">            heightFactor: <span class="number">2.0</span>,</span><br><span class="line">            child: <span class="type">Container</span>(</span><br><span class="line">              color: <span class="type">Colors</span>.green,</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/FractionallySizedBoxDemo.png" alt=""></p><h1 id="列表及表格布局"><a href="#列表及表格布局" class="headerlink" title="列表及表格布局"></a>列表及表格布局</h1><h2 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h2><p>ListView布局是一种常用的布局方式，ListView结合ListTitle可以布局出一些复杂的列表界面</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    List&lt;Widget&gt; list=&lt;Widget&gt;[</span><br><span class="line">      <span class="keyword">new</span> ListTile(</span><br><span class="line"><span class="symbol">        title:</span> Text(<span class="string">'第一个ListTitle'</span>,<span class="string">style:</span> TextStyle(<span class="string">fontWeight:</span> FontWeight.w400,<span class="string">fontSize:</span> <span class="number">18.0</span>),),</span><br><span class="line"><span class="symbol">        subtitle:</span> Text(<span class="string">'第一个subtitle'</span>),</span><br><span class="line"><span class="symbol">        leading:</span> <span class="keyword">new</span> Icon(Icons.fastfood,<span class="string">color:</span> Colors.orange,),</span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line">      <span class="keyword">new</span> ListTile(</span><br><span class="line"><span class="symbol">        title:</span> Text(<span class="string">'第二个ListTitle'</span>,<span class="string">style:</span> TextStyle(<span class="string">fontWeight:</span> FontWeight.w400,<span class="string">fontSize:</span> <span class="number">18.0</span>),),</span><br><span class="line"><span class="symbol">        subtitle:</span> Text(<span class="string">'第二个subtitle'</span>),</span><br><span class="line"><span class="symbol">        leading:</span> <span class="keyword">new</span> Icon(Icons.home,<span class="string">color:</span> Colors.orange,),</span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line">      <span class="keyword">new</span> ListTile(</span><br><span class="line"><span class="symbol">        title:</span> Text(<span class="string">'第三个ListTitle'</span>,<span class="string">style:</span> TextStyle(<span class="string">fontWeight:</span> FontWeight.w400,<span class="string">fontSize:</span> <span class="number">18.0</span>),),</span><br><span class="line"><span class="symbol">        subtitle:</span> Text(<span class="string">'第三个subtitle'</span>),</span><br><span class="line"><span class="symbol">        leading:</span> <span class="keyword">new</span> Icon(Icons.person,<span class="string">color:</span> Colors.orange,),</span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line">      <span class="keyword">new</span> ListTile(</span><br><span class="line"><span class="symbol">        title:</span> Text(<span class="string">'第四个ListTitle'</span>,<span class="string">style:</span> TextStyle(<span class="string">fontWeight:</span> FontWeight.w400,<span class="string">fontSize:</span> <span class="number">18.0</span>),),</span><br><span class="line"><span class="symbol">        subtitle:</span> Text(<span class="string">'第四个subtitle'</span>),</span><br><span class="line"><span class="symbol">        leading:</span> <span class="keyword">new</span> Icon(Icons.print,<span class="string">color:</span> Colors.orange,),</span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line">      <span class="keyword">new</span> ListTile(</span><br><span class="line"><span class="symbol">        title:</span> Text(<span class="string">'第四个ListTitle'</span>,<span class="string">style:</span> TextStyle(<span class="string">fontWeight:</span> FontWeight.w400,<span class="string">fontSize:</span> <span class="number">18.0</span>),),</span><br><span class="line"><span class="symbol">        subtitle:</span> Text(<span class="string">'第四个subtitle'</span>),</span><br><span class="line"><span class="symbol">        leading:</span> <span class="keyword">new</span> Icon(Icons.keyboard,<span class="string">color:</span> Colors.orange,),</span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line"><span class="symbol">      title:</span> <span class="string">'Align测试'</span>,</span><br><span class="line"><span class="symbol">      home:</span> Scaffold(</span><br><span class="line"><span class="symbol">        appBar:</span> AppBar(</span><br><span class="line"><span class="symbol">          title:</span> Text(<span class="string">'Align测试'</span>),</span><br><span class="line">        ),</span><br><span class="line"><span class="symbol">        body:</span> Center(</span><br><span class="line"><span class="symbol">          child:</span> ListView(</span><br><span class="line"><span class="symbol">            children:</span> list,</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/ListViewDemo.png" alt=""></p><ul><li>实现长文本滚动效果</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line"><span class="symbol">      title:</span> <span class="string">'Align测试'</span>,</span><br><span class="line"><span class="symbol">      home:</span> Scaffold(</span><br><span class="line"><span class="symbol">        appBar:</span> AppBar(</span><br><span class="line"><span class="symbol">          title:</span> Text(<span class="string">'Align测试'</span>),</span><br><span class="line">        ),</span><br><span class="line"><span class="symbol">        body:</span> ListView(</span><br><span class="line"><span class="symbol">          children:</span> &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">new</span> Center(</span><br><span class="line"><span class="symbol">              child:</span> Text(<span class="string">'第一个文字'</span>,<span class="string">style:</span> TextStyle(<span class="string">fontSize:</span> <span class="number">30.0</span>),),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="keyword">new</span> Center(</span><br><span class="line"><span class="symbol">              child:</span> Text(<span class="string">'第二个文字'</span>,<span class="string">style:</span> TextStyle(<span class="string">fontSize:</span> <span class="number">16.0</span>),),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="keyword">new</span> Center(<span class="string">child:</span> Text(<span class="string">'''天河公园，是区属综合性公园，位于广州天河区员村，西靠天府路，南连黄埔大道，北接中山大道，来往交通十分便利。公园总面积为70.7公顷，水体面积占10公顷。天河公园以自然生态景观为主要特色，公园规划为五个功能区：百花园景区、文体娱乐区、老人活动区、森林休憩区、后勤管理区。'''</span></span><br><span class="line">            ,<span class="string">style:</span> TextStyle(<span class="string">fontSize:</span> <span class="number">14.0</span>),),</span><br><span class="line">            )</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/ListViewDemo2.png" alt=""></p><p>（长文本滚动的效果我没体会到，因为用双引号还是一样的效果，书上说长文本要用<code>&#39;&#39;&#39;XXXX&#39;&#39;&#39;</code>）</p><h2 id="GridView"><a href="#GridView" class="headerlink" title="GridView"></a>GridView</h2><p>GridView布局即为网格布局，通常用来布局多行多列的情况。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="comment">//使用generate构造图片列表</span></span><br><span class="line">    <span class="type">List</span>&lt;<span class="type">Container</span>&gt; _buildGridTitleList(int count)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">List</span>&lt;<span class="type">Container</span>&gt;.generate(count, (int index)=&gt;<span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">        child: <span class="keyword">new</span> <span class="type">Image</span>(image: <span class="type">AssetImage</span>(<span class="symbol">'images</span>/<span class="number">1.</span>png')),</span><br><span class="line">      ));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//渲染GridView</span></span><br><span class="line">    <span class="type">Widget</span> buildGrid()&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">GridView</span>.extent(maxCrossAxisExtent: <span class="number">150</span>, <span class="comment">//次轴的宽度</span></span><br><span class="line">        padding: const <span class="type">EdgeInsets</span>.all(<span class="number">4.0</span>), <span class="comment">//上下左右内边距</span></span><br><span class="line">        mainAxisSpacing: <span class="number">4.0</span>, <span class="comment">//主轴间隙</span></span><br><span class="line">        crossAxisSpacing: <span class="number">4.0</span>, <span class="comment">//次轴间隙</span></span><br><span class="line">        children: _buildGridTitleList(<span class="number">9</span>),</span><br><span class="line">           );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Align</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Align</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: buildGrid(),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/GridViewDemo.png" alt=""></p><h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><p>几乎每一个前端技术的布局中都会有一种table布局，这种组件太常见了，以至于其表现形式，完全可以借鉴其他前端技术。表格布局中，每一行的高度由其内容决定，每一列的宽度由columnWidths属性单独控制。</p><p><img src="/2019/03/01/第五章：页面布局/Table.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="string">"Table测试"</span>,</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="string">"Table测试"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">Center</span>(</span><br><span class="line">          <span class="comment">//设置表格列，并指定宽</span></span><br><span class="line">          child: <span class="type">Table</span>(</span><br><span class="line">            columnWidths: const &lt;int,<span class="type">TableColumnWidth</span>&gt;&#123;</span><br><span class="line">              <span class="number">0</span>:<span class="type">FixedColumnWidth</span>(<span class="number">100.0</span>),</span><br><span class="line">              <span class="number">1</span>:<span class="type">FixedColumnWidth</span>(<span class="number">40.0</span>),</span><br><span class="line">              <span class="number">2</span>:<span class="type">FixedColumnWidth</span>(<span class="number">80.0</span>),</span><br><span class="line">              <span class="number">3</span>:<span class="type">FixedColumnWidth</span>(<span class="number">80.0</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">//设置表格边框样式</span></span><br><span class="line">            border: <span class="type">TableBorder</span>.all(</span><br><span class="line">              color: <span class="type">Colors</span>.black38,</span><br><span class="line">              width: <span class="number">2.0</span>,</span><br><span class="line">              style: <span class="type">BorderStyle</span>.solid</span><br><span class="line">            ),</span><br><span class="line">            children: const &lt;<span class="type">TableRow</span>&gt;[</span><br><span class="line">              <span class="comment">//添加第一行数据</span></span><br><span class="line">              <span class="type">TableRow</span>(</span><br><span class="line">                children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">                  <span class="type">Text</span>(<span class="string">"姓名"</span>),</span><br><span class="line">                  <span class="type">Text</span>(<span class="string">"性别"</span>),</span><br><span class="line">                  <span class="type">Text</span>(<span class="string">"年龄"</span>),</span><br><span class="line">                  <span class="type">Text</span>(<span class="string">"身高"</span>),</span><br><span class="line">                ]</span><br><span class="line">              ),</span><br><span class="line">              <span class="type">TableRow</span>(</span><br><span class="line">                children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">                  <span class="type">Text</span>(<span class="string">"姓名"</span>),</span><br><span class="line">                  <span class="type">Text</span>(<span class="string">"性别"</span>),</span><br><span class="line">                  <span class="type">Text</span>(<span class="string">"年龄"</span>),</span><br><span class="line">                  <span class="type">Text</span>(<span class="string">"身高"</span>),</span><br><span class="line">                ]</span><br><span class="line">              ),</span><br><span class="line">              <span class="type">TableRow</span>(</span><br><span class="line">                  children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">"姓名"</span>),</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">"性别"</span>),</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">"年龄"</span>),</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">"身高"</span>),</span><br><span class="line">                  ]</span><br><span class="line">              )</span><br><span class="line">              ]</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/TableDemo.png" alt=""></p><h1 id="其他布局处理"><a href="#其他布局处理" class="headerlink" title="其他布局处理"></a>其他布局处理</h1><h2 id="Transform（矩阵转换）"><a href="#Transform（矩阵转换）" class="headerlink" title="Transform（矩阵转换）"></a>Transform（矩阵转换）</h2><p>Transform的主要作用就是做矩阵变换。Container中矩阵变换就使用了Transform。Transform可以对child做平移、旋转及缩放等操作。</p><p><img src="/2019/03/01/第五章：页面布局/Transform.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="string">"测试Demo"</span>,</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="string">"测试"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">Container</span>(</span><br><span class="line">            color: <span class="type">Colors</span>.grey,</span><br><span class="line">            child: <span class="type">Transform</span>(</span><br><span class="line">              alignment: <span class="type">Alignment</span>.topRight,</span><br><span class="line">              transform: <span class="type">Matrix4</span>.rotationZ(<span class="number">0.3</span>),</span><br><span class="line">              child: <span class="type">Container</span>(</span><br><span class="line">                padding: const <span class="type">EdgeInsets</span>.all(<span class="number">8.0</span>),</span><br><span class="line">                color: const <span class="type">Color</span>(<span class="number">0xFFE8581C</span>),</span><br><span class="line">                child: const <span class="type">Text</span>(<span class="string">"矩阵转换"</span>),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/TransformDemo.png" alt=""></p><h2 id="BaseLine（基准线布局）"><a href="#BaseLine（基准线布局）" class="headerlink" title="BaseLine（基准线布局）"></a>BaseLine（基准线布局）</h2><p>Baseline基准线是指将所有元素底部放在同一条水平线上。做过移动端开发的读者大都了解过，一般文字排版的时候可能会用到它。它的作用很简单，根据child的baseline来调整child的位置。例如两个字号不一样的文字，希望底部在一条水平线上，就可以使用这个组件，是一个非常基础的组件。</p><p><img src="/2019/03/01/第五章：页面布局/Baseline2.JPG" alt=""></p><p><img src="/2019/03/01/第五章：页面布局/Baseline.JPG" alt=""></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MaterialApp(</span><br><span class="line"><span class="symbol">      title:</span> <span class="string">"测试Demo"</span>,</span><br><span class="line"><span class="symbol">      home:</span> <span class="keyword">new</span> Scaffold(</span><br><span class="line"><span class="symbol">        appBar:</span> AppBar(</span><br><span class="line"><span class="symbol">          title:</span> Text(<span class="string">"测试"</span>),</span><br><span class="line">        ),</span><br><span class="line"><span class="symbol">        body:</span> <span class="keyword">new</span> Row(</span><br><span class="line">          <span class="comment">//水平等间距排列</span></span><br><span class="line"><span class="symbol">          mainAxisAlignment:</span> MainAxisAlignment.spaceBetween,</span><br><span class="line"><span class="symbol">          children:</span> &lt;Widget&gt;[</span><br><span class="line">            <span class="comment">//设置基准线</span></span><br><span class="line">            <span class="keyword">new</span> Baseline(<span class="string">baseline:</span> <span class="number">80.0</span>, <span class="string">baselineType:</span> TextBaseline.alphabetic,</span><br><span class="line"><span class="symbol">              child:</span><span class="keyword">new</span> Text(<span class="string">"AAcc"</span>,<span class="string">style:</span> <span class="keyword">new</span> TextStyle(<span class="string">fontSize:</span> <span class="number">18.0</span>,<span class="string">textBaseline:</span> TextBaseline.alphabetic),)</span><br><span class="line">              ,),</span><br><span class="line">            <span class="keyword">new</span> Baseline(<span class="string">baseline:</span> <span class="number">80.0</span>, <span class="string">baselineType:</span> TextBaseline.alphabetic,</span><br><span class="line"><span class="symbol">              child:</span><span class="keyword">new</span> Text(<span class="string">"AAcc"</span>,<span class="string">style:</span> <span class="keyword">new</span> TextStyle(<span class="string">fontSize:</span> <span class="number">23.0</span>,<span class="string">textBaseline:</span> TextBaseline.alphabetic),)</span><br><span class="line">              ,),</span><br><span class="line">            <span class="keyword">new</span> Baseline(<span class="string">baseline:</span> <span class="number">80.0</span>, <span class="string">baselineType:</span> TextBaseline.alphabetic,</span><br><span class="line"><span class="symbol">              child:</span><span class="keyword">new</span> Text(<span class="string">"AAcc"</span>,<span class="string">style:</span> <span class="keyword">new</span> TextStyle(<span class="string">fontSize:</span> <span class="number">34.0</span>,<span class="string">textBaseline:</span> TextBaseline.alphabetic),)</span><br><span class="line">              ,)</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/BaselineDemo.png" alt=""></p><h2 id="Offstage（控制是否显示组件）"><a href="#Offstage（控制是否显示组件）" class="headerlink" title="Offstage（控制是否显示组件）"></a>Offstage（控制是否显示组件）</h2><p>Offstage主要有一个属性就是offstage，值为true或者false</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">final</span> appTitle=<span class="string">"Offstage示例"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: appTitle,</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">MyHomePage</span>(title:appTitle),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span></span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="type">String</span> title;</span><br><span class="line">  <span class="type">MyHomePage</span>(&#123;<span class="type">Key</span> key,<span class="keyword">this</span>.title&#125;):<span class="keyword">super</span>(key:key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _MyHomePageState createState()=&gt;<span class="keyword">new</span> _MyHomePageState();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State&lt;MyHomePage&gt;</span></span>&#123;</span><br><span class="line">  bool offstage=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="string">"测试显示和隐藏"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">Center</span>(</span><br><span class="line">        child: <span class="keyword">new</span> <span class="type">Offstage</span>(</span><br><span class="line">          offstage: offstage,</span><br><span class="line">          child: <span class="type">Text</span>(<span class="string">"显示出"</span>,style: <span class="keyword">new</span> <span class="type">TextStyle</span>(fontSize: <span class="number">20.0</span>),),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">      floatingActionButton: <span class="keyword">new</span> <span class="type">FloatingActionButton</span>(</span><br><span class="line">        onPressed: ()&#123;</span><br><span class="line">          setState(() &#123;</span><br><span class="line">            offstage=!offstage;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: <span class="string">"显示隐藏"</span>,</span><br><span class="line">        child: <span class="keyword">new</span> <span class="type">Icon</span>(<span class="type">Icons</span>.flip),</span><br><span class="line">          ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/OffstageDemo.png" alt=""></p><h2 id="Wrap（按宽高自动换行布局）"><a href="#Wrap（按宽高自动换行布局）" class="headerlink" title="Wrap（按宽高自动换行布局）"></a>Wrap（按宽高自动换行布局）</h2><p>Wrap使用了Flex中的一些概念，某种意义上说跟Row、Column更加相似。单行的Wrap跟Row表现几乎一致，单列的Wrap则跟Column表现几乎一致。但Row与Column都是单行单列的，Wrap却突破了这个限制，主轴上空间不足时，则向次轴上去扩展显示。对于一些需要按宽度或高度让child自动换行布局的场景，可以使用Wrap。</p><p><img src="/2019/03/01/第五章：页面布局/Wrap.JPG" alt=""></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">final</span> appTitle=<span class="string">"Offstage示例"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MaterialApp(</span><br><span class="line"><span class="symbol">      title:</span> appTitle,</span><br><span class="line"><span class="symbol">      home:</span> Scaffold(</span><br><span class="line"><span class="symbol">        appBar:</span> AppBar(</span><br><span class="line"><span class="symbol">          title:</span> Text(<span class="string">"Wrap"</span>),</span><br><span class="line">        ),</span><br><span class="line"><span class="symbol">        body:</span> Wrap(</span><br><span class="line"><span class="symbol">          spacing:</span> <span class="number">8.0</span>,<span class="comment">//chip之间的间隙</span></span><br><span class="line"><span class="symbol">          runSpacing:</span> <span class="number">4.0</span>,<span class="comment">//行之间的间隙</span></span><br><span class="line"><span class="symbol">          children:</span> &lt;Widget&gt;[</span><br><span class="line">            Chip(</span><br><span class="line"><span class="symbol">              avatar:</span> CircleAvatar(</span><br><span class="line"><span class="symbol">                backgroundColor:</span> Colors.lightGreen.shade800,<span class="string">child:</span> <span class="keyword">new</span> Text(<span class="string">"西门"</span>,<span class="string">style:</span> TextStyle(<span class="string">fontSize:</span> <span class="number">10.0</span>),),</span><br><span class="line">              ),</span><br><span class="line"><span class="symbol">              label:</span> Text(<span class="string">"西门吹雪"</span>),</span><br><span class="line">            ),</span><br><span class="line">      Chip(</span><br><span class="line"><span class="symbol">        avatar:</span> CircleAvatar(</span><br><span class="line"><span class="symbol">            backgroundColor:</span> Colors.lightBlue.shade700, <span class="string">child:</span> <span class="keyword">new</span> Text(<span class="string">'司空'</span>, <span class="string">style:</span> TextStyle(<span class="string">fontSize:</span> <span class="number">10.0</span>),)),</span><br><span class="line"><span class="symbol">        label:</span> Text(<span class="string">'司空摘星'</span>),</span><br><span class="line">      ),</span><br><span class="line">      Chip(</span><br><span class="line"><span class="symbol">        avatar:</span> CircleAvatar(</span><br><span class="line"><span class="symbol">            backgroundColor:</span> Colors.orange.shade800, <span class="string">child:</span> <span class="keyword">new</span> Text(<span class="string">'婉清'</span>, <span class="string">style:</span> TextStyle(<span class="string">fontSize:</span> <span class="number">10.0</span>),)),</span><br><span class="line"><span class="symbol">        label:</span> Text(<span class="string">'木婉清'</span>),</span><br><span class="line">      ),</span><br><span class="line">      Chip(</span><br><span class="line"><span class="symbol">        avatar:</span> CircleAvatar(</span><br><span class="line"><span class="symbol">            backgroundColor:</span> Colors.blue.shade900, <span class="string">child:</span> <span class="keyword">new</span> Text(<span class="string">'一郎'</span>, <span class="string">style:</span> TextStyle(<span class="string">fontSize:</span> <span class="number">10.0</span>),)),</span><br><span class="line"><span class="symbol">        label:</span> Text(<span class="string">'萧十一郎'</span>),)</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/WrapDemo.png" alt=""></p><h1 id="布局综合示例"><a href="#布局综合示例" class="headerlink" title="布局综合示例"></a>布局综合示例</h1><p>跟随书上的代码，做一个风景区介绍的布局</p><h2 id="布局分析"><a href="#布局分析" class="headerlink" title="布局分析"></a>布局分析</h2><p>整体布局使用一个垂直布局组件ListView进行滚动布局。一共有四大块；武当山图片、风景区地址、按钮组和景区介绍文本块。整体布局使用一个垂直布局组件ListView进行滚动布局。一共有四大块；武当山图片、风景区地址、按钮组和景区介绍文本块。</p><ul><li><p>垂直方向使用ListView而不使用Column的原因是，风景区介绍文本可能会很长，甚至超出屏幕，如果使用Column组件，则有部分文本可能会看不到。使用ListView组件，用户可以滚动到下面查看文本。<br><img src="/2019/03/01/第五章：页面布局/1.JPG" alt=""></p></li><li><p>风景区地址从横向上看需要使用一个水平排列的组件Row，水平方向总共有三个Child，分别为左侧文本区域、右侧图标及数字区域。其中左侧文本区域要继续细拆，需要用一个垂直布局的组件Column，上下各放一个文本组件即可。右侧图标及数字是两个组件，所以横向上来看总共是三个组件。<br><img src="/2019/03/01/第五章：页面布局/2.JPG" alt=""><br><img src="/2019/03/01/第五章：页面布局/3.JPG" alt=""></p></li><li><p>接下来分析按钮组的布局，在横向上用Row组件排列三个按钮。在纵向上用Column做三个相同的按钮，上面为按钮图标，下面为按钮文本。这样布局拆分的好处是，最大化地复用组件<br><img src="/2019/03/01/第五章：页面布局/4.JPG" alt=""></p></li></ul><h2 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h2><ul><li>准备一张风景图，这里我使用上面那张网络图</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1541655494719&amp;di=6b49d24b5172a34828b9d6506e4bf100&amp;imgtype=0&amp;src=http<span class="number">%3</span>A<span class="number">%2</span>F<span class="number">%2</span>Fn.sinaimg.cn<span class="number">%2</span>Fsinacn11<span class="number">%2</span>F266<span class="number">%2</span>Fw640h426<span class="number">%2</span>F20180813<span class="number">%2</span>Fce56-hhqtawx8254771.jpg</span><br></pre></td></tr></table></figure><ul><li>代码</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/cupertino.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="comment">//风景区地址部分</span></span><br><span class="line">    Widget addressContainer=Container(</span><br><span class="line"><span class="symbol">      padding:</span> const EdgeInsets.all(<span class="number">32.0</span>), <span class="comment">//四周间隔一定的距离</span></span><br><span class="line"><span class="symbol">      child:</span> Row(</span><br><span class="line"><span class="symbol">        children:</span> &lt;Widget&gt;[</span><br><span class="line">          Expanded(</span><br><span class="line"><span class="symbol">            child:</span> Column(</span><br><span class="line"><span class="symbol">              crossAxisAlignment:</span> CrossAxisAlignment.start, <span class="comment">//顶部对齐</span></span><br><span class="line"><span class="symbol">              children:</span> &lt;Widget&gt;[</span><br><span class="line">                Container(<span class="string">padding:</span> const EdgeInsets.only(<span class="string">bottom:</span> <span class="number">8.0</span>), <span class="comment">//与下面的文本间隔一定距离</span></span><br><span class="line"><span class="symbol">                  child:</span> Text(<span class="string">"风景区地址"</span>,<span class="string">style:</span> TextStyle(<span class="string">fontWeight:</span> FontWeight.bold),),</span><br><span class="line">                ),</span><br><span class="line">                Text(<span class="string">"湖北省十堰市丹江口市"</span>,<span class="string">style:</span> TextStyle(<span class="string">color:</span> Colors.grey[<span class="number">500</span>]),),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          Icon(Icons.star,<span class="string">color:</span> Colors.red[<span class="number">500</span>],),</span><br><span class="line">          Text(<span class="string">'66'</span>),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构建按钮组中单个按钮，参数为图标及文本</span></span><br><span class="line">    Column buildButtonColumn(IconData icon,String label)&#123;</span><br><span class="line">      <span class="keyword">return</span> Column(</span><br><span class="line"><span class="symbol">        mainAxisSize:</span> MainAxisSize.min,<span class="comment">//垂直方向大小最小化</span></span><br><span class="line"><span class="symbol">        mainAxisAlignment:</span> MainAxisAlignment.center, <span class="comment">//垂直方向居中对齐</span></span><br><span class="line"><span class="symbol">        children:</span> &lt;Widget&gt;[</span><br><span class="line">          Icon(icon,<span class="string">color:</span> Colors.lightGreen[<span class="number">600</span>],),</span><br><span class="line">          Container(</span><br><span class="line"><span class="symbol">            margin:</span> const EdgeInsets.only(<span class="string">top:</span> <span class="number">8.0</span>),</span><br><span class="line"><span class="symbol">            child:</span> Text(</span><br><span class="line">              label,<span class="string">style:</span> TextStyle(</span><br><span class="line"><span class="symbol">              fontSize:</span> <span class="number">12.0</span>,</span><br><span class="line"><span class="symbol">              fontWeight:</span> FontWeight.w400,</span><br><span class="line"><span class="symbol">              color:</span> Colors.lightGreen[<span class="number">600</span>],</span><br><span class="line">            ),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//按钮组部分</span></span><br><span class="line">    Widget buttonsContainer=Container(</span><br><span class="line">      <span class="comment">//容器横向布局</span></span><br><span class="line"><span class="symbol">      child:</span> Row(</span><br><span class="line"><span class="symbol">        mainAxisAlignment:</span> MainAxisAlignment.spaceEvenly, <span class="comment">//水平方向均匀排列每个元素</span></span><br><span class="line"><span class="symbol">        children:</span> &lt;Widget&gt;[</span><br><span class="line">          buildButtonColumn(Icons.call, <span class="string">"电话"</span>),</span><br><span class="line">          buildButtonColumn(Icons.near_me, <span class="string">"导航"</span>),</span><br><span class="line">          buildButtonColumn(Icons.mobile_screen_share, <span class="string">"分享"</span>),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//风景区介绍文本部分</span></span><br><span class="line">    Widget textContainer=Container(</span><br><span class="line"><span class="symbol">      padding:</span> const EdgeInsets.all(<span class="number">32.0</span>),</span><br><span class="line"><span class="symbol">      child:</span> Text(</span><br><span class="line">          <span class="string">'''</span></span><br><span class="line"><span class="string">          武当山，中国道教圣地，又名太和山、谢罗山、参上山、仙室山，古有“太岳”“玄岳”“大岳”之称。位于湖北西北部十堰市丹江口市境内。东接闻名古城襄阳市，西靠车城十堰市 ，南望原始森林神农架，北临高峡平湖 丹江口水库。</span></span><br><span class="line"><span class="string">        明代，武当山被皇帝封为“大岳”、“治世玄岳”，被尊为“皇室家庙”。武当山以“四大名山皆拱揖，五方仙岳共朝宗”的“五岳之冠”地位闻名于世。</span></span><br><span class="line"><span class="string">        1994年12月，武当山古建筑群入选《世界遗产名录》，2006年被整体列为“全国重点文物保护单位”。2007年，武当山和长城、丽江、周庄等景区一起入选“欧洲人最喜爱的中国十大景区”。2010至2013年，武当山分别被评为国家5A级旅游区、国家森林公园、中国十大避暑名山、海峡两岸交流基地，入选最美“国家地质公园”。 </span></span><br><span class="line"><span class="string">        截至2013年，武当山有古建筑53处，建筑面积2.7万平方米，建筑遗址9处，占地面积20多万平方米，全山保存各类文物5035件。 </span></span><br><span class="line"><span class="string">        武当山是道教名山和武当武术的发源地，被称为“亘古无双胜境，天下第一仙山”。武当武术，是中华武术的重要流派。元末明初，道士张三丰集其大成，开创武当派。</span></span><br><span class="line"><span class="string">          '''</span>,<span class="string">softWrap:</span> <span class="literal">true</span>,),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构建界面组装</span></span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line"><span class="symbol">      title:</span> <span class="string">'布局综合示例'</span>,</span><br><span class="line"><span class="symbol">      theme:</span> <span class="keyword">new</span> ThemeData(</span><br><span class="line"><span class="symbol">        brightness:</span> Brightness.light,<span class="comment">//整体主题亮度</span></span><br><span class="line"><span class="symbol">        primaryColor:</span> Colors.lightGreen,<span class="comment">//App主要部分的背景色</span></span><br><span class="line"><span class="symbol">        accentColor:</span> Colors.orange[<span class="number">600</span>],<span class="comment">//前景色</span></span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line"><span class="symbol">      home:</span> Scaffold(</span><br><span class="line"><span class="symbol">        appBar:</span> AppBar(</span><br><span class="line"><span class="symbol">          title:</span> Text(<span class="string">'综合布局'</span>,<span class="string">style:</span> TextStyle(<span class="string">color:</span> Colors.white),),</span><br><span class="line">        ),</span><br><span class="line"><span class="symbol">        body:</span> ListView(</span><br><span class="line"><span class="symbol">          children:</span> &lt;Widget&gt;[</span><br><span class="line">            Image.network(<span class="string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1541655494719&amp;di=6b49d24b5172a34828b9d6506e4bf100&amp;imgtype=0&amp;src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn11%2F266%2Fw640h426%2F20180813%2Fce56-hhqtawx8254771.jpg"</span>,<span class="string">width:</span> <span class="number">600</span>,<span class="string">height:</span> <span class="number">240</span>,<span class="string">fit:</span> BoxFit.cover,),</span><br><span class="line">            addressContainer,</span><br><span class="line">            buttonsContainer,</span><br><span class="line">            textContainer</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/03/01/第五章：页面布局/demo.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;基础布局处理&lt;/li&gt;
&lt;li&gt;宽高尺寸处理&lt;/li&gt;
&lt;li&gt;列表及表格布局&lt;/li&gt;
&lt;li&gt;其他布局处理&lt;/li&gt;
&lt;li&gt;布局综合示例&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2019/03/01/第五章：页面布局/Arrangement.JPG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2019/03/01/第五章：页面布局/Arrangement2.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Flutter" scheme="https://zanecode6574.github.io/categories/Flutter/"/>
    
    
      <category term="布局" scheme="https://zanecode6574.github.io/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>第四章：Cupertino风格组件</title>
    <link href="https://zanecode6574.github.io/2019/02/27/%E7%AC%AC%E5%9B%9B%E7%AB%A0%EF%BC%9ACupertino%E9%A3%8E%E6%A0%BC%E7%BB%84%E4%BB%B6/"/>
    <id>https://zanecode6574.github.io/2019/02/27/第四章：Cupertino风格组件/</id>
    <published>2019-02-27T08:15:10.000Z</published>
    <updated>2019-02-27T09:41:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Cupertino风格组件即iOS风格组件，主要有CupertinoTabBar、CupertinoPageScaffold、CupertinoTabScaffold、CupertinoTabView等。目前组件库还没有Material Design风格组件丰富。但作为一种补充，可以根据实际场景选择使用即可。</p><p>本章所涉及的组件及内容有：</p><ul><li>CupertinoActivityIndicator组件</li><li>CupertinoAlertDialog对话框组件</li><li>CupertinoButton按钮组件</li><li>Cupertino导航组件集（CupertinoTabBar、CupertinoPageScaffold、CupertinoTabScaffold、CupertinoTabView等）</li></ul><a id="more"></a><h1 id="CupertinoActivityIndicator组件"><a href="#CupertinoActivityIndicator组件" class="headerlink" title="CupertinoActivityIndicator组件"></a>CupertinoActivityIndicator组件</h1><p>CupertinoActivityIndicator是一个IOS风格的loading指示器，通常用在加载等待的效果展示</p><p><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoActivityIndicator.JPG" alt=""></p><ul><li>导入Cupertino组件库</li></ul><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> 'package:flutter/cupertino.dart';</span></span><br></pre></td></tr></table></figure><ul><li>代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'CupertinoActivityIndicator</span>示例',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'CupertinoActivityIndicator</span>示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">CupertinoActivityIndicator</span>(</span><br><span class="line">            radius: <span class="number">60.0</span>, <span class="comment">//值越大加载的图形越大</span></span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoActivityIndicatorDemo.png" alt=""></p><h1 id="CupertinoAlertDialog对话框组件"><a href="#CupertinoAlertDialog对话框组件" class="headerlink" title="CupertinoAlertDialog对话框组件"></a>CupertinoAlertDialog对话框组件</h1><p>CupertinoAlertDialog和Material Design风格里的AlertDialog对话框相似，只是样式不同。共同点是不仅仅有提示内容，还有一些操作按钮，如确定和取消等。内容部分可以用SingleChildScrollView进行包裹。操作按钮建议用CupertinoDialogAction组件，这样显示更协调一些。</p><p><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoAlertDialog.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'CupertinoAlertDialog</span>示例',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'CupertinoAlertDialog</span>示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">CupertinoAlertDialog</span>(</span><br><span class="line">            title: <span class="type">Text</span>('提示'),</span><br><span class="line">            content: <span class="type">SingleChildScrollView</span>(</span><br><span class="line">              child: <span class="type">ListBody</span>(</span><br><span class="line">                children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">                  <span class="type">Text</span>('是否要删除'),</span><br><span class="line">                  <span class="type">Text</span>('一旦删除不可恢复'),</span><br><span class="line">                ],</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            actions: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">              <span class="type">CupertinoDialogAction</span>(</span><br><span class="line">                child: <span class="type">Text</span>('确定'),</span><br><span class="line">                onPressed: ()&#123;&#125;,</span><br><span class="line">              ),</span><br><span class="line"></span><br><span class="line">              <span class="type">CupertinoDialogAction</span>(</span><br><span class="line">                child: <span class="type">Text</span>('取消'),</span><br><span class="line">                onPressed: ()&#123;&#125;,</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoAlertDialogDemo.png" alt=""></p><h1 id="CupertinoButton按钮组件"><a href="#CupertinoButton按钮组件" class="headerlink" title="CupertinoButton按钮组件"></a>CupertinoButton按钮组件</h1><p>IOS风格按钮<br><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoButton.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'CupertinoButton</span>示例',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'CupertinoButton</span>示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">CupertinoButton</span>(child: <span class="type">Text</span>('按钮'), color: <span class="type">Colors</span>.blue,onPressed: ()&#123;&#125;),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoButton.png" alt=""></p><p>这里我发现，onPressed后面如果是null，按钮就会默认不可点击变成灰色，颜色代码也将失效</p><h1 id="Cupertino导航组件集"><a href="#Cupertino导航组件集" class="headerlink" title="Cupertino导航组件集"></a>Cupertino导航组件集</h1><p>Cupertino导航相关的组件也非常丰富。由于它们之间有关联关系，所以本节把导航相关的组件放在一起说明。下面分别说明这些组件的属性及描述。</p><ol><li><p>CupertinoTabScaffold选项卡组件<br><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoTabScaffold.JPG" alt=""></p></li><li><p>CupertinoTabBar选项卡按钮<br><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoTabBar.JPG" alt=""><br><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoTabBarShow.JPG" alt=""></p><p> 选项卡按钮，通常由BottomNavigationBarItem组成包含图标加文本</p></li><li><p>CupertinoTabView<br><img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoTabView.JPG" alt=""></p><p> 选项卡视图</p></li><li><p>CupertinoPageScaffold</p><p> 页面的基本布局结构，包含内容和导航栏<br> <img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoPageScaffold.JPG" alt=""></p></li><li><p>CupertinoNavigationBar</p><p> 导航栏结构组件<br> <img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoNavigationBar.JPG" alt=""><br> <img src="/2019/02/27/第四章：Cupertino风格组件/CupertinoNavigationBarShow.JPG" alt=""></p></li></ol><h2 id="导航栏综合示例"><a href="#导航栏综合示例" class="headerlink" title="导航栏综合示例"></a>导航栏综合示例</h2><ul><li><p>添加最外层导航选项卡，使用CupertinoTabScaffold组件，它有两个属性tabBar和tabBuilder，分别用来绑定底部选项卡及所对应的视图</p></li><li><p>添加底部选项卡按钮，使用CupertinoTabBar组件，需要制定选项卡项，每个项包含一个图标及一个文本</p></li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">tabBar:</span> CupertinoTabBar(</span><br><span class="line"><span class="symbol">items:</span>[</span><br><span class="line">BottomNavigationBarItem(</span><br><span class="line"><span class="comment">//指定图标</span></span><br><span class="line"><span class="comment">//指定文本</span></span><br><span class="line">),</span><br><span class="line"><span class="comment">//根据需要添加更多按钮</span></span><br><span class="line">],</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>每个选项卡需要绑定一个视图，使用CupertinoTabView组件</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">tabBuilder:(context,index)&#123;</span><br><span class="line"><span class="comment">//选项卡绑定的视图</span></span><br><span class="line"><span class="keyword">return</span> CupertinoTabView(</span><br><span class="line">builder:(context)&#123;</span><br><span class="line">switch(index)&#123;</span><br><span class="line">case <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> HomePage();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">case <span class="number">1</span>:</span><br><span class="line"><span class="keyword">return</span> ChatPage();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> Container();</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写一个选项卡页面即主页，命名为HomePage,页面需要一个CupertinoPageScaffold来包裹，指定页面顶部导航内容及内容区域</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomePage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="type">Widget</span> build()&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="type">CupertinoPageScaffold</span>(</span><br><span class="line">navigationBar:</span><br><span class="line"><span class="type">CupertinoNavigationBar</span>(</span><br><span class="line"><span class="comment">//只加标题</span></span><br><span class="line">),</span><br><span class="line">child:<span class="type">Center</span>(</span><br><span class="line"><span class="comment">//内容区域</span></span><br><span class="line">),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编写第二个选项卡页面即聊天页面，将其命名为ChatPage。页面需要一个CupertinoPageScaffold组件来包裹，指定页面顶部导航内容（包含左中右三块），及内容区域。</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChatPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">CupertinoPageScaffold</span>(</span><br><span class="line">      navigationBar: <span class="type">CupertinoNavigationBar</span>(</span><br><span class="line">        <span class="comment">//导航栏 包含左中右三部分</span></span><br><span class="line">      ),</span><br><span class="line">      child: <span class="type">Center</span>(</span><br><span class="line">        <span class="comment">//内容区域</span></span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>完整代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Capertino</span>导航栏组件集',</span><br><span class="line">      theme: <span class="type">ThemeData</span>.light(),</span><br><span class="line">      home: <span class="type">MyPage</span>(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span></span>&#123;</span><br><span class="line">  _MyPageState createState=&gt;_MyPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyPageState</span> <span class="keyword">extends</span> <span class="title">State&lt;MyPage&gt;</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="comment">//最外层导航栏选项卡</span></span><br><span class="line">    <span class="keyword">return</span> <span class="type">CupertinoTabScaffold</span>(</span><br><span class="line">      <span class="comment">//底部选项卡</span></span><br><span class="line">      tabBar: <span class="type">CupertinoTabBar</span>(backgroundColor: <span class="type">CupertinoColors</span>.lightBackgroundGray,items: [</span><br><span class="line">        <span class="comment">//选项卡项，包含图标及文字</span></span><br><span class="line">        <span class="type">BottomNavigationBarItem</span>(</span><br><span class="line">          icon: <span class="type">Icon</span>(<span class="type">CupertinoIcons</span>.home),</span><br><span class="line">          title: <span class="type">Text</span>('主页')</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">        <span class="type">BottomNavigationBarItem</span>(</span><br><span class="line">            icon: <span class="type">Icon</span>(<span class="type">CupertinoIcons</span>.conversation_bubble),</span><br><span class="line">            title: <span class="type">Text</span>('聊天')</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">      ]),</span><br><span class="line"></span><br><span class="line">      tabBuilder: (context,index)&#123;</span><br><span class="line">        <span class="comment">//选项卡绑定的视图</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">CupertinoTabView</span>(</span><br><span class="line">          builder: (context)&#123;</span><br><span class="line">            switch(index)&#123;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="type">HomePage</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="type">ChatPage</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="type">Container</span>();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">        );</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomePage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">CupertinoPageScaffold</span>(</span><br><span class="line">      navigationBar: <span class="type">CupertinoNavigationBar</span>(</span><br><span class="line">        middle: <span class="type">Text</span>('主页'),</span><br><span class="line">      ),</span><br><span class="line">      child: <span class="type">Center</span>(</span><br><span class="line">        child: <span class="type">Text</span>('主页',style: <span class="type">Theme</span>.of(context).textTheme.button,),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChatPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">CupertinoPageScaffold</span>(</span><br><span class="line">      navigationBar: <span class="type">CupertinoNavigationBar</span>(</span><br><span class="line">        <span class="comment">//导航栏，包含左中右三部分</span></span><br><span class="line">        middle: <span class="type">Text</span>('聊天界面'),</span><br><span class="line">        trailing: <span class="type">Icon</span>(<span class="type">CupertinoIcons</span>.add), <span class="comment">//右侧</span></span><br><span class="line">        leading: <span class="type">Icon</span>(<span class="type">CupertinoIcons</span>.back), <span class="comment">//左侧</span></span><br><span class="line">      ),</span><br><span class="line">      child: <span class="type">Center</span>(</span><br><span class="line">        child: <span class="type">Text</span>('聊天面板',style: <span class="type">Theme</span>.of(context).textTheme.button,),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/27/第四章：Cupertino风格组件/Cupertino导航组件合集Demo.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;Cupertino风格组件即iOS风格组件，主要有CupertinoTabBar、CupertinoPageScaffold、CupertinoTabScaffold、CupertinoTabView等。目前组件库还没有Material Design风格组件丰富。但作为一种补充，可以根据实际场景选择使用即可。&lt;/p&gt;
&lt;p&gt;本章所涉及的组件及内容有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CupertinoActivityIndicator组件&lt;/li&gt;
&lt;li&gt;CupertinoAlertDialog对话框组件&lt;/li&gt;
&lt;li&gt;CupertinoButton按钮组件&lt;/li&gt;
&lt;li&gt;Cupertino导航组件集（CupertinoTabBar、CupertinoPageScaffold、CupertinoTabScaffold、CupertinoTabView等）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Flutter" scheme="https://zanecode6574.github.io/categories/Flutter/"/>
    
    
      <category term="Cupertino" scheme="https://zanecode6574.github.io/tags/Cupertino/"/>
    
  </entry>
  
  <entry>
    <title>第三章：Material Design风格组件</title>
    <link href="https://zanecode6574.github.io/2019/02/24/%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%9AMaterial-Design%E9%A3%8E%E6%A0%BC%E7%BB%84%E4%BB%B6/"/>
    <id>https://zanecode6574.github.io/2019/02/24/第三章：Material-Design风格组件/</id>
    <published>2019-02-24T12:17:47.000Z</published>
    <updated>2019-02-25T07:56:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Material Design是由Google推出的全新设计语言，这种设计语言旨在为手机、平板电脑、台式机和其他平台提供更一致、更广泛的外观和感觉。在本书里我们有时把Material Design也称为纸墨设计，Material Design风格是一种非常有质感的设计风格，并会提供一些默认的交互动画。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/Material1.JPG" alt=""><br><img src="/2019/02/24/第三章：Material-Design风格组件/Material2.JPG" alt=""></p><a id="more"></a><h1 id="App结构和导航组件"><a href="#App结构和导航组件" class="headerlink" title="App结构和导航组件"></a>App结构和导航组件</h1><h2 id="MaterialApp-应用组件"><a href="#MaterialApp-应用组件" class="headerlink" title="MaterialApp(应用组件)"></a>MaterialApp(应用组件)</h2><p>MaterialApp代表使用纸墨设计风格的应用，里面包含了其所需要的基本控件。一个完整的Flutter项目就是从MaterialApp这个主组件开始的。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/MaterialApp.JPG" alt=""></p><h3 id="设置主页"><a href="#设置主页" class="headerlink" title="设置主页"></a>设置主页</h3><p>使用home属性设置应用的主页，即整个应用的主组件</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="keyword">new</span> <span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line">  <span class="comment">//整个应用的主组件</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">MyHomePage</span>(),</span><br><span class="line">      title: <span class="symbol">'MaterialApp</span>示例',</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是一个可改变的Widget</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span></span>&#123;</span><br><span class="line">  _MyHomePageState createState()=&gt;<span class="keyword">new</span> _MyHomePageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State&lt;MyHomePage&gt;</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="string">"MaterialApp示例"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">Center</span>(</span><br><span class="line">        child: <span class="type">Text</span>('主页'),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/HomeDemo.png" alt=""></p><h3 id="路由处理"><a href="#路由处理" class="headerlink" title="路由处理"></a>路由处理</h3><p>routes对象是一个Map&lt;String，WidgetBuilder&gt;。当使用Navigator.pushNamed来路由的时候，会在routes查找路由名字，然后使用对应的WidgetBuilder来构造一个带有页面切换动画的MaterialPageRoute。如果应用只有一个界面，则不用设置这个属性，使用home设置这个界面即可。</p><ul><li>通过routes可以给MaterialApp组件初始化一个路由列表，跳转到指定页面</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Navigator</span><span class="selector-class">.pushNamed</span>(context,<span class="string">'/somePage'</span>);</span><br></pre></td></tr></table></figure><ul><li>在MaterialApp组件使用initialRoute属性可以给应用添加一个初始化路由器</li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">routes:&#123;</span><br><span class="line"><span class="string">'/first'</span>:<span class="function"><span class="params">(BuildContext context)</span>=&gt;</span>FirstPage(),</span><br><span class="line"><span class="string">'/second'</span>:<span class="function"><span class="params">(BuildContext context)</span>=&gt;</span>SecondPage(),</span><br><span class="line">&#125;,</span><br><span class="line">initialRoute:<span class="string">'/first'</span>,<span class="regexp">//</span>初始路由页面为first页面</span><br></pre></td></tr></table></figure><ul><li>这里我们添加两个页面，在第一个页面里添加一个Button，当点击Button时路由到第二个页面</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Navigator</span><span class="selector-class">.pushNamed</span>(context,<span class="string">'/second'</span>);</span><br></pre></td></tr></table></figure><ul><li>在第二个页面也添加一个Button，点击以后跳转到第一个页面</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Navigator</span><span class="selector-class">.pushNamed</span>(context,<span class="string">'/first'</span>);</span><br></pre></td></tr></table></figure><ul><li>完整代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="keyword">new</span> <span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line">  <span class="comment">//整个应用的主组件</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">MyHomePage</span>(),</span><br><span class="line">      title: <span class="symbol">'MaterialApp</span>示例',</span><br><span class="line">      routes: &#123;</span><br><span class="line">        '/first':(<span class="type">BuildContext</span> context)=&gt;<span class="type">FirstPage</span>(),</span><br><span class="line">        '/second':(<span class="type">BuildContext</span> context)=&gt;<span class="type">SecondPage</span>(),</span><br><span class="line">      &#125;,</span><br><span class="line">      initialRoute: '/first',</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是一个可改变的Widget</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span></span>&#123;</span><br><span class="line">  _MyHomePageState createState()=&gt;<span class="keyword">new</span> _MyHomePageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State&lt;MyHomePage&gt;</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="string">"MaterialApp示例"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">Center</span>(</span><br><span class="line">        child: <span class="type">Text</span>('主页'),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一个路由页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FirstPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>('这是第一页'),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">Center</span>(</span><br><span class="line">        child: <span class="type">RaisedButton</span>(</span><br><span class="line">          onPressed: ()&#123;</span><br><span class="line">            <span class="type">Navigator</span>.pushNamed(context, '/second');</span><br><span class="line">          &#125;,</span><br><span class="line">          child: <span class="type">Text</span>('这是第一页',style: <span class="type">TextStyle</span>(fontSize: <span class="number">28.0</span>),),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二个路由页面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第一个路由页面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SecondPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>('这是第二页'),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">Center</span>(</span><br><span class="line">        child: <span class="type">RaisedButton</span>(</span><br><span class="line">          onPressed: ()&#123;</span><br><span class="line">            <span class="type">Navigator</span>.pushNamed(context, '/first');</span><br><span class="line">          &#125;,</span><br><span class="line">          child: <span class="type">Text</span>('这是第二页',style: <span class="type">TextStyle</span>(fontSize: <span class="number">28.0</span>),),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里感觉像安卓中的启动另外一个活动，而且上面的代码是不管之前有没有这个活动都会启动一个新的，而不是返回。</p><h3 id="自定义主题"><a href="#自定义主题" class="headerlink" title="自定义主题"></a>自定义主题</h3><p>应用程序的主题，各种定制的颜色都可以设置，用于程序主题切换。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">new</span> <span class="selector-tag">MaterialApp</span>(</span><br><span class="line"><span class="attribute">theme</span>: new ThemeData(</span><br><span class="line"><span class="comment">//主题色</span></span><br><span class="line"><span class="attribute">primarySwatch</span>: Colors.blue,</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="Scaffold-脚手架组件"><a href="#Scaffold-脚手架组件" class="headerlink" title="Scaffold(脚手架组件)"></a>Scaffold(脚手架组件)</h2><p>Scaffold实现了基本的Material Design布局。只要是在Material Design中定义过的单个界面显示的布局组件元素，都可以使用Scaffold来绘制。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/Scaffold.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">    title: <span class="symbol">'Scaffold</span>脚手架组件示例',</span><br><span class="line">    home: <span class="keyword">new</span> <span class="type">LayoutDemo</span>(),</span><br><span class="line">  ));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LayoutDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      <span class="comment">//头部元素，比如左侧返回按钮，中间标题，右侧菜单</span></span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="symbol">'Scaffold</span>脚手架组件示例'),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">//视图内容部分</span></span><br><span class="line">      body: <span class="type">Center</span>(</span><br><span class="line">        child: <span class="type">Text</span>(<span class="symbol">'Scaffol</span>d'),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">//底部导航栏</span></span><br><span class="line">      bottomNavigationBar: <span class="type">BottomAppBar</span>(</span><br><span class="line">        child: <span class="type">Container</span>(height: <span class="number">50.0</span>,),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">//添加fab按钮</span></span><br><span class="line">      floatingActionButton: <span class="keyword">new</span> <span class="type">FloatingActionButton</span>(</span><br><span class="line">        onPressed: ()&#123;&#125;,</span><br><span class="line">        tooltip: '增加',</span><br><span class="line">        child: <span class="type">Icon</span>(<span class="type">Icons</span>.add),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">//fab居中展示</span></span><br><span class="line">      floatingActionButtonLocation: <span class="type">FloatingActionButtonLocation</span>.centerDocked,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>感觉这个比《第一行代码Android》里面的MaterialDesign好用，很简洁就加上了</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/MaterialDemo.png" alt=""></p><h2 id="AppBar（应用按钮组件）"><a href="#AppBar（应用按钮组件）" class="headerlink" title="AppBar（应用按钮组件）"></a>AppBar（应用按钮组件）</h2><p>应用按钮组件有AppBar和SliverAppBar。它们是纸墨设计中的AppBar，也就是Android中的Toolbar。<br>AppBar和SliverAppBar都是继承自StatefulWidget类，都代表Toolbar，两者的区别在于AppBar位置是固定在应用最上面的；而SliverAppBar是可以跟随内容滚动的。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/AppBar1.JPG" alt=""><br><img src="/2019/02/24/第三章：Material-Design风格组件/AppBar2.JPG" alt=""></p><p>AppBar可以显示顶部leading、title和actions等内容。底部通常为选项卡TabBar。flexibleSpace显示在AppBar的下方，高度和AppBar高度一样，可以实现一些特殊的效果，不过该属性通常在SliverAppBar中使用。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/AppBar布局.JPG" alt=""></p><ul><li>示例：在上端左侧显示标题，右侧添加两个按钮</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">    title: <span class="symbol">'AppBar</span>应用按钮示例',</span><br><span class="line">    home: <span class="keyword">new</span> <span class="type">LayoutDemo</span>(),</span><br><span class="line">  ));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LayoutDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="symbol">'AppBar</span>应用示例'),</span><br><span class="line">        actions: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">          <span class="type">IconButton</span>(</span><br><span class="line">            icon: <span class="type">Icon</span>(<span class="type">Icons</span>.search),</span><br><span class="line">            tooltip: '搜索',</span><br><span class="line">            onPressed: ()&#123;&#125;,</span><br><span class="line">          ),</span><br><span class="line"></span><br><span class="line">          <span class="type">IconButton</span>(</span><br><span class="line">            icon: <span class="type">Icon</span>(<span class="type">Icons</span>.add),</span><br><span class="line">            tooltip: '添加',</span><br><span class="line">            onPressed: ()&#123;&#125;,</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/AppBarDemo.png" alt=""></p><h2 id="ButtomNavigationBar（底部导航条组件）"><a href="#ButtomNavigationBar（底部导航条组件）" class="headerlink" title="ButtomNavigationBar（底部导航条组件）"></a>ButtomNavigationBar（底部导航条组件）</h2><p>BottomNavigationBar是底部导航条，可以很容易地在tap之间切换和浏览顶级视图。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/BottomNavigationBar.JPG" alt=""></p><p>BottomNavigationBar通常显示在应用页面底部。由按钮加文字组成，这个可以根据实际应用场景任意组合。按下按钮切换不同的页面。所以它需要一个当前索引来控制当前具体切换的页面。</p><p>接下来是一个示例代码，仿一个聊天软件，底部显示“信息”、“通讯录”及“发现”按钮。这个界面有点像微信的排列方式。按钮是由图标加文本方式，切换不同的按钮，中间显示切换的内容。示例中用到了状态控制，用来控制当前切换按钮的索引值。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        body: <span class="type">MyHomePage</span>(),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span></span>&#123;</span><br><span class="line">  <span class="type">MyHomePage</span>(&#123;<span class="type">Key</span> key&#125;):<span class="keyword">super</span>(key:key);</span><br><span class="line"></span><br><span class="line">  _MyHomePageState createState()=&gt;_MyHomePageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State&lt;MyHomePage&gt;</span></span>&#123;</span><br><span class="line">  int _selectiedIndex=<span class="number">1</span>;<span class="comment">//当前选中项的索引</span></span><br><span class="line">  <span class="keyword">final</span> _widgetOptions=[</span><br><span class="line">    <span class="type">Text</span>(<span class="symbol">'Index</span> <span class="number">0</span>:信息'),</span><br><span class="line">    <span class="type">Text</span>(<span class="symbol">'Index</span> <span class="number">1</span>:通讯录'),</span><br><span class="line">    <span class="type">Text</span>(<span class="symbol">'Index</span> <span class="number">2</span>:发现'),</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="symbol">'ButtomNavigationBar</span>示例'),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">Center</span>(</span><br><span class="line">        child: _widgetOptions.elementAt(_selectiedIndex), <span class="comment">//居中显示某一个文本</span></span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line">      <span class="comment">//底部导航栏按钮，包含图标及文本</span></span><br><span class="line">      bottomNavigationBar: <span class="type">BottomNavigationBar</span>(</span><br><span class="line">        items: &lt;<span class="type">BottomNavigationBarItem</span>&gt;[</span><br><span class="line">          <span class="type">BottomNavigationBarItem</span>(icon: <span class="type">Icon</span>(<span class="type">Icons</span>.chat),title: <span class="type">Text</span>('信息')),</span><br><span class="line">          <span class="type">BottomNavigationBarItem</span>(icon: <span class="type">Icon</span>(<span class="type">Icons</span>.contacts),title: <span class="type">Text</span>('通讯录')),</span><br><span class="line">          <span class="type">BottomNavigationBarItem</span>(icon: <span class="type">Icon</span>(<span class="type">Icons</span>.account_circle),title: <span class="type">Text</span>('发现')),</span><br><span class="line">        ],</span><br><span class="line">        currentIndex: _selectiedIndex,</span><br><span class="line">        fixedColor: <span class="type">Colors</span>.deepPurple,</span><br><span class="line">        onTap: _onItemTapped,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  void _onItemTapped(int index)&#123;</span><br><span class="line">    setState(() &#123;</span><br><span class="line">      _selectiedIndex=index;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/BottomNavigationBarDemo.png" alt=""></p><p>感觉用这个用起来太方便了</p><h2 id="TabBar（水平选项卡及视图组件）"><a href="#TabBar（水平选项卡及视图组件）" class="headerlink" title="TabBar（水平选项卡及视图组件）"></a>TabBar（水平选项卡及视图组件）</h2><p>TabBar是一个显示水平选项卡的Material Design组件，通常需要配套Tab选项组件及TabBarView页面视图组件一起使用。</p><p>TabBar组件常见属性：<br><img src="/2019/02/24/第三章：Material-Design风格组件/TabBar.JPG" alt=""></p><p>Tab组件常见属性:<br><img src="/2019/02/24/第三章：Material-Design风格组件/Tab.JPG" alt=""></p><p>TabBar的选项卡按钮通常显示在应用页面上部</p><ul><li>实现一个TabBar,实现这个示例需要以下几个组件<ul><li>DefaultTabController</li><li>TabBar</li><li>Tab</li><li>TabBarView</li></ul></li></ul><p>在编写示例之前，我们先了解一下<code>DefaultTabController</code>这个组件，它是TabBar和TabBarView的控制器，是关联这两组件的桥梁。</p><p>DefaultTabController的示例代码如下</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main() &#123;</span><br><span class="line">  runApp(<span class="keyword">new</span> <span class="type">DefaultTabControllerSample</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DefaultTabControllerSample</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//选项卡数据</span></span><br><span class="line">  <span class="keyword">final</span> <span class="type">List</span>&lt;<span class="type">Tab</span>&gt; myTabs = &lt;<span class="type">Tab</span>&gt;[</span><br><span class="line">    <span class="type">Tab</span>(text: '选项卡一'),</span><br><span class="line">    <span class="type">Tab</span>(text: '选项卡二'),</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      <span class="comment">//用来组装TabBar及TabBarView</span></span><br><span class="line">      home: <span class="type">DefaultTabController</span>(</span><br><span class="line">        length: myTabs.length,</span><br><span class="line">        child: <span class="type">Scaffold</span>(</span><br><span class="line">          appBar: <span class="type">AppBar</span>(</span><br><span class="line">            <span class="comment">//添加导航栏</span></span><br><span class="line">            bottom: <span class="type">TabBar</span>(</span><br><span class="line">              tabs: myTabs,</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          <span class="comment">//添加导航视图</span></span><br><span class="line">          body: <span class="type">TabBarView</span>(</span><br><span class="line">            children: myTabs.map((<span class="type">Tab</span> tab) &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="type">Center</span>(child: <span class="type">Text</span>(tab.text));</span><br><span class="line">            &#125;).toList(),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/DefaultTabControllerDemo.JPG" alt=""></p><ul><li><p><strong>编写TabBar水平选项卡</strong></p></li><li><p>添加视图数据ItemView，增加title及icon两个数据项</p></li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">class ItemView&#123;</span><br><span class="line">title<span class="comment">;</span></span><br><span class="line">icon<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>组装数据，添加所有选项类目。</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ItemView</span>(<span class="attribute">title</span>:<span class="string">'自驾'</span>,<span class="attribute">icon</span>:Icons.directions_car);</span><br></pre></td></tr></table></figure><ul><li>用List<itemview>组装起来</itemview></li></ul><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">List</span>&lt;ItemView&gt; items=<span class="keyword">const</span>&lt;ItemView&gt;[];</span><br></pre></td></tr></table></figure><ul><li>添加被选中的视图命名为SelectedView，此组件需要传入视图项数据，包含图标及标题，然后通过Column组件居中显示在界面里。</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SelectedView</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="comment">//TODO构造方法</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//视图数据</span></span><br><span class="line">  <span class="keyword">final</span> <span class="type">ItemView</span> item;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">   <span class="comment">//渲染页面 添加图标和文本</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接着添加示例的主体命名为TabBarSample。主要用DefaultTabController来包裹并指定选项卡的数量。接着在AppBar里添加TabBar组件。注意这里的bottom不要理解为底部，应理解为AppBar的按钮部分。TabBar需要设置为可滚动的，因为选项卡子项较多，界面需要滑动才可以显示全。TabBar的子项tabs需要使用迭代器来展示Tab内容。添加好TabBar后再添加视图TabBarView，这里同样也需要使用迭代器来展示选项卡视图。</li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tabs: items.map((ItemView <span class="built_in">item</span>) &#123;</span><br><span class="line"><span class="built_in">    return</span> new Tab(</span><br><span class="line">                 <span class="built_in">text</span>: <span class="built_in">item</span>.title,</span><br><span class="line">                icon: new Icon(<span class="built_in">item</span>.icon),</span><br><span class="line">                );</span><br><span class="line">&#125;).toList(),</span><br></pre></td></tr></table></figure><ul><li>完整代码</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(<span class="keyword">new</span> TabBarDemo());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选项卡的类目</span></span><br><span class="line">const List&lt;ItemView&gt; items=const &lt;ItemView&gt;[</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'自驾'</span>,<span class="string">icon:</span> Icons.directions_car),</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'自行车'</span>,<span class="string">icon:</span> Icons.directions_bike),</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'轮船'</span>,<span class="string">icon:</span> Icons.directions_boat),</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'公交车'</span>,<span class="string">icon:</span> Icons.directions_bus),</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'火车'</span>,<span class="string">icon:</span> Icons.directions_railway),</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'步行'</span>,<span class="string">icon:</span> Icons.directions_walk),</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'步行'</span>,<span class="string">icon:</span> Icons.directions_walk),</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'步行'</span>,<span class="string">icon:</span> Icons.directions_walk),</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'步行'</span>,<span class="string">icon:</span> Icons.directions_walk),</span><br><span class="line">  const ItemView(<span class="string">title:</span> <span class="string">'步行'</span>,<span class="string">icon:</span> Icons.directions_walk),</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItemView</span>&#123;</span></span><br><span class="line">  <span class="keyword">final</span> String title;</span><br><span class="line">  <span class="keyword">final</span> IconData icon;</span><br><span class="line">  const ItemView(&#123;<span class="keyword">this</span>.title,<span class="keyword">this</span>.icon&#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//被选中的视图</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SelectedView</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line">  const SelectedView(&#123;Key key,<span class="keyword">this</span>.item&#125;):<span class="keyword">super</span>(<span class="string">key:</span>key);</span><br><span class="line">  <span class="keyword">final</span> ItemView item;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">final</span> TextStyle textStyle=Theme.of(context).textTheme.display1;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Card(</span><br><span class="line"><span class="symbol">      color:</span> Colors.white,</span><br><span class="line"><span class="symbol">      child:</span> <span class="keyword">new</span> Center(</span><br><span class="line"><span class="symbol">        child:</span> <span class="keyword">new</span> Column(</span><br><span class="line"><span class="symbol">          mainAxisSize:</span> MainAxisSize.min,<span class="comment">//垂直方向最小化处理</span></span><br><span class="line"><span class="symbol">          crossAxisAlignment:</span> CrossAxisAlignment.center,<span class="comment">//水平方向居中对齐</span></span><br><span class="line"><span class="symbol">          children:</span> &lt;Widget&gt;[</span><br><span class="line">            <span class="keyword">new</span> Icon(item.icon,<span class="string">size:</span> <span class="number">128.0</span>,<span class="string">color:</span> textStyle.color),</span><br><span class="line">            <span class="keyword">new</span> Text(item.title,<span class="string">style:</span> textStyle),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TabBarDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MaterialApp(</span><br><span class="line">      <span class="comment">//添加DefaultTabController关联TabBar及TabBarView</span></span><br><span class="line"><span class="symbol">      home:</span> <span class="keyword">new</span> DefaultTabController(</span><br><span class="line"><span class="symbol">        length:</span> items.length,</span><br><span class="line"><span class="symbol">        child:</span> <span class="keyword">new</span> Scaffold(</span><br><span class="line"><span class="symbol">          appBar:</span> <span class="keyword">new</span> AppBar(</span><br><span class="line"><span class="symbol">            title:</span> const Text(<span class="string">'TabBar选项卡示例'</span>),</span><br><span class="line"><span class="symbol">            bottom:</span> <span class="keyword">new</span> TabBar(</span><br><span class="line"><span class="symbol">              isScrollable:</span> <span class="literal">true</span>,</span><br><span class="line"><span class="symbol">              tabs:</span> items.map((ItemView item)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Tab(</span><br><span class="line"><span class="symbol">                  text:</span>item.title,</span><br><span class="line"><span class="symbol">                  icon:</span><span class="keyword">new</span> Icon(item.icon),</span><br><span class="line">                );</span><br><span class="line">              &#125;).toList(),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          <span class="comment">//添加选项卡视图</span></span><br><span class="line"><span class="symbol">          body:</span> <span class="keyword">new</span> TabBarView(</span><br><span class="line"><span class="symbol">              children:</span>items.map((ItemView item)&#123;</span><br><span class="line">                <span class="comment">//迭代器显示选项卡视图</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Padding(</span><br><span class="line"><span class="symbol">                  padding:</span> const EdgeInsets.all(<span class="number">16.0</span>),</span><br><span class="line"><span class="symbol">                  child:</span> <span class="keyword">new</span> SelectedView(</span><br><span class="line"><span class="symbol">                    item:</span>item</span><br><span class="line">                  ),</span><br><span class="line">                );</span><br><span class="line">              &#125;).toList(),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/TabBarDemo.png" alt=""></p><h2 id="Drawer（抽屉组件）"><a href="#Drawer（抽屉组件）" class="headerlink" title="Drawer（抽屉组件）"></a>Drawer（抽屉组件）</h2><p>Drawer可以实现类似抽屉拉出推入的效果。可以从侧边栏拉出导航面板。这样做的好处是，可以把一些功能菜单折叠起来。通常Drawer是和ListView组件组合使用的。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/Drawer.JPG" alt=""></p><p>Drawer组件可以添加头部效果，用以下两个组件可以实现：</p><ul><li>DrawerHeader：展示基本信息。</li><li>UserAccountsDrawerHeader：展示用户头像、用户名、Email等信息。</li></ul><p>DrawerHeader通常用于抽屉中在顶部展示一些基本信息</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/DrawerHead.JPG" alt=""></p><p>UserAccountsDrawerHeader可以设置用户头像、用户名和Email等信息，显示一个符合Material Design规范的drawer header</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/UserAccountsDrawerHeader.JPG" alt=""></p><ul><li>从UserAccountsDrawerHeader的属性及描述来看，我们可以写一个示例来模仿QQ侧边导航栏的效果</li></ul><p>（他这里直接用到了文件中的图片，这里随便搞一张就行了,但是他没有讲如何添加资源图片）</p><ul><li>在项目根目录创建一个images文件夹，编辑<code>pubspec.yaml</code>文件，添加图片资源</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">assets:</span></span><br><span class="line">    - images/<span class="number">1.</span>png</span><br></pre></td></tr></table></figure><ul><li>代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">    title: <span class="symbol">'Drawer</span>抽屉组件示例',</span><br><span class="line">    home: <span class="keyword">new</span> <span class="type">LayoutDemo</span>(),</span><br><span class="line">  ));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LayoutDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="symbol">'Drawer</span>抽屉组件示例'),</span><br><span class="line">      ),</span><br><span class="line"></span><br><span class="line">      drawer: <span class="type">Drawer</span>(</span><br><span class="line">        child: <span class="type">ListView</span>(</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="comment">//设置头像、用户名、Email等</span></span><br><span class="line">            <span class="type">UserAccountsDrawerHeader</span>(</span><br><span class="line">              accountName: <span class="type">Text</span>(<span class="symbol">'ZaneCode657</span>4'),</span><br><span class="line">              accountEmail: <span class="type">Text</span>(<span class="symbol">'zanecode6574</span><span class="meta">@qq</span>.com'),</span><br><span class="line">              currentAccountPicture: <span class="keyword">new</span> <span class="type">CircleAvatar</span>(</span><br><span class="line">                backgroundImage: <span class="keyword">new</span> <span class="type">AssetImage</span>(<span class="string">"images/1.png"</span>),</span><br><span class="line">              ),</span><br><span class="line">              onDetailsPressed: ()&#123;&#125;,</span><br><span class="line">              otherAccountsPictures: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">                <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">                  child: <span class="type">Image</span>.asset(<span class="string">"images/1.png"</span>),</span><br><span class="line">                ),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="keyword">new</span> <span class="type">CircleAvatar</span>(</span><br><span class="line">                child: <span class="type">Icon</span>(<span class="type">Icons</span>.color_lens),</span><br><span class="line">              ),</span><br><span class="line">              title: <span class="type">Text</span>('个性装扮'),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="keyword">new</span> <span class="type">CircleAvatar</span>(</span><br><span class="line">                child: <span class="type">Icon</span>(<span class="type">Icons</span>.color_lens),</span><br><span class="line">              ),</span><br><span class="line">              title: <span class="type">Text</span>('个性'),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="keyword">new</span> <span class="type">CircleAvatar</span>(</span><br><span class="line">                child: <span class="type">Icon</span>(<span class="type">Icons</span>.color_lens),</span><br><span class="line">              ),</span><br><span class="line">              title: <span class="type">Text</span>('装扮'),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/DrawerDemo.png" alt=""></p><h1 id="按钮和提示组件"><a href="#按钮和提示组件" class="headerlink" title="按钮和提示组件"></a>按钮和提示组件</h1><h2 id="FloatingActionButton（悬停按钮组件）"><a href="#FloatingActionButton（悬停按钮组件）" class="headerlink" title="FloatingActionButton（悬停按钮组件）"></a>FloatingActionButton（悬停按钮组件）</h2><p>FloatingActionButton对应一个圆形图标按钮，悬停在内容之上，以展示应用程序中的主要动作，所以非常醒目，类似于iOS系统里的小白点按钮。Floating-Action-Button通常用于Scaffold.floatingActionButton字段</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/FloatingActionButton.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'FloatingActionButton</span>示例',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'FloatingActionButton</span>示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">Text</span>(<span class="symbol">'FloatingActionButton</span>示例',style: <span class="type">TextStyle</span>(fontSize: <span class="number">28.0</span>),),</span><br><span class="line">        ),</span><br><span class="line">        floatingActionButton: <span class="keyword">new</span> <span class="type">Builder</span>(</span><br><span class="line">          builder: (<span class="type">BuildContext</span> context)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">FloatingActionButton</span>(</span><br><span class="line">              child: const <span class="type">Icon</span>(<span class="type">Icons</span>.add),</span><br><span class="line">              tooltip: <span class="string">"请点击"</span>,</span><br><span class="line">              foregroundColor: <span class="type">Colors</span>.white,</span><br><span class="line">              backgroundColor: <span class="type">Colors</span>.blue,</span><br><span class="line">              elevation: <span class="number">7.0</span>,</span><br><span class="line">              highlightElevation: <span class="number">14.0</span>,</span><br><span class="line">              onPressed: ()&#123;</span><br><span class="line">                <span class="type">Scaffold</span>.of(context).showSnackBar(<span class="keyword">new</span> <span class="type">SnackBar</span>(</span><br><span class="line">                  content: <span class="keyword">new</span> <span class="type">Text</span>(<span class="string">"你点击了FloatingActionButton"</span>),</span><br><span class="line">                ));</span><br><span class="line">              &#125;,</span><br><span class="line"></span><br><span class="line">              mini: <span class="literal">false</span>,</span><br><span class="line">              shape: <span class="keyword">new</span> <span class="type">CircleBorder</span>(),</span><br><span class="line">              isExtended: <span class="literal">false</span>,</span><br><span class="line">            );</span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line">        floatingActionButtonLocation: <span class="type">FloatingActionButtonLocation</span>.centerFloat,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/FloatingActionButtonDemo.png" alt=""></p><p>这里实现这个好容易…比起之前的</p><h2 id="FlatButton（扁平按钮组件）"><a href="#FlatButton（扁平按钮组件）" class="headerlink" title="FlatButton（扁平按钮组件）"></a>FlatButton（扁平按钮组件）</h2><p>FlatButton组件是一个扁平的Material Design风格按钮，点击时会有一个阴影效果</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: '扁平按钮组件<span class="type">Demo</span>',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>('扁平按钮组件示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">FlatButton</span>(</span><br><span class="line">            onPressed: ()&#123;&#125;,</span><br><span class="line">            child: <span class="type">Text</span>('扁平化按钮',style: <span class="type">TextStyle</span>(fontSize: <span class="number">24.0</span>),),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/FlatButton.png" alt=""></p><h2 id="PopupMenuButton（弹出菜单组件）"><a href="#PopupMenuButton（弹出菜单组件）" class="headerlink" title="PopupMenuButton（弹出菜单组件）"></a>PopupMenuButton（弹出菜单组件）</h2><p>PopupMenuButton为弹出菜单按钮，一般放在应用页面的右上角，表示有更多的操作。菜单项使用PopupMenuItem组件。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/PopupMenuButton.JPG" alt=""></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单项</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">ConferenceItem</span>&#123;</span></span><br><span class="line">  AddMemeber,LockConference,ModifyLayout,TurnoffAll</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span>&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line"><span class="symbol">      title:</span> <span class="string">'PopupMenuButton示例'</span>,</span><br><span class="line"><span class="symbol">      home:</span> Scaffold(</span><br><span class="line"><span class="symbol">        appBar:</span> AppBar(</span><br><span class="line"><span class="symbol">          title:</span> Text(<span class="string">'PopupMenuButton示例'</span>),</span><br><span class="line">        ),</span><br><span class="line"><span class="symbol">        body:</span> Center(</span><br><span class="line"><span class="symbol">          child:</span> FlatButton(</span><br><span class="line"><span class="symbol">            onPressed:</span> ()&#123;&#125;,</span><br><span class="line"><span class="symbol">            child:</span> PopupMenuButton&lt;ConferenceItem&gt;(</span><br><span class="line"><span class="symbol">              onSelected:</span> (ConferenceItem result)&#123;&#125;,</span><br><span class="line"><span class="symbol">              itemBuilder:</span> (BuildContext context)=&gt;&lt;PopupMenuEntry&lt;ConferenceItem&gt;&gt;[</span><br><span class="line">                const PopupMenuItem&lt;ConferenceItem&gt;(<span class="string">value:</span> ConferenceItem.AddMemeber,<span class="string">child:</span> Text(<span class="string">'添加成员'</span>),),</span><br><span class="line">                const PopupMenuItem&lt;ConferenceItem&gt;(<span class="string">value:</span> ConferenceItem.LockConference,<span class="string">child:</span> Text(<span class="string">'锁定会议'</span>),),</span><br><span class="line">                const PopupMenuItem&lt;ConferenceItem&gt;(<span class="string">value:</span> ConferenceItem.ModifyLayout,<span class="string">child:</span> Text(<span class="string">'修改布局'</span>),),</span><br><span class="line">                const PopupMenuItem&lt;ConferenceItem&gt;(<span class="string">value:</span> ConferenceItem.TurnoffAll,<span class="string">child:</span> Text(<span class="string">'挂断所有'</span>),),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/PopupMenuButtonDemo.png" alt=""></p><h2 id="SimpleDialog"><a href="#SimpleDialog" class="headerlink" title="SimpleDialog"></a>SimpleDialog</h2><p>SimpleDialog组件用于设计简单对话框，可以显示附加的提示或操作。简单对话框通常需要配合SimpleDialogOption组件一起使用</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/SimpleDialog.JPG" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  runApp(MyApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="function">Widget <span class="title">build</span><span class="params">(BuildContext context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">'SimpleDialog组件示例'</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          title: Text(<span class="string">'SimpleDialog示例'</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: Center(</span><br><span class="line">          child: SimpleDialog(</span><br><span class="line">            title: <span class="function"><span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'对话框标题'</span>)</span>,</span></span><br><span class="line"><span class="function">            children: &lt;Widget&gt;[</span></span><br><span class="line"><span class="function">              <span class="title">SimpleDialogOption</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">                onPressed: ()</span></span>&#123;&#125;,</span><br><span class="line">                child: <span class="function"><span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第一行信息'</span>)</span>,</span></span><br><span class="line"><span class="function">              ),</span></span><br><span class="line"><span class="function">              <span class="title">SimpleDialogOption</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">                onPressed: ()</span></span>&#123;&#125;,</span><br><span class="line">                child: <span class="function"><span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第二行信息'</span>)</span>,</span></span><br><span class="line"><span class="function">              ),</span></span><br><span class="line"><span class="function">            ],</span></span><br><span class="line"><span class="function">          ),</span></span><br><span class="line"><span class="function">        ),</span></span><br><span class="line"><span class="function">      ),</span></span><br><span class="line"><span class="function">    )</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/SimpleDialogDemo.png" alt=""></p><p>通常对话框都是某个动作来触发渲染的。比如点击按钮，点击菜单等。所以对话框一般要封装在一个方法里实现。另外这个过程是异步的需要加入async/await处理。</p><h2 id="AlertDialog（提示对话框组件）"><a href="#AlertDialog（提示对话框组件）" class="headerlink" title="AlertDialog（提示对话框组件）"></a>AlertDialog（提示对话框组件）</h2><p>AlertDialog组件比SimpleDialog对话框又复杂一些。不仅仅有提示内容，还有一些操作按钮，如确定和取消等，内容部分可以用SingleChildScrollView进行包裹。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/AlertDialog.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'AlertDialog</span>示例',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'AlertDialog</span>示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">AlertDialog</span>(</span><br><span class="line">            title: <span class="type">Text</span>('提示'),</span><br><span class="line">            content: <span class="type">SingleChildScrollView</span>(</span><br><span class="line">              child: <span class="type">ListBody</span>(</span><br><span class="line">                children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">                  <span class="type">Text</span>('是否要删除？'),</span><br><span class="line">                  <span class="type">Text</span>('一旦删除不可恢复!'),</span><br><span class="line">                ],</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            actions: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">              <span class="type">FlatButton</span>(</span><br><span class="line">                child: <span class="type">Text</span>('确定'),</span><br><span class="line">                onPressed: ()&#123;&#125;,</span><br><span class="line">              ),</span><br><span class="line">              <span class="type">FlatButton</span>(</span><br><span class="line">                child: <span class="type">Text</span>('是的'),</span><br><span class="line">                onPressed: ()&#123;&#125;,</span><br><span class="line">              ),</span><br><span class="line">            ],</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/AlertDialogDemo.png" alt=""></p><h2 id="SnackBar（轻量提示组件）"><a href="#SnackBar（轻量提示组件）" class="headerlink" title="SnackBar（轻量提示组件）"></a>SnackBar（轻量提示组件）</h2><p>SnackBar是一个轻量级消息提示组件，在屏幕的底部显示(这个控件在前面都出现过了)<br><img src="/2019/02/24/第三章：Material-Design风格组件/SnackBar.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Snack</span>测试',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Snack</span>测试'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          child: <span class="type">Text</span>(<span class="symbol">'Snack</span>示例',style: <span class="type">TextStyle</span>(fontSize: <span class="number">28.0</span>),),</span><br><span class="line">        ),</span><br><span class="line">      floatingActionButton: <span class="keyword">new</span> <span class="type">Builder</span>(</span><br><span class="line">        builder: (<span class="type">BuildContext</span> context)&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">FloatingActionButton</span>(</span><br><span class="line">            child: const <span class="type">Icon</span>(<span class="type">Icons</span>.add),</span><br><span class="line">            onPressed: ()&#123;</span><br><span class="line">              <span class="type">Scaffold</span>.of(context).showSnackBar(<span class="keyword">new</span> <span class="type">SnackBar</span>(</span><br><span class="line">                content: <span class="type">Text</span>('显示<span class="type">SnackBar</span>'),</span><br><span class="line">              ));</span><br><span class="line">            &#125;,</span><br><span class="line">            shape: <span class="keyword">new</span> <span class="type">CircleBorder</span>(),</span><br><span class="line">          );</span><br><span class="line">        &#125;,</span><br><span class="line">      ),</span><br><span class="line">        floatingActionButtonLocation: <span class="type">FloatingActionButtonLocation</span>.endFloat,</span><br><span class="line">        <span class="comment">//居中放置，位置可以是左中右</span></span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/SnackBarDemo.png" alt=""></p><h1 id="其他组件（文本框、卡片等）"><a href="#其他组件（文本框、卡片等）" class="headerlink" title="其他组件（文本框、卡片等）"></a>其他组件（文本框、卡片等）</h1><h2 id="TextField（文本框组件）"><a href="#TextField（文本框组件）" class="headerlink" title="TextField（文本框组件）"></a>TextField（文本框组件）</h2><p>只要是应用程序就少不了交互，文本输入是最常见的一种交互方式。TextField组件就是用来做文本输入的组件。注意这个要和Text组件区分开来，Text组件主要用于显示文本，并不接受输入文本。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/TextField.JPG" alt=""></p><p>假设想获取文本内容，仅有输入框还不行，还需要传递controller给TextField。用来监听文本内容的变化，这是一种绑定的机制。</p><ul><li>初如化监听器代码如下所示：</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">final TextEditingController controller = TextEditingController()<span class="comment">;</span></span><br><span class="line">controller.addListener(() &#123;</span><br><span class="line">      //TODO</span><br><span class="line">&#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure><ul><li>绑定监听器代码如下所示：</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">child:</span> TextField(</span><br><span class="line"><span class="symbol">   controller:</span> controller,</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>当你在文本框里输入“hello world”，你会发现在控制台里文字是一个一个打印出来的。原因是监听器只要发现文本内容有发生变化，就会触发回调函数输出内容。输出结果如下：</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">flutter:</span> 你输入的内容为:</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: h</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: he</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: hel</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: hell</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: hello</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: hello</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: hello w</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: hello wo</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: hello wor</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: hello worl</span><br><span class="line"><span class="symbol">flutter:</span> 你输入的内容为: hello world</span><br></pre></td></tr></table></figure><p>接下来可以再给TextField添加一些属性用来做更多的控制，比如最大长度，最大行数，是否自动对焦，内容提交回调等等。最后再给文本框加一些装饰效果，比如填充色，图标等内容。组件的装饰和生活中的装修一样任由个人发挥，这里建议简单大方即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">import</span> <span class="string">'package:flutter/material.dart'</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">void</span> <span class="string">main()&#123;</span></span><br><span class="line">  <span class="string">runApp(MyApp());</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">class</span> <span class="string">MyApp</span> <span class="string">extends</span> <span class="string">StatelessWidget&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">@override</span></span><br><span class="line">  <span class="string">Widget</span> <span class="string">build(BuildContext</span> <span class="string">context)</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">//添加文本编辑控制器，监听文本输入变化</span></span><br><span class="line">    <span class="string">final</span> <span class="string">TextEditingController</span> <span class="string">controller=new</span> <span class="string">TextEditingController();</span></span><br><span class="line">    <span class="string">controller.addListener(()&#123;</span></span><br><span class="line">      <span class="string">print('你输入的内容为：$&#123;controller.text&#125;');</span></span><br><span class="line">    <span class="string">&#125;);</span></span><br><span class="line"></span><br><span class="line">    <span class="string">return</span> <span class="string">MaterialApp(</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">'TextField组件示例'</span><span class="string">,</span></span><br><span class="line"><span class="attr">      home:</span> <span class="string">Scaffold(</span></span><br><span class="line"><span class="attr">        appBar:</span> <span class="string">AppBar(</span></span><br><span class="line"><span class="attr">          title:</span> <span class="string">Text('TextField组件示例'),</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line"><span class="attr">        body:</span> <span class="string">Center(</span></span><br><span class="line"><span class="attr">          child:</span> <span class="string">Padding(</span></span><br><span class="line"><span class="attr">            padding:</span> <span class="string">const</span> <span class="string">EdgeInsets.all(20.0),</span></span><br><span class="line"><span class="attr">            child:</span> <span class="string">TextField(</span></span><br><span class="line">              <span class="string">//绑定</span></span><br><span class="line"><span class="attr">              controller:</span> <span class="string">controller,</span></span><br><span class="line"><span class="attr">              maxLength:</span> <span class="number">30</span><span class="string">,</span></span><br><span class="line"><span class="attr">              maxLines:</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line"><span class="attr">              autocorrect:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">              autofocus:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">              obscureText:</span> <span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">              textAlign:</span> <span class="string">TextAlign.left,</span></span><br><span class="line"><span class="attr">              style:</span> <span class="string">TextStyle(fontSize:</span> <span class="number">28.0</span><span class="string">,color:</span> <span class="string">Colors.blue),</span></span><br><span class="line">              <span class="string">//文本内容改变时回调</span></span><br><span class="line"><span class="attr">              onChanged:</span> <span class="string">(text)&#123;</span></span><br><span class="line">                <span class="string">print('文本内容改变时回调:$&#123;text&#125;');</span></span><br><span class="line">              <span class="string">&#125;,</span></span><br><span class="line">              <span class="string">//内容提交时回调</span></span><br><span class="line"><span class="attr">              onSubmitted:</span> <span class="string">(text)&#123;</span></span><br><span class="line">                <span class="string">print('内容提交时回调:$text');</span></span><br><span class="line">              <span class="string">&#125;,</span></span><br><span class="line"><span class="attr">              enabled:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">              decoration:</span> <span class="string">InputDecoration(</span></span><br><span class="line"><span class="attr">                fillColor:</span> <span class="string">Colors.grey.shade200,</span></span><br><span class="line"><span class="attr">                filled:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">                helperText:</span> <span class="string">'用户名'</span><span class="string">,</span></span><br><span class="line">                <span class="string">//左侧图标</span></span><br><span class="line"><span class="attr">                prefixIcon:</span> <span class="string">Icon(Icons.person),</span></span><br><span class="line">                <span class="string">//右侧文本提示</span></span><br><span class="line"><span class="attr">                suffixText:</span> <span class="string">'用户名'</span><span class="string">,</span></span><br><span class="line">              <span class="string">),</span></span><br><span class="line">            <span class="string">),</span></span><br><span class="line">          <span class="string">),</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line">      <span class="string">),</span></span><br><span class="line">    <span class="string">);</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/TextFieldDemo.png" alt=""></p><h2 id="卡片组件"><a href="#卡片组件" class="headerlink" title="卡片组件"></a>卡片组件</h2><p>Card即卡片组件块，内容可以由大多数类型的Widget构成，但通常与ListTile一起使用。Card有一个child，但它可以是支持多个child的列、行、列表、网格或其他小部件。默认情况下，Card将其大小缩小为0像素。你可以使用SizedBox来限制Card的大小。在Flutter中，Card具有圆角和阴影，这让它看起来有立体感。</p><p><img src="/2019/02/24/第三章：Material-Design风格组件/Card.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main()&#123;</span><br><span class="line">  runApp(<span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">var</span> card=<span class="keyword">new</span> <span class="type">SizedBox</span>(</span><br><span class="line">      height: <span class="number">250</span>,</span><br><span class="line">      child: <span class="keyword">new</span> <span class="type">Card</span>(</span><br><span class="line">        child: <span class="keyword">new</span> <span class="type">Column</span>(</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="keyword">new</span> <span class="type">ListTile</span>(</span><br><span class="line">              title: <span class="type">Text</span>('地址<span class="number">1</span>',style: <span class="keyword">new</span> <span class="type">TextStyle</span>(fontWeight: <span class="type">FontWeight</span>.w300),),</span><br><span class="line">              subtitle: <span class="type">Text</span>('文字<span class="number">2</span>'),</span><br><span class="line">              leading: <span class="keyword">new</span> <span class="type">Icon</span>(</span><br><span class="line">                <span class="type">Icons</span>.home,</span><br><span class="line">                color: <span class="type">Colors</span>.lightBlue,</span><br><span class="line">              ),</span><br><span class="line">        ),</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Divider</span>(),</span><br><span class="line">            <span class="keyword">new</span> <span class="type">ListTile</span>(</span><br><span class="line">              title: <span class="type">Text</span>('地址二',style: <span class="keyword">new</span> <span class="type">TextStyle</span>(</span><br><span class="line">                fontWeight: <span class="type">FontWeight</span>.w300</span><br><span class="line">              ),),</span><br><span class="line">              subtitle: <span class="type">Text</span>('文字二'),</span><br><span class="line">              leading: <span class="keyword">new</span> <span class="type">Icon</span>(<span class="type">Icons</span>.home,color: <span class="type">Colors</span>.lightBlue,),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Divider</span>(),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Card</span>布局示例',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Card</span>布局示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">Center</span>(</span><br><span class="line">          child: card,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/24/第三章：Material-Design风格组件/CardDemo.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;p&gt;Material Design是由Google推出的全新设计语言，这种设计语言旨在为手机、平板电脑、台式机和其他平台提供更一致、更广泛的外观和感觉。在本书里我们有时把Material Design也称为纸墨设计，Material Design风格是一种非常有质感的设计风格，并会提供一些默认的交互动画。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/02/24/第三章：Material-Design风格组件/Material1.JPG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2019/02/24/第三章：Material-Design风格组件/Material2.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Flutter" scheme="https://zanecode6574.github.io/categories/Flutter/"/>
    
    
      <category term="组件" scheme="https://zanecode6574.github.io/tags/%E7%BB%84%E4%BB%B6/"/>
    
      <category term="Material" scheme="https://zanecode6574.github.io/tags/Material/"/>
    
  </entry>
  
  <entry>
    <title>第二章：Flutter常用组件</title>
    <link href="https://zanecode6574.github.io/2019/02/23/%E7%AC%AC%E4%BA%8C%E7%AB%A0%EF%BC%9AFlutter%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/"/>
    <id>https://zanecode6574.github.io/2019/02/23/第二章：Flutter常用组件/</id>
    <published>2019-02-23T06:29:24.000Z</published>
    <updated>2019-02-24T10:09:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>（这前面的章节安排有些问题，比如Scaffold组件就没讲，而是在后面才出现的，这里先用，后面再看就明白了）</p><p>Flutter里有一个非常重要的核心理念：一切皆为组件，Flutter所有的元素皆由组件组成。比如：一个布局元素、一个动画、一个装饰效果等。</p><h1 id="容器组件"><a href="#容器组件" class="headerlink" title="容器组件"></a>容器组件</h1><p>容器组件（Container）包含一个子Widget，自身具备如alignment、padding等基础属性，方便布局过程中摆放child</p><p><img src="/2019/02/23/第二章：Flutter常用组件/Container.JPG" alt=""></p><a id="more"></a><p>padding与margin的不同之处在于，padding是包含在Content内，而margin则是外部边界。设置点击事件的话，padding区域会响应，而margin区域不会响应。</p><ul><li>编写一个带有装饰效果的Container容器</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main()=&gt;runApp(<span class="type">MyApp</span>());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: '容器组件示例',</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>('容器组件示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="type">Center</span>(</span><br><span class="line">          <span class="comment">//添加容器</span></span><br><span class="line">          child: <span class="type">Container</span>(</span><br><span class="line">            width: <span class="number">200.0</span>,</span><br><span class="line">            height: <span class="number">200.0</span>,</span><br><span class="line">            <span class="comment">//添加边框装饰效果</span></span><br><span class="line">            decoration: <span class="type">BoxDecoration</span>(</span><br><span class="line">              color: <span class="type">Colors</span>.white,</span><br><span class="line">              <span class="comment">//设置上下左右四个边框样式</span></span><br><span class="line">              border: <span class="keyword">new</span> <span class="type">Border</span>.all(</span><br><span class="line">                color: <span class="type">Colors</span>.grey,</span><br><span class="line">                width: <span class="number">8.0</span>,</span><br><span class="line">              ),</span><br><span class="line">                borderRadius:</span><br><span class="line">                const <span class="type">BorderRadius</span>.all(const <span class="type">Radius</span>.circular(<span class="number">8.0</span>)),<span class="comment">//边框弧度</span></span><br><span class="line">            ),</span><br><span class="line">        child: <span class="type">Text</span>(</span><br><span class="line">          <span class="symbol">'Flutte</span>r',</span><br><span class="line">          textAlign: <span class="type">TextAlign</span>.center,</span><br><span class="line">          style: <span class="type">TextStyle</span>(fontSize: <span class="number">28.0</span>),</span><br><span class="line">        ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第二章：Flutter常用组件/ContainerTest.png" alt=""></p><h1 id="文本组件"><a href="#文本组件" class="headerlink" title="文本组件"></a>文本组件</h1><p>文本组件（text）负责显示文本和定义显示样式</p><p>接下来我们通过创建多个文本组件来展示不同的文本样式。</p><p><img src="/2019/02/23/第二章：Flutter常用组件/text.JPG" alt=""></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> 'package:flutter/material.dart';</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ContainerDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Scaffold(</span><br><span class="line">      appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">        title: <span class="keyword">new</span> Text(<span class="string">'文本组件'</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="keyword">new</span> Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          <span class="keyword">new</span> Text(<span class="string">'红色+黑色删除线+25号'</span>,style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">            color: <span class="keyword">const</span> Color(<span class="number">0xffff0000</span>),</span><br><span class="line">            decoration: TextDecoration.lineThrough,</span><br><span class="line">            decorationColor: <span class="keyword">const</span> Color(<span class="number">0xff000000</span>),</span><br><span class="line">            fontSize: <span class="number">25.0</span>,</span><br><span class="line">          )),</span><br><span class="line"></span><br><span class="line">          <span class="keyword">new</span> Text(<span class="string">'橙色+下划线+24号'</span>,</span><br><span class="line">          style:<span class="keyword">new</span> TextStyle(</span><br><span class="line">            color: <span class="keyword">const</span> Color(<span class="number">0xffff9900</span>),</span><br><span class="line">            decoration: TextDecoration.underline,</span><br><span class="line">            fontSize: <span class="number">24.0</span>,</span><br><span class="line">          )),</span><br><span class="line"></span><br><span class="line">          <span class="keyword">new</span> Text(<span class="string">'虚线上划线+23号+倾斜'</span>,</span><br><span class="line">          style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">            decoration: TextDecoration.overline,</span><br><span class="line">            decorationStyle: TextDecorationStyle.dashed,</span><br><span class="line">            fontSize: <span class="number">23.0</span>,</span><br><span class="line">            fontStyle: FontStyle.italic,</span><br><span class="line">          ),</span><br><span class="line">          ),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="keyword">new</span> Text(<span class="string">'24号+加粗'</span>,</span><br><span class="line">          style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">            fontSize: <span class="number">24.0</span>,</span><br><span class="line">            fontWeight: FontWeight.bold,</span><br><span class="line">          ),</span><br><span class="line">          )</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  runApp(</span><br><span class="line">    <span class="keyword">new</span> MaterialApp(</span><br><span class="line">      title: <span class="string">'字体测试'</span>,</span><br><span class="line">      home: <span class="keyword">new</span> ContainerDemo(),</span><br><span class="line">    )</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="图标及按钮控件"><a href="#图标及按钮控件" class="headerlink" title="图标及按钮控件"></a>图标及按钮控件</h1><p>图标组件（Icon）为展示图标的组件，该组件不可交互，要实现可交互的图标，可以考虑使用IconButton组件。图标组件相关的组件有以下几个</p><ul><li>IconButton：可交互的Icon。</li><li>Icons：框架自带Icon集合。</li><li>IconTheme：Icon主题。</li><li>ImageIcon：通过AssetImages或者其他图片显示Icon。</li></ul><p><img src="/2019/02/23/第二章：Flutter常用组件/ICON.JPG" alt=""></p><h2 id="图标组件"><a href="#图标组件" class="headerlink" title="图标组件"></a>图标组件</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(</span><br><span class="line">  <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">    title: '图标组件示例',</span><br><span class="line">    home: <span class="keyword">new</span> <span class="type">LayoutDemo</span>(),</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LayoutDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="keyword">new</span> <span class="type">Text</span>('图标组件示例'),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="keyword">new</span> <span class="type">Icon</span>(<span class="type">Icons</span>.phone,color: <span class="type">Colors</span>.green[<span class="number">500</span>],size: <span class="number">80.0</span>,),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第二章：Flutter常用组件/IconDemo.png" alt=""></p><h2 id="图标按钮组件"><a href="#图标按钮组件" class="headerlink" title="图标按钮组件"></a>图标按钮组件</h2><p>图标按钮组件（IconButton）是基于Material Design风格的组件，它可以响应按下事件，并且按下时会带一个水波纹的效果。如果它的onPressed回调函数为null，那么这个按钮处于禁用状态，并且不可以按下。</p><p><img src="/2019/02/23/第二章：Flutter常用组件/IconButton.JPG" alt=""><br><img src="/2019/02/23/第二章：Flutter常用组件/IconButton2.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(</span><br><span class="line">  <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">    title: '图标按钮组件示例',</span><br><span class="line">    home: <span class="keyword">new</span> <span class="type">IconButtonDemo</span>(),</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IconButtonDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="keyword">new</span> <span class="type">Text</span>('图标按钮组件示例'),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="keyword">new</span> <span class="type">Center</span>(</span><br><span class="line">        child: <span class="keyword">new</span> <span class="type">IconButton</span>(</span><br><span class="line">          icon: <span class="type">Icon</span>(<span class="type">Icons</span>.volume_up,size: <span class="number">48.0</span>,),</span><br><span class="line">          tooltip: '按下操作',</span><br><span class="line">          onPressed: ()&#123;</span><br><span class="line">            print('按下操作');</span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第二章：Flutter常用组件/IconButtonDemo.png" alt=""></p><h2 id="凸起按钮组件"><a href="#凸起按钮组件" class="headerlink" title="凸起按钮组件"></a>凸起按钮组件</h2><p>凸起按钮组件（RaisedButton）是Material Design中的button，一个凸起的材质矩形按钮，它可以响应按下事件，并且按下时会带一个触摸的效果。</p><p><img src="/2019/02/23/第二章：Flutter常用组件/RaisedButton.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(</span><br><span class="line">  <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">    title: '图标按钮组件示例',</span><br><span class="line">    home: <span class="keyword">new</span> <span class="type">RaisedButtonDemo</span>(),</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RaisedButtonDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'RaisedButton</span>示例',</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="keyword">new</span> <span class="type">Text</span>(<span class="symbol">'RaisedButton</span>组件示例'),</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">Center</span>(</span><br><span class="line">          child: <span class="keyword">new</span> <span class="type">RaisedButton</span>(onPressed: ()&#123;</span><br><span class="line">            </span><br><span class="line">          &#125;,child: <span class="keyword">new</span> <span class="type">Text</span>(<span class="symbol">'RaisedButton</span>组件',</span><br><span class="line">          style: <span class="keyword">new</span> <span class="type">TextStyle</span>(</span><br><span class="line">            color: <span class="type">Colors</span>.green,</span><br><span class="line">          ),),),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第二章：Flutter常用组件/RaisedButtonDemo.png" alt=""></p><h1 id="列表组件"><a href="#列表组件" class="headerlink" title="列表组件"></a>列表组件</h1><p>列表是前端是最常见的需求。在Flutter中，用ListView来显示列表项，支持垂直和水平方向展示，通过一个属性我们就可以控制其方向，列表有以下分类</p><ul><li>水平的列表</li><li>垂直的列表</li><li>数据量非常大的列表</li><li>矩阵式的列表</li></ul><h2 id="基础列表组件"><a href="#基础列表组件" class="headerlink" title="基础列表组件"></a>基础列表组件</h2><p>基础列表组件为ListView组件</p><p><img src="/2019/02/23/第二章：Flutter常用组件/ListView.JPG" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(</span><br><span class="line">  <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">    title: '图标按钮组件示例',</span><br><span class="line">    home: <span class="keyword">new</span> <span class="type">ListViewDemo</span>(),</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListViewDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">final</span> title='基础列表示例';</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: title,</span><br><span class="line">      home: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(title),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">ListView</span>(</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="type">Icon</span>(<span class="type">Icons</span>.alarm),</span><br><span class="line">              title: <span class="type">Text</span>(<span class="symbol">'Alar</span>m'),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="type">Icon</span>(<span class="type">Icons</span>.alarm),</span><br><span class="line">              title: <span class="type">Text</span>(<span class="symbol">'Alar</span>m'),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="type">Icon</span>(<span class="type">Icons</span>.alarm),</span><br><span class="line">              title: <span class="type">Text</span>(<span class="symbol">'Alar</span>m'),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="type">Icon</span>(<span class="type">Icons</span>.alarm),</span><br><span class="line">              title: <span class="type">Text</span>(<span class="symbol">'Alar</span>m'),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="type">Icon</span>(<span class="type">Icons</span>.alarm),</span><br><span class="line">              title: <span class="type">Text</span>(<span class="symbol">'Alar</span>m'),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="type">Icon</span>(<span class="type">Icons</span>.alarm),</span><br><span class="line">              title: <span class="type">Text</span>(<span class="symbol">'Alar</span>m'),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="type">Icon</span>(<span class="type">Icons</span>.alarm),</span><br><span class="line">              title: <span class="type">Text</span>(<span class="symbol">'Alar</span>m'),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第二章：Flutter常用组件/ListViewDemo.png" alt=""></p><h2 id="水平列表组件"><a href="#水平列表组件" class="headerlink" title="水平列表组件"></a>水平列表组件</h2><p>水平列表组件即为水平方向排列的组件，列表内部元素以水平方向排。把ListView组件的scroll-Direction属性设置为Axis.horizontal即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">import</span> <span class="string">'package:flutter/material.dart'</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line"><span class="string">void</span> <span class="string">main()</span> <span class="string">=&gt;</span> <span class="string">runApp(</span></span><br><span class="line">  <span class="string">new</span> <span class="string">MaterialApp(</span></span><br><span class="line"><span class="attr">    title:</span> <span class="string">'图标按钮组件示例'</span><span class="string">,</span></span><br><span class="line"><span class="attr">    home:</span> <span class="string">new</span> <span class="string">ListViewHorizontalDemo(),</span></span><br><span class="line">  <span class="string">)</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">class</span> <span class="string">ListViewHorizontalDemo</span> <span class="string">extends</span> <span class="string">StatelessWidget&#123;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">@override</span></span><br><span class="line">  <span class="string">Widget</span> <span class="string">build(BuildContext</span> <span class="string">context)</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">final</span> <span class="string">title='水平列表';</span></span><br><span class="line">    <span class="string">return</span> <span class="string">MaterialApp(</span></span><br><span class="line"><span class="attr">      title:</span> <span class="string">title,</span></span><br><span class="line"><span class="attr">      home:</span> <span class="string">Scaffold(</span></span><br><span class="line"><span class="attr">        appBar:</span> <span class="string">new</span> <span class="string">AppBar(</span></span><br><span class="line"><span class="attr">          title:</span> <span class="string">Text(title),</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line"><span class="attr">        body:</span> <span class="string">Container(</span></span><br><span class="line"><span class="attr">          margin:</span> <span class="string">EdgeInsets.symmetric(</span></span><br><span class="line"><span class="attr">            vertical:</span> <span class="number">20.0</span></span><br><span class="line">          <span class="string">),</span></span><br><span class="line"><span class="attr">          height:</span> <span class="number">200.0</span><span class="string">,</span></span><br><span class="line"><span class="attr">          child:</span> <span class="string">ListView(</span></span><br><span class="line"><span class="attr">            scrollDirection:</span> <span class="string">Axis.horizontal,</span></span><br><span class="line"><span class="attr">            children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">              <span class="string">Container(</span></span><br><span class="line"><span class="attr">                width:</span> <span class="number">160.0</span><span class="string">,</span></span><br><span class="line"><span class="attr">                color:</span> <span class="string">Colors.lightBlue,</span></span><br><span class="line">              <span class="string">),</span></span><br><span class="line"></span><br><span class="line">              <span class="string">Container(</span></span><br><span class="line"><span class="attr">                width:</span> <span class="number">160.0</span><span class="string">,</span></span><br><span class="line"><span class="attr">                color:</span> <span class="string">Colors.amber,</span></span><br><span class="line">              <span class="string">),</span></span><br><span class="line"></span><br><span class="line">              <span class="string">Container(</span></span><br><span class="line"><span class="attr">                width:</span> <span class="number">160.0</span><span class="string">,</span></span><br><span class="line"><span class="attr">                color:</span> <span class="string">Colors.green,</span></span><br><span class="line"><span class="attr">                child:</span> <span class="string">Column(</span></span><br><span class="line"><span class="attr">                  children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">                    <span class="string">Text(</span></span><br><span class="line">                      <span class="string">'水平'</span><span class="string">,</span></span><br><span class="line"><span class="attr">                      style:</span> <span class="string">TextStyle(</span></span><br><span class="line"><span class="attr">                        fontWeight:</span> <span class="string">FontWeight.bold,</span></span><br><span class="line"><span class="attr">                        fontSize:</span> <span class="number">36.0</span><span class="string">,</span></span><br><span class="line">                      <span class="string">),</span></span><br><span class="line">                    <span class="string">),</span></span><br><span class="line"></span><br><span class="line">                    <span class="string">Text('列表',</span></span><br><span class="line"><span class="attr">                      style:</span> <span class="string">TextStyle(</span></span><br><span class="line"><span class="attr">                        fontWeight:</span> <span class="string">FontWeight.bold,</span></span><br><span class="line"><span class="attr">                        fontSize:</span> <span class="number">36.0</span><span class="string">,</span></span><br><span class="line">                      <span class="string">),</span></span><br><span class="line">                    <span class="string">),</span></span><br><span class="line"></span><br><span class="line">                    <span class="string">Icon(Icons.list),</span></span><br><span class="line">                  <span class="string">],</span></span><br><span class="line">                <span class="string">),</span></span><br><span class="line">              <span class="string">),</span></span><br><span class="line"></span><br><span class="line">              <span class="string">Container(</span></span><br><span class="line"><span class="attr">                width:</span> <span class="number">160.0</span><span class="string">,</span></span><br><span class="line"><span class="attr">                color:</span> <span class="string">Colors.deepPurpleAccent,</span></span><br><span class="line">              <span class="string">),</span></span><br><span class="line"></span><br><span class="line">              <span class="string">Container(</span></span><br><span class="line"><span class="attr">                width:</span> <span class="number">160.0</span><span class="string">,</span></span><br><span class="line"><span class="attr">                color:</span> <span class="string">Colors.black,</span></span><br><span class="line">              <span class="string">),</span></span><br><span class="line">            <span class="string">],</span></span><br><span class="line">          <span class="string">),</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line">      <span class="string">),</span></span><br><span class="line">    <span class="string">);</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第二章：Flutter常用组件/ListViewHorizontalDemo.png" alt=""></p><h2 id="长列表组件"><a href="#长列表组件" class="headerlink" title="长列表组件"></a>长列表组件</h2><p>长列表用于显示很多项数据，这里需要一个itemBuilder，类似《第一行代码Android》中讲的列表的适配器Adapter</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(</span><br><span class="line">  <span class="keyword">new</span> <span class="type">LongListViewDemo</span>(</span><br><span class="line">    <span class="comment">//使用generate产生500条数据</span></span><br><span class="line">    items: <span class="keyword">new</span> <span class="type">List</span>&lt;<span class="type">String</span>&gt;.generate(<span class="number">500</span>, (i)=&gt;<span class="string">"Item $i"</span>),</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LongListViewDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//列表数据集</span></span><br><span class="line">  <span class="keyword">final</span> <span class="type">List</span>&lt;<span class="type">String</span>&gt; items;</span><br><span class="line"></span><br><span class="line">  <span class="type">LongListViewDemo</span>(&#123;<span class="type">Key</span> key,<span class="meta">@required</span> <span class="keyword">this</span>.items&#125;):<span class="keyword">super</span>(key:key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">final</span> title='长列表示例';</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: title,</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="keyword">new</span> <span class="type">Text</span>(title),</span><br><span class="line">        ),</span><br><span class="line">        <span class="comment">//使用ListView.builder来构造列表项</span></span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">ListView</span>.builder(</span><br><span class="line">          itemCount: items.length,</span><br><span class="line">          <span class="comment">//列表项构造器</span></span><br><span class="line">          itemBuilder: (context,index)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">ListTile</span>(</span><br><span class="line">              leading: <span class="keyword">new</span> <span class="type">Icon</span>(<span class="type">Icons</span>.phone),</span><br><span class="line">              title: <span class="keyword">new</span> <span class="type">Text</span>('$&#123;items[index]&#125;'),</span><br><span class="line">            );</span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第二章：Flutter常用组件/LongListDemo.png" alt=""></p><h2 id="网格列表组件"><a href="#网格列表组件" class="headerlink" title="网格列表组件"></a>网格列表组件</h2><p>数据量很大时用矩阵方式排列比较清晰，此时用网格列表组件，即为GridView组件，可以实现多行多列的应用场景。使用GridView创建网格列表有多种方式</p><ul><li>GridView.count通过单行展示个数创建GridView。</li><li>GridView.extent通过最大宽度创建GridView。</li></ul><p><img src="/2019/02/23/第二章：Flutter常用组件/GridView.JPG" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>=&gt; runApp(<span class="keyword">new</span> GridViewDemo());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GridViewDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="function">Widget <span class="title">build</span><span class="params">(BuildContext context)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> title=<span class="string">'网格列表示例'</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MaterialApp(</span><br><span class="line">      title: title,</span><br><span class="line">      home: <span class="keyword">new</span> Scaffold(</span><br><span class="line">        appBar: <span class="keyword">new</span> AppBar(</span><br><span class="line">          title: <span class="keyword">new</span> Text(title),</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用GridView.count构建网络</span></span><br><span class="line">        body: <span class="keyword">new</span> GridView.count(</span><br><span class="line">          primary: <span class="keyword">false</span>,</span><br><span class="line">          padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">20.0</span>),</span><br><span class="line">          crossAxisSpacing: <span class="number">30.0</span>,</span><br><span class="line">          crossAxisCount: <span class="number">3</span>,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="function"><span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第一行第一列'</span>)</span>,</span></span><br><span class="line"><span class="function">            <span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第一行第二列'</span>)</span>,</span></span><br><span class="line"><span class="function">            <span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第一行第三列'</span>)</span>,</span></span><br><span class="line"><span class="function">            <span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第二行第一列'</span>)</span>,</span></span><br><span class="line"><span class="function">            <span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第二行第二列'</span>)</span>,</span></span><br><span class="line"><span class="function">            <span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第二行第三列'</span>)</span>,</span></span><br><span class="line"><span class="function">            <span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第三行第一列'</span>)</span>,</span></span><br><span class="line"><span class="function">            <span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第三行第二列'</span>)</span>,</span></span><br><span class="line"><span class="function">            <span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="string">'第三行第三列'</span>)</span>,</span></span><br><span class="line"><span class="function">          ],</span></span><br><span class="line"><span class="function">        ),</span></span><br><span class="line"><span class="function">      ),</span></span><br><span class="line"><span class="function">    )</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第二章：Flutter常用组件/GridViewDemo.png" alt=""></p><h1 id="表单组件"><a href="#表单组件" class="headerlink" title="表单组件"></a>表单组件</h1><p>表单是一个包含表单元素的区域。表单元素允许用户输入内容，比如：文本域、下拉列表、单选框、复选框等。常见的应用场景有：登录、注册、输入信息等。表单里有两个重要的组件，一个是Form组件用来做整个表单提交使用的，另一个是TextFormField组件用来做用户输入的。</p><p>（感觉表单这个有点像Web开发里面的玩意儿，这个跟使用Java开发安卓中的EditText不太一样）</p><p><img src="/2019/02/23/第二章：Flutter常用组件/Form.JPG" alt=""></p><p>对于输入框我们最关心的是输入内容是否合法，比如邮箱地址是否正确，电话号码是否是数字，等等。等用户输入完成后，需要知道输入框输入的内容。</p><p>为了获取表单的实例，我们需要设置一个全局类型的key，通过这个key的属性，来获取表单对象。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(<span class="keyword">new</span> <span class="type">LoginPage</span>());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _LoginPageState createState() =&gt;<span class="keyword">new</span> _LoginPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_LoginPageState</span> <span class="keyword">extends</span> <span class="title">State&lt;LoginPage&gt;</span></span>&#123;</span><br><span class="line">  <span class="comment">//全局Key来获取Form表单组件</span></span><br><span class="line">  <span class="type">GlobalKey</span>&lt;<span class="type">FormState</span>&gt; loginKey=<span class="keyword">new</span> <span class="type">GlobalKey</span>&lt;<span class="type">FormState</span>&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="type">String</span> userName,password;</span><br><span class="line"></span><br><span class="line">  void login()&#123;</span><br><span class="line">    <span class="keyword">var</span> loginForm=loginKey.currentState;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(loginForm.validate())&#123;</span><br><span class="line">      loginForm.save();</span><br><span class="line">      print(<span class="symbol">'UserName</span>:'+userName+<span class="string">" Password:"</span>+password);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Form</span>表单示例',</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="keyword">new</span> <span class="type">Text</span>(<span class="symbol">'Form</span>表单示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">Column</span>(</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">              padding: const <span class="type">EdgeInsets</span>.all(<span class="number">16.0</span>),</span><br><span class="line">              child: <span class="keyword">new</span> <span class="type">Form</span>(</span><br><span class="line">                key: loginKey,</span><br><span class="line">                child: <span class="keyword">new</span> <span class="type">Column</span>(</span><br><span class="line">                children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">                  <span class="keyword">new</span> <span class="type">TextFormField</span>(</span><br><span class="line">                    decoration: <span class="keyword">new</span> <span class="type">InputDecoration</span>(</span><br><span class="line">                      labelText: '请输入用户名',</span><br><span class="line">                    ),</span><br><span class="line">                    onSaved: (value)&#123;</span><br><span class="line">                      userName=value;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    onFieldSubmitted: (value)&#123;&#125;,</span><br><span class="line">                  ),</span><br><span class="line">                  <span class="keyword">new</span> <span class="type">TextFormField</span>(</span><br><span class="line">                    decoration: <span class="keyword">new</span> <span class="type">InputDecoration</span>(</span><br><span class="line">                      labelText: '请输入密码',</span><br><span class="line">                    ),</span><br><span class="line">                    obscureText: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">                    validator: (value)&#123;</span><br><span class="line">                      <span class="keyword">return</span> value.length&lt;<span class="number">6</span> ? <span class="string">"密码长度不够6位"</span> : <span class="literal">null</span>;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    onSaved: (value)&#123;</span><br><span class="line">                      password=value;</span><br><span class="line">                    &#125;,</span><br><span class="line">                  )</span><br><span class="line">                ],</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> <span class="type">SizedBox</span>(</span><br><span class="line">              width: <span class="number">340.0</span>,</span><br><span class="line">              height: <span class="number">42.0</span>,</span><br><span class="line">              child: <span class="keyword">new</span> <span class="type">RaisedButton</span>(</span><br><span class="line">                onPressed: login,</span><br><span class="line">                child: <span class="keyword">new</span> <span class="type">Text</span>(</span><br><span class="line">                  '登陆',</span><br><span class="line">                  style: <span class="type">TextStyle</span>(</span><br><span class="line">                    fontSize: <span class="number">18.0</span>,</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第二章：Flutter常用组件/FormDemo.png" alt=""></p><p>到了这里都还是很懵逼的，代码结构不是很习惯看起来有点费力</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（这前面的章节安排有些问题，比如Scaffold组件就没讲，而是在后面才出现的，这里先用，后面再看就明白了）&lt;/p&gt;
&lt;p&gt;Flutter里有一个非常重要的核心理念：一切皆为组件，Flutter所有的元素皆由组件组成。比如：一个布局元素、一个动画、一个装饰效果等。&lt;/p&gt;
&lt;h1 id=&quot;容器组件&quot;&gt;&lt;a href=&quot;#容器组件&quot; class=&quot;headerlink&quot; title=&quot;容器组件&quot;&gt;&lt;/a&gt;容器组件&lt;/h1&gt;&lt;p&gt;容器组件（Container）包含一个子Widget，自身具备如alignment、padding等基础属性，方便布局过程中摆放child&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/02/23/第二章：Flutter常用组件/Container.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Flutter" scheme="https://zanecode6574.github.io/categories/Flutter/"/>
    
    
      <category term="常用组件" scheme="https://zanecode6574.github.io/tags/%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>第一章：Flutter基础知识</title>
    <link href="https://zanecode6574.github.io/2019/02/23/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9AFlutter%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://zanecode6574.github.io/2019/02/23/第一章：Flutter基础知识/</id>
    <published>2019-02-23T05:21:37.000Z</published>
    <updated>2019-02-23T06:27:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="Flutter特点"><a href="#Flutter特点" class="headerlink" title="Flutter特点"></a>Flutter特点</h2><ul><li>跨平台：现在Flutter至少可以跨5种平台，甚至支持嵌入式开发。我们常用的有MacOS、Windows、Linux、Android、iOS，甚至可以在谷歌最新的操作系统Fuchsia上运行。到目前为止，Flutter算是支持平台最多的框架了，良好的跨平台性，直接带来的好处就是减少开发成本。</li><li>丝滑般的体验：使用Flutter内置高大上的Material Design和Cupertino风格组件、丰富的motion API、平滑而自然的滑动效果和平台感知，为用户带来全新体验。</li><li>响应式框架：使用Flutter的、响应式框架和一系列基础组件，可以轻松构建用户界面。使用功能强大且灵活的API（针对2D、动画、手势、效果等）能解决艰难的UI挑战。</li><li>支持插件：通过Flutter的插件可以访问平台本地API，如相机、蓝牙、WiFi等。借助现有的Java、Swift、Objective C、C++代码实现对原生系统的调用。</li><li>60fps超高性能：Flutter采用GPU渲染技术，所以性能极高。Flutter编写的应用是可以达到60fps（每秒传输帧数），这也就是说，它完全可以胜任游戏的制作。官方宣称用Flutter开发的应用甚至会超过原生应用的性能。</li></ul><a id="more"></a><h3 id="一切皆为组件"><a href="#一切皆为组件" class="headerlink" title="一切皆为组件"></a>一切皆为组件</h3><p>组件（Widget）是Flutter应用程序用户界面的基本构建块。不仅按钮、输入框、卡片、列表这些内容可作为Widget，甚至将布局方式、动画处理都视为Widget。所以Flutter具有一致的统一对象模型：Widget。</p><p>Widget可以定义为：</p><ul><li>一个界面组件（如按钮或输入框）。</li><li>一个文本样式（如字体或颜色）。</li><li>一种布局（如填充或滚动）。</li><li>一种动画处理（如缓动）。</li><li>一种手势处理（GestureDetector）。</li></ul><p>Widget具有丰富的属性及方法，属性通常用来改变组件的状态（颜色、大小等）及回调方法的处理（单击事件回调、手势事件回调等）。方法主要是提供一些组件的功能扩展。比如：TextBox是一个矩形的文本组件，其属性及方法如下：</p><ul><li>bottom：底部间距属性。</li><li>direction：文本排列方向属性。</li><li>left：左侧间距属性。</li><li>right：右侧间距属性。</li><li>top：上部间距属性。</li><li>toRect：导出矩形方法。</li><li>toString：转换成字符串方法。</li></ul><h3 id="组件嵌套"><a href="#组件嵌套" class="headerlink" title="组件嵌套"></a>组件嵌套</h3><p>复杂的功能界面通常都是由一个一个简单功能的组件组装完成的。有的组件负责布局，有的负责定位，有的负责调整大小，有的负责渐变处理，等等。这种嵌套组合的方式带来的最大好处就是解耦。</p><p>例如，界面中添加了一个居中组件Center，居中组件里嵌套了一个容器组件Container，容器组件里嵌套了一个文本组件Text和一个装饰器BoxDecoration。代码如下</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Center(</span><br><span class="line">  <span class="comment">//添加容器</span></span><br><span class="line">  child: <span class="keyword">new</span> Container(</span><br><span class="line">    <span class="comment">//添加装饰器</span></span><br><span class="line">    decoration: <span class="keyword">new</span> BoxDecoration(</span><br><span class="line">    ),</span><br><span class="line">    child: <span class="keyword">new</span> Text(</span><br><span class="line">    <span class="comment">//添加文本组件</span></span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p>最基础的组件类是Widget，其他所有的组件都是继承Widget的，如图1-1所示。紧接着下面有两大类组件：有状态组件及无状态组件。有状态组件是界面会发生变化的组件，如Scrollable、Animatable等，无状态的组件即界面不发生变化的组件，如Text、AssetImage等。</p><p><img src="/2019/02/23/第一章：Flutter基础知识/类层次结构.JPG" alt="类层次结构"></p><h3 id="构建Widget"><a href="#构建Widget" class="headerlink" title="构建Widget"></a>构建Widget</h3><p>可以重写Widget的build方法来构建一个组件，如下代码<br>￼<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@protected Widget <span class="keyword">build(BuildContext </span><span class="built_in">context</span>)<span class="comment">;</span></span><br><span class="line">￼</span><br></pre></td></tr></table></figure></p><p>build即为创建一个Widget的意思，返回值也是一个Widget对象，不管返回的是单个组件还是返回通过嵌套的方式组合的组件，都是Widget的实例。</p><h3 id="处理用户交互"><a href="#处理用户交互" class="headerlink" title="处理用户交互"></a>处理用户交互</h3><p>如果Widget需要根据用户交互或其他因素进行更改，则该Widget是有状态的。例如，如果一个Widget的计数器在用户点击一个按钮时递增，那么该计数器的值就是该Widget的状态。当该值发生变化时，需要重新构建Widget以更新UI。</p><p>这些Widget将继承StatefulWidget（而不是State）并将它们的可变状态存储在State的子类中</p><p><img src="/2019/02/23/第一章：Flutter基础知识/有状态Wiget继承示意图.JPG" alt="有状态Wiget继承示意图"></p><p>每当你改变一个State对象时（例如增加计数器），必须调用setState（）来通知框架，框架会再次调用State的构建方法来更新用户界面。</p><p>有了独立的状态和Widget对象，其他Widget可以以同样的方式处理无状态和有状态的Widget，而不必担心丢失状态。父Widget可以自由地创造子Widget的新实例且不会失去子Widget的状态，而不是通过持有子Widget来维持其状态。框架在适当的时候完成查找和重用现有状态对象的所有工作。</p><h3 id="什么是状态"><a href="#什么是状态" class="headerlink" title="什么是状态"></a>什么是状态</h3><p>Flutter中的状态和React中的状态概念一致。React的核心思想是组件化的思想，应用由组件搭建而成，而组件中最重要的概念是State（状态），State是一个组件的UI数据模型，是组件渲染时的数据依据。Flutter程序的运行可以认为是一个巨大的状态机，用户的操作、请求API和系统事件的触发都是推动状态机运行的触发点，触发点通过调用setState方法推动状态机进行响应。状态的生命周期如图</p><p><img src="/2019/02/23/第一章：Flutter基础知识/状态的生命周期.JPG" alt="有状态Wiget继承示意图"></p><h3 id="分层的框架"><a href="#分层的框架" class="headerlink" title="分层的框架"></a>分层的框架</h3><p>Flutter框架是一个分层的结构，每一层都建立在前一层之上。图1-4显示了Flutter框架，上层比下层的使用频率更高。</p><p>有关构成Flutter分层框架的完整库，请参阅<a href="https://docs.flutter.io/" target="_blank" rel="noopener">官方的API文档</a></p><p>分层设计的目标是帮助开发者用更少的代码做更多的事情。例如，Material层通常组合来自Widget层的基本Widget，而Widget层通过较低级对象渲染层来构建。</p><p>分层结构为构建应用程序提供了许多选项。选择一种自定义的方法来释放框架的全部表现力，或者使用构件层中的构建块，或混合搭配。可以使用Flutter提供的所有现成的Widget，也可以使用Flutter团队用于构建框架的相同工具和技术创建定制的Widget。也就是说，你可以从高层次、统一的Widget概念中获得开发效率优势，也可以深入到下层施展才能。</p><p><img src="/2019/02/23/第一章：Flutter基础知识/Flutter框架.JPG" alt="有状态Wiget继承示意图"></p><h2 id="开发环境搭建"><a href="#开发环境搭建" class="headerlink" title="开发环境搭建"></a>开发环境搭建</h2><p>可以参考这里的教程<a href="https://codelabs.flutter-io.cn/codelabs/first-flutter-app-pt1-cn/index.html#0" target="_blank" rel="noopener">codelabs.flutter-io.cn</a></p><h2 id="Dart语言"><a href="#Dart语言" class="headerlink" title="Dart语言"></a>Dart语言</h2><p>Flutter使用的是Dart语言来开发的，关于Dart语言的学习可以自己搜索。</p><h1 id="入口程序"><a href="#入口程序" class="headerlink" title="入口程序"></a>入口程序</h1><p>每一个Flutter项目的/lib目录下都有一个main.dart文件，打开该文件，里面应该有一个main（）函数。Flutter使用Dart语言开发，而在Dart语言中，main（）函数是Dart程序的入口，也就是说，Flutter程序在运行的时候，第一个执行的函数就是main（）函数。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void main() =&gt; runApp(<span class="name">Wiget</span> app)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>main（）函数中只调用runApp函数，使用runApp函数可以将给定的根组件填满整个屏幕。如果不调用runApp函数，项目也可以正常执行，但是屏幕上什么都不会显示。Flutter是Dart语言的移动应用框架，runApp函数就是Flutter框架的入口，如果不调用runApp函数，那你执行的就是一个Dart控制台应用。</p><h1 id="Material-Design风格"><a href="#Material-Design风格" class="headerlink" title="Material Design风格"></a>Material Design风格</h1><p>每一个.dart文件的第一行几乎都会导入flutter/material.dart包，这个包是Flutter实现Material Design设计风格的基础包，里面有文本输入框（Text）、图标（Icon）、图片（Image）、行排列布局（Row）、列排列布局（Column）、Decoration（装饰器）、动画等组件，大家可以将它们理解为网页中的按钮、标题、选项框等组件库。</p><p>第一行代码如下所示：<br>￼<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> 'package:flutter/material.dart';</span> </span><br><span class="line">￼</span><br></pre></td></tr></table></figure></p><p>那么Material Design是谷歌推出的一套视觉设计语言。比如有的App可以换皮肤，而每一套皮肤就是一种设计语言，有古典风、炫酷风、极简风，等等，而Material Design就是谷歌风。Flutter采用的就是Material Design风格。</p><h1 id="Flutter主题"><a href="#Flutter主题" class="headerlink" title="Flutter主题"></a>Flutter主题</h1><p>为了在整个应用中使用同一套颜色和字体样式，可以使用“主题”这种方式。定义主题有两种方式：全局主题，或使用Theme来定义应用程序局部的颜色和字体样式。事实上，全局主题只是由应用程序根MaterialApp创建的主题（Theme）。</p><p>定义一个主题后，就可以在我们自己的Widget中使用它，Flutter提供的Material Widgets将使用主题为AppBars、Buttons、Checkboxes等设置背景颜色和字体样式。</p><h2 id="创建应用主题"><a href="#创建应用主题" class="headerlink" title="创建应用主题"></a>创建应用主题</h2><p>创建主题的方法是将ThemeData提供给MaterialApp构造函数，这样就可以在整个应用程序中共享包含颜色和字体样式的主题。</p><p><img src="/2019/02/23/第一章：Flutter基础知识/ThemeData.JPG" alt="ThemeData属性及描述"><br><img src="/2019/02/23/第一章：Flutter基础知识/ThemeData2.JPG" alt="ThemeData属性及描述"></p><p>如果没有提供主题，Flutter会创建一个默认主题</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">new</span> <span class="selector-tag">MaterialApp</span>(</span><br><span class="line">  <span class="attribute">title</span>: title,</span><br><span class="line">  <span class="attribute">theme</span>: new ThemeData(</span><br><span class="line">    <span class="attribute">brightness</span>: Brightness.dark,</span><br><span class="line">    <span class="attribute">primaryColor</span>: Colors.lightBlue[<span class="number">800</span>],</span><br><span class="line">    <span class="attribute">accentColor</span>: Colors.cyan[<span class="number">600</span>],</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="局部主题"><a href="#局部主题" class="headerlink" title="局部主题"></a>局部主题</h2><p>如果我们想在应用程序的某一部分使用特殊的颜色，那么就需要覆盖全局的主题。</p><h3 id="创建特有的主题数据"><a href="#创建特有的主题数据" class="headerlink" title="创建特有的主题数据"></a>创建特有的主题数据</h3><ul><li>实例化一个ThemeData并将其传递给Theme对象</li></ul><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">new Theme(</span><br><span class="line">  //创建一个特有的主题数据</span><br><span class="line">  data: new ThemeData(</span><br><span class="line">    accentColor: Colors.yellow,</span><br><span class="line">  ),</span><br><span class="line">  child: new FloatingActionButton(</span><br><span class="line">    onPressed: () &#123;&#125;,</span><br><span class="line">    child: new Icon(<span class="name">Icons</span>.add),</span><br><span class="line">  ),</span><br><span class="line">)<span class="comment">;</span></span><br></pre></td></tr></table></figure><h3 id="扩展父主题"><a href="#扩展父主题" class="headerlink" title="扩展父主题"></a>扩展父主题</h3><p>扩展父主题时无须覆盖所有的主题属性，我们可以通过使用copyWith方法来实现，代码如下：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">new Theme(</span><br><span class="line">  //覆盖accentColor为Colors.yellow</span><br><span class="line">  data: Theme.of(<span class="name">context</span>).copyWith(<span class="name">accentColor</span>: Colors.yellow),</span><br><span class="line">  child: new FloatingActionButton(</span><br><span class="line">    onPressed: null,</span><br><span class="line">    child: new Icon(<span class="name">Icons</span>.add),</span><br><span class="line">  ),</span><br><span class="line">)<span class="comment">;</span></span><br></pre></td></tr></table></figure><h2 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h2><p>首先，函数Theme.of（context）可以通过上下文来获取主题，方法是查找最近的主题，如果找不到就会找整个应用的主题。</p><p>下面来看一个简单的示例，应用的主题颜色定义为绿色，界面中间再加一个带有背景色的文本。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/foundation.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main() &#123;</span><br><span class="line">  runApp(<span class="keyword">new</span> <span class="type">MyApp</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">final</span> appName = '自定义主题';</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: appName,</span><br><span class="line">      theme: <span class="keyword">new</span> <span class="type">ThemeData</span>(</span><br><span class="line">        brightness: <span class="type">Brightness</span>.light,<span class="comment">//应用程序整体主题的亮度</span></span><br><span class="line">        primaryColor: <span class="type">Colors</span>.lightGreen[<span class="number">600</span>],<span class="comment">//App主要部分的背景色</span></span><br><span class="line">        accentColor: <span class="type">Colors</span>.orange[<span class="number">600</span>],<span class="comment">//前景色（文本、按钮等）</span></span><br><span class="line">      ),</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">MyHomePage</span>(</span><br><span class="line">        title: appName,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="type">String</span> title;</span><br><span class="line"></span><br><span class="line">  <span class="type">MyHomePage</span>(&#123;<span class="type">Key</span> key, <span class="meta">@required</span> <span class="keyword">this</span>.title&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line"><span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="keyword">new</span> <span class="type">Text</span>(title),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="keyword">new</span> <span class="type">Center</span>(</span><br><span class="line">        child: <span class="keyword">new</span> <span class="type">Container</span>(</span><br><span class="line">          <span class="comment">//获取主题的accentColor</span></span><br><span class="line">          color: <span class="type">Theme</span>.of(context).accentColor,</span><br><span class="line">          child: <span class="keyword">new</span> <span class="type">Text</span>(</span><br><span class="line">            '带有背景颜色的文本组件',</span><br><span class="line">            style: <span class="type">Theme</span>.of(context).textTheme.title,</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">      floatingActionButton: <span class="keyword">new</span> <span class="type">Theme</span>(</span><br><span class="line">        <span class="comment">//使用copyWith的方式获取accentColor</span></span><br><span class="line">        data: <span class="type">Theme</span>.of(context).copyWith(accentColor: <span class="type">Colors</span>.grey),</span><br><span class="line">        child: <span class="keyword">new</span> <span class="type">FloatingActionButton</span>(</span><br><span class="line">          onPressed: <span class="literal">null</span>,</span><br><span class="line">          child: <span class="keyword">new</span> <span class="type">Icon</span>(<span class="type">Icons</span>.computer),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/02/23/第一章：Flutter基础知识/Result1.JPG" alt="ThemeData属性及描述"></p><h1 id="无状态组件和有状态组件"><a href="#无状态组件和有状态组件" class="headerlink" title="无状态组件和有状态组件"></a>无状态组件和有状态组件</h1><p>无状态组件（StatelessWidget）是不可变的，这意味着它们的属性不能改变，所有的值都是最终的。</p><p>有状态组件（StatefulWidget）持有的状态可能在Widget生命周期中发生变化。实现一个StatefulWidget至少需要两个类</p><ul><li>一个StatefulWidget类。</li><li>一个State类。StatefulWidget类本身是不变的，但是State类在Widget生命周期中始终存在。</li></ul><p><img src="/2019/02/23/第一章：Flutter基础知识/Flutter官方示例.JPG" alt="ThemeData属性及描述"></p><ul><li>示例代码中MyHomePage必须继承自StatefulWidget类</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span></span></span><br></pre></td></tr></table></figure><ul><li>重写createState方法</li></ul><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">override</span></span><br><span class="line"><span class="function">MyHomePageState <span class="title">createState</span>(<span class="params"></span>)</span> =&gt; <span class="keyword">new</span> _MyHomePageState();</span><br></pre></td></tr></table></figure><ul><li>状态类必须继承自State类</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State&lt;MyHomePage&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>定义一个普通变量<code>_counter</code>作为计数器变量，调用setState方法来控制这个变量的值的变化，如下所示：</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> _counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">_incrementCounter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  setState(() &#123;</span><br><span class="line">    <span class="comment">//计数器变量</span></span><br><span class="line">    _counter++;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>完整的示例代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(<span class="keyword">new</span> <span class="type">MyApp</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">//MyApp不需要做状态处理，所以此组件继承StatelessWidget即可</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 这个组件是整个应用的主组件</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Flutter</span> <span class="type">Demo</span>',</span><br><span class="line">      theme: <span class="keyword">new</span> <span class="type">ThemeData</span>(</span><br><span class="line">        <span class="comment">//自定义主题</span></span><br><span class="line">        primarySwatch: <span class="type">Colors</span>.blue,</span><br><span class="line">      ),</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">MyHomePage</span>(title: <span class="symbol">'Flutter</span> <span class="type">Demo</span> <span class="type">Home</span> <span class="type">Page</span>'),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主页需要继承自StatefulWidget</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="type">MyHomePage</span>(&#123;<span class="type">Key</span> key, <span class="keyword">this</span>.title&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//标题</span></span><br><span class="line">  <span class="keyword">final</span> <span class="type">String</span> title;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//必须重写createState方法</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _MyHomePageState createState() =&gt; <span class="keyword">new</span> _MyHomePageState();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//状态类必须继承State类,注意后面需要指定为&lt;MyHomePage&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State&lt;MyHomePage&gt;</span> </span>&#123;</span><br><span class="line">  int _counter = <span class="number">0</span>;<span class="comment">//计数器</span></span><br><span class="line"></span><br><span class="line">  void _incrementCounter() &#123;</span><br><span class="line">    <span class="comment">//调用State类里的setState方法来更改状态值，使得计数器加1</span></span><br><span class="line">    setState(() &#123;</span><br><span class="line">      <span class="comment">//计数器变量，每次点击让其加1</span></span><br><span class="line">      _counter++;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="keyword">new</span> <span class="type">Text</span>(widget.title),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">//居中布局</span></span><br><span class="line">      body: <span class="keyword">new</span> <span class="type">Center</span>(</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//垂直布局</span></span><br><span class="line">        child: <span class="keyword">new</span> <span class="type">Column</span>(</span><br><span class="line">          <span class="comment">//主轴居中对齐</span></span><br><span class="line">          mainAxisAlignment: <span class="type">MainAxisAlignment</span>.center,</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Text</span>(</span><br><span class="line">              <span class="symbol">'You</span> have pushed the button <span class="keyword">this</span> many times:',</span><br><span class="line">            ),</span><br><span class="line">            <span class="keyword">new</span> <span class="type">Text</span>(</span><br><span class="line">              '$_counter',<span class="comment">//绑定计数器的值</span></span><br><span class="line">              style: <span class="type">Theme</span>.of(context).textTheme.display1,</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),...</span><br></pre></td></tr></table></figure><h1 id="使用包资源"><a href="#使用包资源" class="headerlink" title="使用包资源"></a>使用包资源</h1><h2 id="包仓库"><a href="#包仓库" class="headerlink" title="包仓库"></a>包仓库</h2><p>所有包（package）都会发布到<a href="https://pub.dartlang.org" target="_blank" rel="noopener">Dart的包仓库</a></p><h2 id="包的使用"><a href="#包的使用" class="headerlink" title="包的使用"></a>包的使用</h2><ul><li><p>打开pubspec.yaml文件，在dependencies下添加包的名称及版本<br><img src="/2019/02/23/第一章：Flutter基础知识/dependencies.JPG" alt=""></p></li><li><p>点击Packages get</p></li><li>打开main.dart文件，导入包</li></ul><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> 'package:url_launcher/url_launcher.dart';</span></span><br></pre></td></tr></table></figure><h1 id="Http请求"><a href="#Http请求" class="headerlink" title="Http请求"></a>Http请求</h1><p>HTTP协议通常用于做前后端的数据交互。Flutter请求网络有两种方法，一种是用Http请求，另一种是用HttpClient请求。</p><ul><li>Http请求方式</li></ul><p>在使用Http方式请求网络时，需要导入http包</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> http;</span><br></pre></td></tr></table></figure><p>请看下面的完整示例代码，示例中发起了一个http的get请求，并将返回的结果信息打印到控制台里：</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:http/http.dart' as http;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void main() =&gt; runApp(<span class="keyword">new</span> <span class="type">MyApp</span>());</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'http</span>请求示例',</span><br><span class="line">      home: <span class="keyword">new</span> <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="keyword">new</span> <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="keyword">new</span> <span class="type">Text</span>(<span class="symbol">'http</span>请求示例'),</span><br><span class="line">        ),</span><br><span class="line">        body: <span class="keyword">new</span> <span class="type">Center</span>(</span><br><span class="line">          child: <span class="keyword">new</span> <span class="type">RaisedButton</span>(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">var</span> url = <span class="symbol">'http</span>:<span class="comment">//httpbin.org/';</span></span><br><span class="line">              <span class="comment">//向http://httpbin.org/发送get请求</span></span><br><span class="line">              http.get(url).then((response) &#123;</span><br><span class="line">                print(<span class="string">"状态： $&#123;response.statusCode&#125;"</span>);</span><br><span class="line">                print(<span class="string">"正文： $&#123;response.body&#125;"</span>);</span><br><span class="line">              &#125;);</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            child: <span class="keyword">new</span> <span class="type">Text</span>('发起http请求'),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>￼</p><ul><li>点击“发起http请求”按钮，程序开始请求指定的url，如果服务器正常返回数据，则状态码为200。控制台输出内容如下：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Performing hot reload...</span><br><span class="line">Syncing files to device iPhone X...</span><br><span class="line">Reloaded 1 of 509 libraries in 452ms.</span><br><span class="line">flutter: 状态： 200</span><br><span class="line">flutter: 正文： <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>httpbin.org<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://fonts.googleapis.com/css?family=Open+Sans:400,700|Source+Code+Pro:300,600|Titillium+Web:400,600,700"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"/flasgger_static/swagger-ui.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">type</span>=<span class="string">"image/png"</span> <span class="attr">href</span>=<span class="string">"/static/favicon.ico"</span> <span class="attr">sizes</span>=<span class="string">"64x64 32x32 16x16"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        html &#123;</span></span><br><span class="line"><span class="undefined">            box-sizing: border-box;</span></span><br><span class="line"><span class="undefined">            overflow: -moz-scrollbars-vertical;</span></span><br><span class="line"><span class="undefined">            overflow-y: scroll;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        *,</span></span><br><span class="line"><span class="css">        *<span class="selector-pseudo">:before</span>,</span></span><br><span class="line"><span class="css">        *<span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="undefined">            box-sizing: inherit;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        body &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#fafafa</span>;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">...</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;h2 id=&quot;Flutter特点&quot;&gt;&lt;a href=&quot;#Flutter特点&quot; class=&quot;headerlink&quot; title=&quot;Flutter特点&quot;&gt;&lt;/a&gt;Flutter特点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;跨平台：现在Flutter至少可以跨5种平台，甚至支持嵌入式开发。我们常用的有MacOS、Windows、Linux、Android、iOS，甚至可以在谷歌最新的操作系统Fuchsia上运行。到目前为止，Flutter算是支持平台最多的框架了，良好的跨平台性，直接带来的好处就是减少开发成本。&lt;/li&gt;
&lt;li&gt;丝滑般的体验：使用Flutter内置高大上的Material Design和Cupertino风格组件、丰富的motion API、平滑而自然的滑动效果和平台感知，为用户带来全新体验。&lt;/li&gt;
&lt;li&gt;响应式框架：使用Flutter的、响应式框架和一系列基础组件，可以轻松构建用户界面。使用功能强大且灵活的API（针对2D、动画、手势、效果等）能解决艰难的UI挑战。&lt;/li&gt;
&lt;li&gt;支持插件：通过Flutter的插件可以访问平台本地API，如相机、蓝牙、WiFi等。借助现有的Java、Swift、Objective C、C++代码实现对原生系统的调用。&lt;/li&gt;
&lt;li&gt;60fps超高性能：Flutter采用GPU渲染技术，所以性能极高。Flutter编写的应用是可以达到60fps（每秒传输帧数），这也就是说，它完全可以胜任游戏的制作。官方宣称用Flutter开发的应用甚至会超过原生应用的性能。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Flutter" scheme="https://zanecode6574.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter基础知识" scheme="https://zanecode6574.github.io/tags/Flutter%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>第十三章：进阶技巧</title>
    <link href="https://zanecode6574.github.io/2019/02/21/%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0%EF%BC%9A%E8%BF%9B%E9%98%B6%E6%8A%80%E5%B7%A7/"/>
    <id>https://zanecode6574.github.io/2019/02/21/第十三章：进阶技巧/</id>
    <published>2019-02-21T12:44:19.000Z</published>
    <updated>2019-02-21T17:16:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="全局获取Context"><a href="#全局获取Context" class="headerlink" title="全局获取Context"></a>全局获取Context</h1><p>很多地方都需要用到Context，弹出Toast的时候需要，启动活动的时候需要，发送广播的时候需要，操作数据库的时候需要，使用通知的时候需要，等等等等。</p><p>目前很多操作都是在活动中进行的，因此很少遇到获取Context的困难，因为活动本身就是一个Context，但是应用框架逐渐复杂起来的时候，很多逻辑代码都会脱离Activity类。</p><a id="more"></a><h2 id="第九章的HttpUtil类"><a href="#第九章的HttpUtil类" class="headerlink" title="第九章的HttpUtil类"></a>第九章的HttpUtil类</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> sendHttpRequest(<span class="keyword">String</span> address) &#123;</span><br><span class="line">        HttpURLConnection connection = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URL url = <span class="keyword">new</span> <span class="type">URL</span>(address);</span><br><span class="line">            connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            connection.setRequestMethod(<span class="string">"GET"</span>);</span><br><span class="line">            connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">            connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">            connection.setDoInput(<span class="literal">true</span>);</span><br><span class="line">            connection.setDoOutput(<span class="literal">true</span>);</span><br><span class="line">            InputStream <span class="keyword">in</span> = connection.getInputStream();</span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> <span class="type">BufferedReader</span>(<span class="keyword">new</span> <span class="type">InputStreamReader</span>(<span class="keyword">in</span>));</span><br><span class="line">            StringBuilder response = <span class="keyword">new</span> <span class="type">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">String</span> line;</span><br><span class="line">            <span class="keyword">while</span> ((line = reader.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                response.append(line);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> response.toString();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> e.getMessage();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="literal">null</span>) &#123;</span><br><span class="line">                connection.disconnect();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里如果想对sendHttpRequest方法进行优化，在检测到网络不存在的时候给用户一个Toast提示，但是这里是没有Context的</p><ul><li>方法一：在sendHttpRequest方法中添加一个Context参数</li><li>方法二：Android提供了一个Application类，每当应用程序启动的时候，系统就会自动将这个类进行初始化。而我们可以定制一个自己的Application类，以便于管理程序内一些全局的状态信息，比如说全局Context。<ul><li>创建一个MyApplication类继承自Application</li></ul></li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> static <span class="type">Context</span> context;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">public void onCreate() &#123;</span><br><span class="line">context = getApplicationContext();</span><br><span class="line">&#125;</span><br><span class="line">public static <span class="type">Context</span> getContext() &#123;</span><br><span class="line"><span class="keyword">return</span> context;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>重写父类的onCreate()方法，并通过调用getApplicationContext()方法得到了一个应用程序级别的Context，然后又提供了一个静态的getContext()方法，在这里将刚才获取到的Context进行返回。</li><li>设置程序启动的时候初始化MyApplication类而不是默认的Application类</li><li>修改AndroidManifest.xml文件，在application标签下指定</li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;manifest xmlns<span class="function">:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">package=<span class="string">"com.example.networktest"</span></span><br><span class="line">android<span class="function">:versionCode</span>=<span class="string">"1"</span></span><br><span class="line">android<span class="function">:versionName</span>=<span class="string">"1.0"</span> &gt;</span><br><span class="line"><span class="string">...</span></span><br><span class="line">&lt;application</span><br><span class="line">android<span class="function">:name</span>=<span class="string">"com.example.networktest.MyApplication"</span></span><br><span class="line"><span class="string">...</span>&gt;</span><br><span class="line"><span class="string">...</span></span><br><span class="line">&lt;<span class="string">/application</span>&gt;</span><br><span class="line">&lt;<span class="string">/manifest</span>&gt;</span><br></pre></td></tr></table></figure><p>这里一定要加上完整的包名，否则找不到</p><ul><li>现在修改sendHttpRequest方法直接就可以</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Toast</span><span class="selector-class">.makeText</span>(<span class="selector-tag">MyApplication</span><span class="selector-class">.getContext</span>(), "<span class="selector-tag">network</span> <span class="selector-tag">is</span> <span class="selector-tag">unavailable</span>",<span class="selector-tag">Toast</span><span class="selector-class">.LENGTH_SHORT</span>)<span class="selector-class">.show</span>();</span><br></pre></td></tr></table></figure><h2 id="第六章使用LitePal操作数据库"><a href="#第六章使用LitePal操作数据库" class="headerlink" title="第六章使用LitePal操作数据库"></a>第六章使用LitePal操作数据库</h2><p>当时为了让LitePal正常工作，我们在application标签中配置了<code>android:name=&quot;org.litepal.LitePalApplication&quot;</code></p><p>原理是一样的，这样LitePal就能在内部获取到Context</p><p>如果我们这个时候配置了自己的Application就会和LitePalApplication冲突，任何项目都只能配置一个Application，对于这种情况LitePal提供了解决方法，就是在我们的Application中调用LitePal的初始化方法</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> static <span class="type">Context</span> context;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">public void onCreate() &#123;</span><br><span class="line">context = getApplicationContext();</span><br><span class="line"><span class="type">LitePal</span>.initialize(context);</span><br><span class="line">&#125;</span><br><span class="line">public static <span class="type">Context</span> getContext() &#123;</span><br><span class="line"><span class="keyword">return</span> context;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用Intent传递对象"><a href="#使用Intent传递对象" class="headerlink" title="使用Intent传递对象"></a>使用Intent传递对象</h1><h2 id="Serializable方式"><a href="#Serializable方式" class="headerlink" title="Serializable方式"></a>Serializable方式</h2><p>Serializable是序列化的意思，表示将一个对象转换成可存储或可传输的状态。序列化后的对象可以在网络上进行传输，也可以存储到本地。至于序列化的方法也很简单，只需要让一个类去implements Serializable这个接口就可以直接用Intent传递了</p><p>发送对象的直接用Intent的putExtra方法，但是接收的时候要使用<code>(类)getIntent().getSerializableExtra()</code>方法，比如我传递的是Person类的person对象，接收的时候就是<code>Person person=(Person)getIntent().getSerializableExtra(&quot;xxx&quot;)</code></p><h2 id="Parcelable方式"><a href="#Parcelable方式" class="headerlink" title="Parcelable方式"></a>Parcelable方式</h2><p>不同于将对象进行序列化，Parcelable方式的实现原理是将一个完整的对象进行分解，而分解后的每一部分都是Intent所支持的数据类型，这样也就实现传递对象的功能了。</p><p>Person类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Parcelable</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">...</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">dest.writeString(name);  <span class="comment">// 写出name</span></span><br><span class="line">dest.writeInt(age);  <span class="comment">// 写出age</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Parcelable.Creator&lt;Person&gt; CREATOR = <span class="keyword">new</span> Parcelable.Creator&lt;Person&gt;() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Person <span class="title">createFromParcel</span><span class="params">(Parcel source)</span> </span>&#123;</span><br><span class="line">Person person = <span class="keyword">new</span> Person();</span><br><span class="line">person.name = source.readString();  <span class="comment">// 读取name</span></span><br><span class="line">person.age = source.readInt();  <span class="comment">// 读取age</span></span><br><span class="line"><span class="keyword">return</span> person;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Person[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Person[size];</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Parcelable的实现方式要稍微复杂一些。首先我们让Person类去实现了Parcelable接口，这样就必须重写describeContents()和writeToParcel()这两个方法。其中describeContents()方法直接返回0就可以了，而writeToParcel()方法中我们需要调用Parcel的writeXxx()方法，将Person类中的字段一一写出。注意，字符串型数据就调用writeString()方法，整型数据就调用writeInt()方法，以此类推。</p><p>除此之外，我们还必须在Person类中提供一个名为CREATOR的常量，这里创建了Parcelable.Creator接口的一个实现，并将泛型指定为Person。接着需要重写createFromParcel()和newArray()这两个方法，在createFromParcel()方法中我们要去读取刚才写出的name和age字段，并创建一个Person对象进行返回，其中name和age都是调用Parcel的readXxx()方法读取到的，注意这里读取的顺序一定要和刚才写出的顺序完全相同。而newArray()方法中的实现就简单多了，只需要new出一个Person数组，并使用方法中传入的size作为数组大小就可以了。</p><p>在接收的时候<code>Person person = (Person) getIntent().getParcelableExtra(&quot;xxx&quot;);</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Serializable的方式较为简单，但由于会把整个对象进行序列化，因此效率会比Parcelable方式低一些，所以在通常情况下还是更加推荐使用Parcelable的方式来实现Intent传递对象的功能。</p><p>我个人还没有感觉到差距，偏向用简单的。</p><h1 id="定制自己的日志工具"><a href="#定制自己的日志工具" class="headerlink" title="定制自己的日志工具"></a>定制自己的日志工具</h1><p>打个比方，你正在编写一个比较庞大的项目，期间为了方便调试，在代码的很多地方都打印了大量的日志。最近项目已经基本完成了，但是却有一个非常让人头疼的问题，之前用于调试的那些日志，在项目正式上线之后仍然会照常打印，这样不仅会降低程序的运行效率，还有可能将一些机密性的数据泄露出去。</p><p>因此，最理想的情况是能够自由地控制日志的打印，当程序处于开发阶段时就让日志打印出来，当程序上线了之后就把日志屏蔽掉。</p><ul><li>新建一个LogUtil类</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class LogUtil &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> VERBOSE = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> DEBUG = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> INFO = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> WARN = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> ERROR = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> NOTHING = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> level = VERBOSE;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> v(<span class="keyword">String</span> tag, <span class="keyword">String</span> msg) &#123;</span><br><span class="line"><span class="keyword">if</span> (level &lt;= VERBOSE) &#123;</span><br><span class="line">Log.v(tag, msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> d(<span class="keyword">String</span> tag, <span class="keyword">String</span> msg) &#123;</span><br><span class="line"><span class="keyword">if</span> (level &lt;= DEBUG) &#123;</span><br><span class="line">Log.d(tag, msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> i(<span class="keyword">String</span> tag, <span class="keyword">String</span> msg) &#123;</span><br><span class="line"><span class="keyword">if</span> (level &lt;= INFO) &#123;</span><br><span class="line">Log.i(tag, msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> w(<span class="keyword">String</span> tag, <span class="keyword">String</span> msg) &#123;</span><br><span class="line"><span class="keyword">if</span> (level &lt;= WARN) &#123;</span><br><span class="line">Log.w(tag, msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> e(<span class="keyword">String</span> tag, <span class="keyword">String</span> msg) &#123;</span><br><span class="line"><span class="keyword">if</span> (level &lt;= ERROR) &#123;</span><br><span class="line">Log.e(tag, msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在LogUtil中先是定义了VERBOSE、DEBUG、INFO、WARN、ERROR、NOTHING这6个整型常量，并且它们对应的值都是递增的。然后又定义了一个静态变量level，可以将它的值指定为上面6个常量中的任意一个。</p><p>接下来我们提供了v()、d()、i()、w()、e()这5个自定义的日志方法，在其内部分别调用了Log.v()、Log.d()、Log.i()、Log.w()、Log.e()这5个方法来打印日志，只不过在这些自定义的方法中我们都加入了一个if判断，只有当level的值小于或等于对应日志级别值的时候，才会将日志打印出来。</p><p>这样就把一个自定义的日志工具创建好了，之后在项目里我们可以像使用普通的日志工具一样使用LogUtil，比如打印一行DEBUG级别的日志就可以这样写：<code>LogUtil.d(&quot;TAG&quot;, &quot;debug log&quot;);</code>，打印一行WARN级别的日志就可以这样写：<br><code>LogUtil.w(&quot;TAG&quot;, &quot;warn log&quot;);</code>，然后我们只需要修改level变量的值，就可以自由地控制日志的打印行为了。比如让level等于VERBOSE就可以把所有的日志都打印出来，让level等于WARN就可以只打印警告以上级别的日志，让level等于NOTHING就可以把所有日志都屏蔽掉。</p><p>使用了这种方法之后，刚才所说的那个问题就不复存在了，你只需要在开发阶段将level指定成VERBOSE，当项目正式上线的时候将level指定成NOTHING就可以了。</p><h1 id="调试Android程序"><a href="#调试Android程序" class="headerlink" title="调试Android程序"></a>调试Android程序</h1><ul><li>第一种：直接使用断点，用debug模式启动，这个调试没什么好说的，打过代码都知道</li><li>第二种：动态调试，正常方式启动程序，然后点击Attach debugger to Android process按钮，选中需要调试的进程就可以进入调试模式了</li></ul><p><img src="/2019/02/21/第十三章：进阶技巧/debug.png" alt=""></p><h1 id="创建定时任务"><a href="#创建定时任务" class="headerlink" title="创建定时任务"></a>创建定时任务</h1><p>Android中的定时任务一般有两种实现方式，一种是使用Java API里提供的Timer类，一种是使用Android的Alarm机制。这两种方式在多数情况下都能实现类似的效果，但Timer有一个明显的短板，它并不太适用于那些需要长期在后台运行的定时任务。我们都知道，为了能让电池更加耐用，每种手机都会有自己的休眠策略，Android手机就会在长时间不操作的情况下自动让CPU进入到睡眠状态，这就有可能导致Timer中的定时任务无法正常运行。而Alarm则具有唤醒CPU的功能，它可以保证在大多数情况下需要执行定时任务的时候CPU都能正常工作。需要注意，这里唤醒CPU和唤醒屏幕完全不是一个概念，千万不要产生混淆。</p><h2 id="Alarm机制"><a href="#Alarm机制" class="headerlink" title="Alarm机制"></a>Alarm机制</h2><p>借助AlarmManager类来实现，这个类和NotificationManager有点类似，都是通过调用Context的getSystemService()方法来获取实例的，只是这里需要传入的参数是Context.ALARM_SERVICE。</p><ul><li>获取一个AlarmManager的实例</li></ul><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AlarmManager manager = (<span class="name">AlarmManager</span>) getSystemService(<span class="name">Context</span>.ALARM_SERVICE)<span class="comment">;</span></span><br></pre></td></tr></table></figure><ul><li>调用AlarmManager的set()方法设置定时任务</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设定一个任务在十秒钟后执行</span></span><br><span class="line"><span class="keyword">long</span> triggerAtTime = SystemClock.elapsedRealtime() + <span class="number">10</span> * <span class="number">1000</span>;</span><br><span class="line">manager.<span class="built_in">set</span>(AlarmManager.ELAPSED_REALTIME_WAKEUP, triggerAtTime, pendingIntent);</span><br></pre></td></tr></table></figure><ul><li><p>set()方法中需要传入的3个参数稍微有点复杂</p><ul><li>第一个参数是一个整型参数，用于指定AlarmManager的工作类型，有4种值可选，分别是<code>ELAPSED_REALTIME</code>、<code>ELAPSED_REALTIME_WAKEUP</code>、<code>RTC和RTC_WAKEUP</code>。其中<code>ELAPSED_REALTIME</code>表示让定时任务的触发时间从系统开机开始算起，但不会唤醒CPU。<code>ELAPSED_REALTIME_WAKEUP</code>同样表示让定时任务的触发时间从系统开机开始算起，但会唤醒CPU。<code>RTC</code>表示让定时任务的触发时间从1970年1月1日0点开始算起，但不会唤醒CPU。<code>RTC_WAKEUP</code>同样表示让定时任务的触发时间从1970年1月1日0点开始算起，但会唤醒CPU。使用<code>SystemClock.elapsedRealtime()</code>方法可以获取到系统开机至今所经历时间的毫秒数，使用<code>System.currentTimeMillis()</code>方法可以获取到1970年1月1日0点至今所经历时间的毫秒数。</li><li>第二个参数就是定时任务触发的时间，以毫秒为单位。如果第一个参数使用的是<code>ELAPSED_REALTIME</code>或<code>ELAPSED_REALTIME_WAKEUP</code>，则这里传入开机至今的时间再加上延迟执行的时间。如果第一个参数使用的是<code>RTC</code>或<code>RTC_WAKEUP</code>，则这里传入1970年1月1日0点至今的时间再加上延迟执行的时间。</li><li>第三个参数是一个<code>PendingIntent</code>，对于它你应该已经不会陌生了吧。这里我们一般会调用<code>getService()</code>方法或者<code>getBroadcast()</code>方法来获取一个能够执行服务或广播的<code>PendingIntent</code>。这样当定时任务被触发的时候，服务的<code>onStartCommand()</code>方法或广播接收器的<code>onReceive()</code>方法就可以得到执行。</li></ul></li><li><p>另外一种写法</p></li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">long triggerAtTime = System.currentTimeMillis() + <span class="number">10</span> * <span class="number">1000</span><span class="comment">;</span></span><br><span class="line">manager<span class="meta">.set</span>(AlarmManager.RTC_WAKEUP, triggerAtTime, pendingIntent)<span class="comment">;</span></span><br></pre></td></tr></table></figure><h3 id="设定一个长时间在后台定试运行的服务"><a href="#设定一个长时间在后台定试运行的服务" class="headerlink" title="设定一个长时间在后台定试运行的服务"></a>设定一个长时间在后台定试运行的服务</h3><ul><li>新建一个普通的服务，将触发定时任务的代码写到onStartCommand()方法中</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LongRunningService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 在这里执行具体的逻辑操作</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;).start();</span><br><span class="line">AlarmManager manager = (AlarmManager) getSystemService(ALARM_SERVICE);</span><br><span class="line"><span class="keyword">int</span> anHour = <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;  <span class="comment">// 这是一小时的毫秒数</span></span><br><span class="line"><span class="keyword">long</span> triggerAtTime = SystemClock.elapsedRealtime() + anHour;</span><br><span class="line">Intent i = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, LongRunningService.class);</span><br><span class="line">PendingIntent pi = PendingIntent.getService(<span class="keyword">this</span>, <span class="number">0</span>, i, <span class="number">0</span>);</span><br><span class="line">manager.set(AlarmManager.ELAPSED_REALTIME_WAKEUP, triggerAtTime, pi);</span><br><span class="line"><span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先是在onStartCommand()方法中开启了一个子线程，这样就可以在这里执行具体的逻辑操作了。之所以要在子线程里执行逻辑操作，是因为逻辑操作也是需要耗时的，如果放在主线程里执行可能会对定时任务的准确性造成轻微的影响。</p><p>创建线程之后的代码就是我们刚刚讲解的Alarm机制的用法了，先是获取到了AlarmManager的实例，然后定义任务的触发时间为一小时后，再使用PendingIntent指定处理定时任务的服务为LongRunningService，最后调用set()方法完成设定。<br>这样我们就将一个长时间在后台定时运行的服务成功实现了。因为一旦启动了LongRunningService，就会在onStartCommand()方法里设定一个定时任务，这样一小时后将会再次启动LongRunningService，从而也就形成了一个永久的循环，保证LongRunningService的onStartCommand()方法可以每隔一小时就执行一次。</p><ul><li>启动定时任务</li></ul><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Intent</span> <span class="keyword">intent</span> = new <span class="keyword">Intent</span>(context, LongRunningService.<span class="keyword">class</span>);</span><br><span class="line">context.startService(<span class="keyword">intent</span>);</span><br></pre></td></tr></table></figure><p>从Android 4.4系统开始，Alarm任务的触发时间将会变得不准确，有可能会延迟一段时间后任务才能得到执行。这并不是个bug，而是系统在耗电性方面进行的优化。系统会自动检测目前有多少Alarm任务存在，然后将触发时间相近的几个任务放在一起执行，这就可以大幅度地减少CPU被唤醒的次数，从而有效延长电池的使用时间。<br>当然，如果你要求Alarm任务的执行时间必须准确无误，Android仍然提供了解决方案。使用AlarmManager的setExact()方法来替代set()方法，就基本上可以保证任务能够准时执行了。</p><p>如果想准确无误的启动就可以使用<code>setExact()</code>方法，基本能够保证任务准确执行</p><h2 id="Doze模式"><a href="#Doze模式" class="headerlink" title="Doze模式"></a>Doze模式</h2><p>在Android 6.0系统中，谷歌加入了一个全新的Doze模式，从而可以极大幅度地延长电池的使用寿命。</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>当用户的设备是Android 6.0或以上系统时，如果该设备未插接电源，处于静止状态（Android 7.0中删除了这一条件），且屏幕关闭了一段时间之后，就会进入到Doze模式。在Doze模式下，系统会对CPU、网络、Alarm等活动进行限制，从而延长了电池的使用寿命。</p><p>当然，系统并不会一直处于Doze模式，而是会间歇性地退出Doze模式一小段时间，在这段时间中，应用就可以去完成它们的同步操作、Alarm任务，等等。<br><img src="/2019/02/21/第十三章：进阶技巧/Doze.jpg" alt=""></p><p>随着设备进入Doze模式的时间越长，间歇性地退出Doze模式的时间间隔也会越长。因为如果设备长时间不使用的话，是没必要频繁退出Doze模式来执行同步等操作的，Android在这些细节上的把控使得电池寿命进一步得到了延长。</p><p>Doze模式下</p><ul><li>网络访问被禁止。</li><li>系统忽略唤醒CPU或者屏幕操作。</li><li>系统不再执行WIFI扫描。</li><li>系统不再执行同步服务。</li><li>Alarm任务将会在下次退出Doze模式的时候执行。</li></ul><p>最后一条表示在这种状态下Alarm任务会变得不准时，如果有非常特殊的需求让定时任务在Doze模式下也运行，Android提供了解决方案，调用AlarmManager的setAndAllowWhileIdle()或setExactAndAllowWhileIdle()方法就能让定时任务即使在Doze模式下也能正常执行了，这两个方法之间的区别和set()、setExact()方法之间的区别是一样的。</p><h1 id="多窗口模式编程"><a href="#多窗口模式编程" class="headerlink" title="多窗口模式编程"></a>多窗口模式编程</h1><p>Android 7.0系统中却引入了一个非常有特色的功能——多窗口模式，它允许我们在同一个屏幕中同时打开两个应用程序。据我了解目前的大多数用户不知道这个功能，我本人也极少数时候会用到。前面写的程序不需要多写代码来支持这种模式。</p><p>在多窗口模式下，整个应用的界面会缩小很多，那么编写程序时就应该多考虑使用match_parent属性、RecyclerView、ListView、ScrollView等控件，来让应用的界面能够更好地适配各种不同尺寸的屏幕，尽量不要出现屏幕尺寸变化过大时界面就无法正常显示的情况。</p><h2 id="多窗口模式下的生命周期"><a href="#多窗口模式下的生命周期" class="headerlink" title="多窗口模式下的生命周期"></a>多窗口模式下的生命周期</h2><p>多窗口模式并不会改变活动原有的生命周期，只是会将用户最近交互过的那个活动设置为运行状态，而将多窗口模式下另外一个可见的活动设置为暂停状态。如果这时用户又去和暂停的活动进行交互，那么该活动就变成运行状态，之前处于运行状态的活动变成暂停状态。</p><p>这里可以自己把两个Demo的生命周期的函数加入log来体验这种窗口模式下的生命周期</p><p>编写程序的时候，就可以将一些关键性的点考虑进去了。比如说，在多窗口模式下，用户仍然可以看到处于暂停状态的应用，那么像视频播放器之类的应用在此时就应该能继续播放视频才对。因此，我们最好不要在活动的onPause()方法中去处理视频播放器的暂停逻辑，而是应该在onStop()方法中去处理，并且在onStart()方法恢复视频的播放。</p><ul><li>针对于进入多窗口模式时活动会被重新创建，如果你想改变这一默认行为，可以在AndroidManifest.xml中对活动进行如下配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">".MainActivity"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:label</span>=<span class="string">"Fruits"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:configChanges</span>=<span class="string">"orientation|keyboardHidden|screenSize|screenLayout"</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><p>加入了这行配置之后，不管是进入多窗口模式，还是横竖屏切换，活动都不会被重新创建，而是会将屏幕发生变化的事件通知到Activity的onConfigurationChanged()方法当中。因此，如果你想在屏幕发生变化的时候进行相应的逻辑处理，那么在活动中重写onConfigurationChanged()方法即可。</p><h2 id="禁用多窗口模式"><a href="#禁用多窗口模式" class="headerlink" title="禁用多窗口模式"></a>禁用多窗口模式</h2><p>在AndroidManifest.xml的<code>&lt;application&gt;</code>或<code>&lt;activity&gt;</code>标签中加入如下属性即可</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:resizeableActivity=[<span class="string">"true"</span> <span class="string">| "</span>false<span class="string">"]</span></span><br></pre></td></tr></table></figure><p>其中，true表示应用支持多窗口模式，false表示应用不支持多窗口模式，如果不配置这个属性，那么默认值为true。</p><p>虽说<code>android:resizeableActivity</code>这个属性的用法很简单，但是它还存在着一个问题，就是这个属性只有当项目的<code>targetSdkVersion</code>指定成24或者更高的时候才会有用，否则这个属性是无效的。那么比如说我们将项目的<code>targetSdkVersion</code>指定成23，这个时候尝试进入多窗口模式，会提示你此App在分屏模式下可能会无法正常工作，但是还是会进入分屏模式，很多的老项目，它们的targetSdkVersion都没有指定到24，针对这种情况Android规定，如果项目指定的targetSdkVersion低于24，并且活动是不允许横竖屏切换的，那么该应用也将不支持多窗口模式。</p><ul><li>让应用不支持横竖屏切换</li></ul><p>在AndroidManifest的<code>&lt;activity&gt;</code>中加入配置</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:screenOrientation=[<span class="string">"portrait"</span> <span class="string">| "</span>landscape<span class="string">"]</span></span><br></pre></td></tr></table></figure><p>portrait表示活动只支持竖屏，<code>landscape</code>表示活动只支持横屏。当然<code>android: screenOrientation</code>属性中还有很多其他可选值，不过最常用的就是<code>portrait</code>和<code>landscape</code>了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">".MainActivity"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:label</span>=<span class="string">"Fruits"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:screenOrientation</span>=<span class="string">"portrait"</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h1><p>Lambda表达式却最低兼容到Android 2.3系统，基本上可以算是覆盖所有的Android手机，这是Java8的新特性。</p><p>Lambda 表达式本质上是一种匿名方法，它既没有方法名，也即没有访问修饰符和返回值类型，使用它来编写代码将会更加简洁，也更加易读。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>在app/build.gradle中添加配置即可</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">...</span><br><span class="line">defaultConfig &#123;</span><br><span class="line">...</span><br><span class="line">jackOptions<span class="selector-class">.enabled</span> = true</span><br><span class="line">&#125;</span><br><span class="line">compileOptions &#123;</span><br><span class="line">sourceCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">targetCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><h3 id="开启一个新线程"><a href="#开启一个新线程" class="headerlink" title="开启一个新线程"></a>开启一个新线程</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="function"><span class="params">()</span> -&gt;</span> &#123;</span><br><span class="line"><span class="regexp">//</span> 处理具体的逻辑</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure><p>凡是这种只有一个待实现方法的接口，都可以使用Lambda表达式的写法。</p><h3 id="自定义一个接口"><a href="#自定义一个接口" class="headerlink" title="自定义一个接口"></a>自定义一个接口</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public<span class="built_in"> interface </span>MyListener &#123;</span><br><span class="line">String doSomething(String a, int b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现方法</li></ul><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MyListener listener = (<span class="keyword">String</span> a, <span class="keyword">int</span> b) -&gt; &#123;</span><br><span class="line"><span class="keyword">String</span> result = a + b;</span><br><span class="line"><span class="built_in">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>Java还可以根据上下文自动推断出Lambda表达式中的参数类型，因此上面的代码也可以简化成如下写法</li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MyListener listener = <span class="function"><span class="params">(a, b)</span> -&gt;</span> &#123;</span><br><span class="line">String result = a + b;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Java将会自动推断出参数a是String类型，参数b是int类型，从而使得我们的代码变得更加精简。</p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> hello(MyListener listener) &#123;</span><br><span class="line"><span class="keyword">String</span> a = <span class="string">"Hello Lambda"</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">1024</span>;</span><br><span class="line"><span class="keyword">String</span> result = listener.doSomething(a, b);</span><br><span class="line">Log.d(<span class="string">"TAG"</span>, result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在调用hello()这个方法的时候就可以这样写</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hello(<span class="function"><span class="params">(a, b)</span> -&gt;</span> &#123;</span><br><span class="line">String result = a + b;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>其实只要是符合接口中只有一个待实现方法这个规则的功能，都是可以使用Lambda表达式来编写的。除了刚才举例说明的开启子线程之外，还有像设置点击事件之类的功能也是非常适合使用Lambda表达式的。</p><h3 id="设置点击事件"><a href="#设置点击事件" class="headerlink" title="设置点击事件"></a>设置点击事件</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Button </span><span class="keyword">button </span>= (<span class="keyword">Button) </span>findViewById(R.id.<span class="keyword">button);</span></span><br><span class="line"><span class="keyword">button.setOnClickListener((v) </span>-&gt; &#123;</span><br><span class="line">// 处理点击事件</span><br><span class="line">&#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>当接口的待实现方法有且只有一个参数的时候，我们还可以进一步简化，将参数外面的括号去掉</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Button </span><span class="keyword">button </span>= (<span class="keyword">Button) </span>findViewById(R.id.<span class="keyword">button);</span></span><br><span class="line"><span class="keyword">button.setOnClickListener(v </span>-&gt; &#123;</span><br><span class="line">// 处理点击事件</span><br><span class="line">&#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>我有点不适应这种写法…</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;全局获取Context&quot;&gt;&lt;a href=&quot;#全局获取Context&quot; class=&quot;headerlink&quot; title=&quot;全局获取Context&quot;&gt;&lt;/a&gt;全局获取Context&lt;/h1&gt;&lt;p&gt;很多地方都需要用到Context，弹出Toast的时候需要，启动活动的时候需要，发送广播的时候需要，操作数据库的时候需要，使用通知的时候需要，等等等等。&lt;/p&gt;
&lt;p&gt;目前很多操作都是在活动中进行的，因此很少遇到获取Context的困难，因为活动本身就是一个Context，但是应用框架逐渐复杂起来的时候，很多逻辑代码都会脱离Activity类。&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="进阶" scheme="https://zanecode6574.github.io/tags/%E8%BF%9B%E9%98%B6/"/>
    
      <category term="技巧" scheme="https://zanecode6574.github.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>额外篇：Git相关</title>
    <link href="https://zanecode6574.github.io/2019/02/21/%E9%A2%9D%E5%A4%96%E7%AF%87%EF%BC%9AGit%E7%9B%B8%E5%85%B3/"/>
    <id>https://zanecode6574.github.io/2019/02/21/额外篇：Git相关/</id>
    <published>2019-02-21T06:09:41.000Z</published>
    <updated>2019-02-21T12:33:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h1><p>Git是一个开源的分布式版本控制工具，它的开发者是Linux操作系统的作者Linus Torvalds。Git被开发出来的初衷是为了更好地管理Linux内核，而现在却早已被广泛应用于全球各种大中小型的项目中。</p><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>安装Git的方法有很多，我个人使用的Mac，可以直接使用brew进行安装。</p><p>如果是Windows就去<a href="https://git-for-windows.github.io" target="_blank" rel="noopener">https://git-for-windows.github.io</a>下载安装包进行安装</p><a id="more"></a><h1 id="创建代码仓库"><a href="#创建代码仓库" class="headerlink" title="创建代码仓库"></a>创建代码仓库</h1><p>使用Git建议使用命令进行操作，不建议使用图形界面，如果是Linux系统，直接打开shell界面，如果是Windows，找到Git bash打开</p><h2 id="配置身份"><a href="#配置身份" class="headerlink" title="配置身份"></a>配置身份</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">"XXX"</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"XXX"</span></span><br></pre></td></tr></table></figure><p>把”XXX”替换成自己的名字和邮箱即可，使用<code>git config --global user.name</code>可以查询当前设置的用户姓名，查询邮箱同理</p><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p>仓库（Repository）是用于保存版本管理所需信息的地方，所有本地提交的代码都会被提交到代码仓库中，如果有需要还可以再推送到远程仓库中。这里我尝试给我的一个Demo建立一个代码仓库</p><ul><li>shell进入到项目的目录下</li><li>输入命令<code>git init</code>,会提示已经初始化空仓库于你的项目文件夹下，文件夹下就多出一个<code>.git</code>的隐藏文件夹，这个文件夹就是用来记录本地所有git操作的，如果要删除本地仓库，删除这个文件夹即可</li></ul><h1 id="提交本地代码"><a href="#提交本地代码" class="headerlink" title="提交本地代码"></a>提交本地代码</h1><p>提交代码只需要用到add和commit命令就可以了，add用于把想要提交的代码先添加进来，commit是真正的执行提交操作，比如添加build.gradle文件，则输入命令</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> build.gradle</span></span><br></pre></td></tr></table></figure><p>如果想要添加某个目录就在add后面添加上目录名即可，如果想全部添加就输入<code>git add .</code></p><ul><li>我把所有文件都添加进去</li><li>提交，输入<code>git commit -m &quot;First commit.&quot;</code>,在commit的后面一定要加上<code>-m</code>来加上提交的描述信息，没有描述信息会被认定为不合法</li></ul><h1 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h1><p>在安卓项目的build目录下都是编译项目的时候生成的文件，不应该将这一份文件添加到版本控制当中，Git提供了一种可配性很强的机制来允许用户将指定的文件或目录排除在版本控制之外，它会检查代码仓库的目录下是否存在一个名为.gitignore的文件，如果存在的话，就去一行行读取这个文件中的内容，并把每一行指定的文件或目录排除在版本控制之外。注意.gitignore中指定的文件或目录是可以使用“*”通配符的。</p><p>Android Studio在创建项目的时候已经帮我们创建好了这个文件，一个在根目录下面，一个在app模块下面。</p><p><img src="/2019/02/21/额外篇：Git相关/gitignore.png" alt="根目录下的"></p><p>可以任意修改这两个文件来满足我们的需求，比如app模块下所有测试文件都只是给我自己使用的，那么修改app/.gitignore文件即可</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/build</span></span><br><span class="line"><span class="string">/src/test</span></span><br><span class="line"><span class="string">/src/androidTest</span></span><br></pre></td></tr></table></figure><h1 id="查看修改内容"><a href="#查看修改内容" class="headerlink" title="查看修改内容"></a>查看修改内容</h1><p>在进行了第一次代码提交之后，我们后面还可能会对项目不断地进行维护或添加新功能等。比较理想的情况是每当完成了一小块功能，就执行一次提交。但是如果某个功能牵扯到的代码比较多，有可能写到后面的时候我们就已经忘记前面修改了什么东西了。</p><ul><li>使用<code>git status</code>即可，但是目前我们的代码没有修改过，会提示项目中没有任何可提交的文件，现在去修改一下代码</li><li>再次输入，会提示我如下</li></ul><p><img src="/2019/02/21/额外篇：Git相关/gitStatus.png" alt="根目录下的"></p><ul><li>如果想查看更改的内容，输入<code>git diff 想查看的文件路径</code>,减号代表删除的，加号代表增加的</li></ul><p><img src="/2019/02/21/额外篇：Git相关/gitDiff.png" alt="根目录下的"></p><h1 id="撤销未提交的更改"><a href="#撤销未提交的更改" class="headerlink" title="撤销未提交的更改"></a>撤销未提交的更改</h1><h2 id="代码未add的情况"><a href="#代码未add的情况" class="headerlink" title="代码未add的情况"></a>代码未add的情况</h2><p>刚才修改了代码中的50为60，现在如果想撤销更改可以使用checkout命令，用法</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">git</span> checkout 文件路径</span><br></pre></td></tr></table></figure><p><img src="/2019/02/21/额外篇：Git相关/gitCheckout.png" alt="根目录下的"></p><p>刚才做的修改已经撤销了</p><h2 id="已经add的情况"><a href="#已经add的情况" class="headerlink" title="已经add的情况"></a>已经add的情况</h2><p>如果代码修改了，并且已经add过了，就要先使用<code>git reset HEAD 文件路径</code>,然后使用checkout命令即可</p><h1 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h1><ul><li>使用<code>git log</code>即可查看历史提交信息</li><li>如果只想查看一条记录可以在命令中指定记录的id，<code>git log id -l</code>，使用<code>-l</code>参数表示只想看到一条记录</li><li>查看记录具体修改了什么，加入<code>-p</code>参数即可</li></ul><h1 id="分支的用法"><a href="#分支的用法" class="headerlink" title="分支的用法"></a>分支的用法</h1><p>分支是版本控制工具中比较高级且比较重要的一个概念，它主要的作用就是在现有代码的基础上开辟一个分叉口，使得代码可以在主干线和分支线上同时进行开发，且相互之间不会影响。</p><p>通常情况下，只在主干线上进行开发是完全没有问题的，不过一旦涉及出版本的情况，如果不建立分支的话，你就会非常地头疼。举个简单的例子吧，比如说你们公司研发了一款不错的软件，最近刚刚完成，并推出了1.0版本。但是领导是不会让你们闲着的，马上提出了新的需求，让你们投入到了1.1版本的开发工作当中。过了几个星期，1.1版本的功能已完成了一半，但是这个时候有用户反馈，之前上线的1.0版本发现了几个重大的bug，严重影响软件的正常使用。领导也相当重视这个问题，要求你们立刻修复这些bug，并重新发布1.0版本，但这个时候你就非常为难了，你会发现根本没法去修复这些bug。因为现在1.1版本已开发一半了，如果在现有代码的基础上修复这些bug，那么更新的1.0版本将会带有一半1.1版本的功能！<br>进退两难了是不是？但是如果你使用了分支的话，就完全不会存在这个让人头疼的问题。你只需要在发布1.0版本的时候建立一个分支，然后在主干线上继续开发1.1版本的功能。当1.0版本上发现任何bug的时候，就在分支线上进行修改，然后发布新的1.0版本，并记得将修改后的代码合并到主干线上。这样的话，不仅可以轻松解决掉1.0版本存在的bug，而且保证了主干线上的代码也已经修复了这些bug，当1.1版本发布时就不会有同样的bug存在了。</p><h2 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h2><p>使用<code>git branch</code>命令查看即可，但是项目中还没有分支，就会只显示一个<code>* master</code></p><h2 id="创建一个分支"><a href="#创建一个分支" class="headerlink" title="创建一个分支"></a>创建一个分支</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>version1.<span class="number">0</span></span><br></pre></td></tr></table></figure><p>这样就创建了一个名字为version1.0的分支，现在再用<code>git branch</code>命令就会显示出来</p><h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><p>是master上有一个<code>*</code>号，说明目前是在master分支上的，要切换分支使用如下命令</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">git</span> <span class="selector-tag">checkout</span> <span class="selector-tag">version1</span><span class="selector-class">.0</span></span><br></pre></td></tr></table></figure><p>两个分支上的修改都互不影响</p><h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><p>如果我们在version1.0上修复了一个bug，现在想将代码合并到master上去</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout <span class="literal">master</span></span><br><span class="line">git merge version1.<span class="number">0</span></span><br></pre></td></tr></table></figure><p>合并分支可能会出现代码冲突的情况，这个要自己排查</p><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>-D version1.<span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="与远程版本库协作"><a href="#与远程版本库协作" class="headerlink" title="与远程版本库协作"></a>与远程版本库协作</h1><p>如果你是一个人在开发，那么使用版本控制工具就远远无法发挥出它真正强大的功能。没错，所有版本控制工具最重要的一个特点就是可以使用它来进行团队合作开发。每个人的电脑上都会有一份代码，当团队的某个成员在自己的电脑上编写完成了某个功能后，就将代码提交到服务器，其他的成员只需要将服务器上的代码同步到本地，就能保证整个团队所有人的代码都相同。这样的话，每个团队成员就可以各司其职，大家共同来完成一个较为庞大的项目。</p><p>这就需要有一个远程的版本库，团队的每个成员都从这个版本库中获取到最原始的代码，然后各自进行开发，并且以后每次提交的代码都同步到远程版本库上就可以了。另外，团队中的每个成员最好都要养成经常从版本库中获取最新代码的习惯，不然的话，大家的代码就很有可能经常出现冲突。</p><h2 id="下载远程库的代码"><a href="#下载远程库的代码" class="headerlink" title="下载远程库的代码"></a>下载远程库的代码</h2><ul><li>比如远程版本库地址为<code>https://github.com/example/test.git</code></li><li>将代码下载到本地的命令<code>git clone https://github.com/example/test.git</code></li></ul><h2 id="提交修改"><a href="#提交修改" class="headerlink" title="提交修改"></a>提交修改</h2><ul><li>对代码进行了修改以后把本地修改同步到远程版本库<code>git push origin master</code>,其中origin部分指定的是远程版本库的Git地址，master部分指定的是同步到哪一个分支上，上述命令就完成了将本地代码同步到<code>https://github.com/example/test.git</code>这个版本库的master分支上的功能</li></ul><h2 id="同步远程库的修改到本地"><a href="#同步远程库的修改到本地" class="headerlink" title="同步远程库的修改到本地"></a>同步远程库的修改到本地</h2><ul><li>Git提供了两种命令来完成此功能，分别是fetch和pull，fetch的语法规则和push是差不多的</li><li>执行<code>git fetch origin master</code>命令以后，会将远程库上的代码同步到本地，但是同步下来的代码不会合并到任何分支上，而是存到一个origin/master分支上，然后我们通过diff命令来查看远程库上的版本修改了哪些东西<code>git diff origin/master</code>，之后再调用merge命令将origin/master分支上的修改合并到主分支上即可<code>git merge origin/master</code></li><li>pull命令是相当于将fetch和merge合并到一起了，它从远程库获取最新的代码并同步到本地<code>git pull origin master</code></li></ul><h1 id="将代码托管到GitHub上"><a href="#将代码托管到GitHub上" class="headerlink" title="将代码托管到GitHub上"></a>将代码托管到GitHub上</h1><p>GitHub是全球最大的代码托管网站，主要是借助Git来进行版本控制的。任何开源软件都可以免费地将代码提交到GitHub上，以零成本的代价进行代码托管。GitHub的官网地址是<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></p><ul><li>注册GitHub</li><li>点击start a project来创建一个版本库</li><li>创建一个Android项目</li><li>将远程版本库克隆到本地,点击这里复制地址<br><img src="/2019/02/21/额外篇：Git相关/gitCloneAddress.png" alt=""></li><li>终端进入创建的项目目录，输入<code>git clone 地址</code>把远程库克隆到本地<br><img src="/2019/02/21/额外篇：Git相关/gitClone.png" alt=""></li><li>现在将当前文件夹下的所有文件复制到上一层并删除当前的目录，最终项目结构如下<br><img src="/2019/02/21/额外篇：Git相关/files.png" alt=""></li><li>添加到文件到版本控制<code>git add .</code></li><li>提交<code>git commit -m &quot;测试提交&quot;</code></li><li>将提交的内容同步到远程库<code>git push origin master</code>，会让你输入用户名和密码进行校验<br><img src="/2019/02/21/额外篇：Git相关/push.png" alt=""><br><img src="/2019/02/21/额外篇：Git相关/pushGit.png" alt=""></li></ul><p>大概的用法就是这样了，平时很少用，了解一下</p><h1 id="配置SSH-Key实现无密码Push"><a href="#配置SSH-Key实现无密码Push" class="headerlink" title="配置SSH Key实现无密码Push"></a>配置SSH Key实现无密码Push</h1><ul><li><p>Windows用户可以用Xshell一类的工具生成，MacOS直接用<code>ssh-keygen -t rsa -C &quot;邮箱&quot;</code>来生成，生成的Key在当前用户 ~/.ssh 目录中。</p></li><li><p>找到目录中的<code>id_rsa.pub</code>，将其中的内容复制</p></li><li><p>打开Github，点击头像-Settings-SSH and GPG keys-New SSH Key，然后把之前复制的内容填进去，Title自己填就行了</p></li></ul><p><img src="/2019/02/21/额外篇：Git相关/SSHKey.png" alt=""></p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><ul><li>找到之前创建的测试项目，点击Clone or download按钮，选择Use SSH，然后复制地址</li></ul><p><img src="/2019/02/21/额外篇：Git相关/UseSSH.png" alt=""></p><ul><li>使用<code>git clone 地址</code>将项目clone下来，然后修改项目中的文件</li><li><code>git add .</code>添加文件</li><li><code>git commit -m &quot;描述&quot;</code>提交修改</li><li><code>git push</code>提交到Github，现在不需要密码了</li></ul><p><img src="/2019/02/21/额外篇：Git相关/testSuccess.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git简介&quot;&gt;&lt;a href=&quot;#Git简介&quot; class=&quot;headerlink&quot; title=&quot;Git简介&quot;&gt;&lt;/a&gt;Git简介&lt;/h1&gt;&lt;p&gt;Git是一个开源的分布式版本控制工具，它的开发者是Linux操作系统的作者Linus Torvalds。Git被开发出来的初衷是为了更好地管理Linux内核，而现在却早已被广泛应用于全球各种大中小型的项目中。&lt;/p&gt;
&lt;h1 id=&quot;安装Git&quot;&gt;&lt;a href=&quot;#安装Git&quot; class=&quot;headerlink&quot; title=&quot;安装Git&quot;&gt;&lt;/a&gt;安装Git&lt;/h1&gt;&lt;p&gt;安装Git的方法有很多，我个人使用的Mac，可以直接使用brew进行安装。&lt;/p&gt;
&lt;p&gt;如果是Windows就去&lt;a href=&quot;https://git-for-windows.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://git-for-windows.github.io&lt;/a&gt;下载安装包进行安装&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="Git" scheme="https://zanecode6574.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>使用Servlet建立小型应用服务器</title>
    <link href="https://zanecode6574.github.io/2019/02/21/%E4%BD%BF%E7%94%A8Servlet%E5%BB%BA%E7%AB%8B%E5%B0%8F%E5%9E%8B%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://zanecode6574.github.io/2019/02/21/使用Servlet建立小型应用服务器/</id>
    <published>2019-02-20T16:09:21.000Z</published>
    <updated>2019-02-21T08:13:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前段时间写App遇到了需要服务器的情况，这里使用的是Servlet，需要用到的工具和软件：</p><ol><li>Tomcat-9.0.16</li><li>JDK-8u202,这里我的网盘提供三个版本的，分别是Linux-x64、Windows-x64、MacOSx-x64</li><li>JSON、Servlet、Mysql需要的jar包</li></ol><p>下载地址：<a href="http://onedrive.zanecode6574.com/Servlet%E6%9C%8D%E5%8A%A1%E5%99%A8/" target="_blank" rel="noopener">Servlet服务器所需文件</a></p><p>把文件下载下来，其中jdk环境变量配置好，Tomcat放到自己想放的位置，如果是Mac可以直接用brew安装tomcat</p><p>（我这里提供的是我用的版本，mysql版本和jdk自己可以换，和本机不一致可能会出错）</p><a id="more"></a><h1 id="配置IDEA"><a href="#配置IDEA" class="headerlink" title="配置IDEA"></a>配置IDEA</h1><p>IDEA对于学生是免费的，使用学校<code>.edu.cn</code>的邮箱进行申请就可以免费使用，到期了还可以续期，十分方便，当然使用别的例如Ecplise也可以</p><h2 id="配置项目文件结构"><a href="#配置项目文件结构" class="headerlink" title="配置项目文件结构"></a>配置项目文件结构</h2><ul><li>打开IDEA新建一个Java Web项目，Tomcat那里暂时不用管，我是因为之前配置过了所以有</li></ul><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/JavaWeb.png" alt=""></p><ul><li>在WEB-INF文件夹下创建classes文件夹和lib文件夹（这一步不知道是不是必须的，我在网上看到的教程是这样的），后面会用到这个文件夹,classes目录用来存放编译后的class文件，lib用来存放依赖的jar包</li></ul><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/directory.png" alt=""></p><ul><li>打开File-Project Structure-Modules，选中自己的项目，Paths选项卡，勾选 “Use module compile output path”，将 “Output path” 和 “Test output path” 都改为之前创建的classes目录</li></ul><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/setPath.png" alt=""></p><ul><li>点击Dependencies选项卡，点击“+”,选择Jars…，然后选择创建的lib文件夹，选择Jar Directory，最后Apply即可</li></ul><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/setJar.png" alt=""></p><ul><li>设置配置打包方式Artifacts，选择Artifacts，一般这里保持默认即可，勾选“Show content of elements”，表示显示详细的内容列表<br><img src="/2019/02/21/使用Servlet建立小型应用服务器/Artifacts.png" alt=""></li></ul><h2 id="配置Tomcat"><a href="#配置Tomcat" class="headerlink" title="配置Tomcat"></a>配置Tomcat</h2><ul><li><p>点击IDEA菜单的Run-Edit Configurations-Run Configurations，点击”+”-Tomcat Server-Local，创建一个新的Tomcat容器<br><img src="/2019/02/21/使用Servlet建立小型应用服务器/tomcat.png" alt=""></p></li><li><p>在”Name”处输入新的服务名，点击Application server-Configure，弹出Tomcat Server窗口，选择本地安装的Tomcat目录（Mac通过brew安装的Tomcat在<code>/usr/local/Cellar/tomcat</code>文件夹中，需要选择<code>/usr/local/Cellar/tomcat/9.0.16/libexec</code>目录，别的直接选择安装的Tomcat的目录就行了）</p></li></ul><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/tomcatDone.png" alt=""></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在项目的<code>index.jsp</code>中添加想显示的字符</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">&lt;html&gt;</span></span><br><span class="line">  <span class="params">&lt;head&gt;</span></span><br><span class="line">    <span class="params">&lt;title&gt;</span>$Title$<span class="params">&lt;/title&gt;</span></span><br><span class="line">  <span class="params">&lt;/head&gt;</span></span><br><span class="line">  <span class="params">&lt;body&gt;</span></span><br><span class="line"><span class="string">"Hello"</span></span><br><span class="line">  <span class="params">&lt;/body&gt;</span></span><br><span class="line"><span class="params">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>然后点击绿色三角形就可以测试了</p><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/run.png" alt=""></p><p>成功运行</p><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/test.png" alt=""></p><h1 id="写Servlet测试类"><a href="#写Servlet测试类" class="headerlink" title="写Servlet测试类"></a>写Servlet测试类</h1><p>这里我做一个数据库连接验证账户是否存在的Demo，我们把需要的jar导入到项目中，右键点击我们创建的lib文件夹，打开目录，把刚才下载的JSON、Mysql、Servlet包放进目录中</p><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/libs.png" alt=""></p><p>然后右键点击项目中的lib文件夹，点击add as library，<br><img src="/2019/02/21/使用Servlet建立小型应用服务器/addAs.png" alt=""></p><p>添加的Jar包都有一个箭头就说明成功了<br><img src="/2019/02/21/使用Servlet建立小型应用服务器/addDone.png" alt=""></p><ul><li>写一个用户类</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>数据库操作类DBManager，继承HttpServlet</li></ul><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.sql.Connection;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.sql.DriverManager;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.sql.SQLException;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.sql.Statement;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.sql.ResultSet;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.logging.Level;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.logging.Logger;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.ServletConfig;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.ServletException;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.http.HttpServlet;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBManager</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    ServletConfig config;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Connection connection;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> init(ServletConfig config) throws ServletException &#123;</span><br><span class="line">        <span class="keyword">super</span>.init(config);</span><br><span class="line">        <span class="keyword">this</span>.config=config;</span><br><span class="line">        username=config.getInitParameter(<span class="string">"DBUsername"</span>);</span><br><span class="line">        password=config.getInitParameter(<span class="string">"DBPassword"</span>);</span><br><span class="line">        url=config.getInitParameter(<span class="string">"ConnectionURL"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection getConnection()&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>).newInstance();</span><br><span class="line">            connection= DriverManager.getConnection(url,username,password);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException ex)&#123;</span><br><span class="line">            Logger.getLogger(DBManager.class.getName()).log(Level.SEVERE,<span class="literal">null</span>,ex);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭连接</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> closeAll(Connection connection, Statement statement, ResultSet resultSet)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(resultSet!=<span class="literal">null</span>)&#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(statement!=<span class="literal">null</span>)&#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(connection!=<span class="literal">null</span>)&#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException ex)&#123;</span><br><span class="line">            Logger.getLogger(DBManager.class.getName()).log(Level.SEVERE,<span class="literal">null</span>,ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//没有</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> closeAll(Connection connection, Statement statement)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(statement!=<span class="literal">null</span>)&#123;</span><br><span class="line">                statement.close();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(connection!=<span class="literal">null</span>)&#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException ex)&#123;</span><br><span class="line">            Logger.getLogger(DBManager.class.getName()).log(Level.SEVERE,<span class="literal">null</span>,ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>UserDAO类，负责用户相关数据操作（这里我的数据库表名为users，只有一个字段userName）</li></ul><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.sql.Connection;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.sql.PreparedStatement;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.sql.ResultSet;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.sql.SQLException;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.logging.Level;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.logging.Logger;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDAO</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询账户是否存在</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean queryUser(String userName)&#123;</span><br><span class="line">        <span class="comment">//连接数据库</span></span><br><span class="line">        Connection connection=DBManager.getConnection();</span><br><span class="line">        PreparedStatement preparedStatement=<span class="literal">null</span>;</span><br><span class="line">        ResultSet resultSet=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//SQL查询</span></span><br><span class="line">        StringBuilder sqlStatement=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">        sqlStatement.append(<span class="string">"select * from users where userName=?"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置数据库的字段值</span></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            preparedStatement=connection.prepareStatement(sqlStatement.toString());</span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>,userName);</span><br><span class="line">            resultSet=preparedStatement.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(resultSet.next())&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">            Logger.getLogger(UserDAO.class.getName()).log(Level.SEVERE,<span class="literal">null</span>,e);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            DBManager.closeAll(connection,preparedStatement,resultSet);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>LoginServlet，用来进行登陆服务，继承自HttpServlet，使用ctrl+o快捷键可以快速添加重写方法，这里重写doPost和doGet即可</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> net.sf.json.<span class="type">JSONObject</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.<span class="type">ServletException</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServlet</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletRequest</span>;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.<span class="type">HttpServletResponse</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">IOException</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">PrintWriter</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">HashMap</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">Map</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doGet(<span class="type">HttpServletRequest</span> req, <span class="type">HttpServletResponse</span> resp) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void doPost(<span class="type">HttpServletRequest</span> req, <span class="type">HttpServletResponse</span> resp) <span class="keyword">throws</span> <span class="type">ServletException</span>, <span class="type">IOException</span> &#123;</span><br><span class="line">        <span class="comment">//设置响应内容编码</span></span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>(<span class="type">PrintWriter</span> out=resp.getWriter())&#123;</span><br><span class="line">            <span class="comment">//获取请求中传过来的账号</span></span><br><span class="line">            <span class="type">String</span> userName=req.getParameter(<span class="string">"userName"</span>).trim();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">Map</span>&lt;<span class="type">String</span>, <span class="type">String</span>&gt; params = <span class="keyword">new</span> <span class="type">HashMap</span>&lt;&gt;();</span><br><span class="line">            <span class="type">JSONObject</span> jsonObject = <span class="keyword">new</span> <span class="type">JSONObject</span>();</span><br><span class="line">            <span class="comment">//验证是否存在这个人</span></span><br><span class="line">            <span class="keyword">if</span> (login(userName)) &#123;</span><br><span class="line">                params.put(<span class="string">"Result"</span>, <span class="string">"success"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                params.put(<span class="string">"Result"</span>, <span class="string">"failed"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            jsonObject.put(<span class="string">"params"</span>, params);</span><br><span class="line">            out.write(jsonObject.toString());</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span>(<span class="type">Exception</span> e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Boolean</span> login(<span class="type">String</span> userName)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">UserDAO</span>.queryUser(userName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建数据库，这里我就使用本地数据库Mysql</li></ul><p>创建一个数据库，创建一个表users，字段id主键，userName</p><p>这里我增加一个用户叫admin</p><ul><li>配置web.xml</li></ul><p>这里要把servlet都写进去才会正常运行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/Login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DBManager<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>DBManager<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>DBUsername<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>DBPassword<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>ConnectionURL<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>jdbc:mysql://localhost:3306/testDB<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>DBManager<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/DBManager<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>DBManager中配置了数据库的参数</p><ul><li>点击运行项目</li></ul><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/runTest.png" alt=""></p><ul><li>用浏览器访问<code>localhost:8080/JavaWebTest_war_exploded/Login?userName=admin</code>,这里的Login是我在web.xml中配置<code>&lt;url-pattern&gt;/Login&lt;/url-pattern&gt;</code>参数的时候配置的，后面跟的是参数，多个参数用<code>&amp;隔开</code>即可，比如我做的是验证账号密码的，就写成<code>...Login?userName=admin&amp;password=xxx</code>就行了，这里我只有账号</li></ul><p><img src="/2019/02/21/使用Servlet建立小型应用服务器/testSuccess.png" alt=""></p><p>返回如下的结果，用户存在，验证成功</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><p>这就是一个简易的服务器，客户端访问对应的地址，服务器返回信息，在实际操作中一般参数都会进行加密以后传输，建议使用post方法向服务器提交信息，因为get方法中参数直接跟在链接后面，有些参数在经过URLEncode以后会带有比如<code>+</code>号，传输到服务器上，服务器解读出来就会当成空格处理，解析出来就不对了，用post可以有效避免这种情况</p></li><li><p>关于在客户端处理返回信息的就自己使用JSON处理即可，因为Demo返回的是JSON信息，客户端获取到返回的信息再进行相应的逻辑操作即可</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前段时间写App遇到了需要服务器的情况，这里使用的是Servlet，需要用到的工具和软件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Tomcat-9.0.16&lt;/li&gt;
&lt;li&gt;JDK-8u202,这里我的网盘提供三个版本的，分别是Linux-x64、Windows-x64、MacOSx-x64&lt;/li&gt;
&lt;li&gt;JSON、Servlet、Mysql需要的jar包&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;http://onedrive.zanecode6574.com/Servlet%E6%9C%8D%E5%8A%A1%E5%99%A8/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Servlet服务器所需文件&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;把文件下载下来，其中jdk环境变量配置好，Tomcat放到自己想放的位置，如果是Mac可以直接用brew安装tomcat&lt;/p&gt;
&lt;p&gt;（我这里提供的是我用的版本，mysql版本和jdk自己可以换，和本机不一致可能会出错）&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="服务器" scheme="https://zanecode6574.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Servlet" scheme="https://zanecode6574.github.io/tags/Servlet/"/>
    
      <category term="服务端" scheme="https://zanecode6574.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>第十二章：MaterialDesign实战</title>
    <link href="https://zanecode6574.github.io/2019/01/27/%E7%AC%AC%E5%8D%81%E4%BA%8C%E7%AB%A0%EF%BC%9AMaterialDesign%E5%AE%9E%E6%88%98/"/>
    <id>https://zanecode6574.github.io/2019/01/27/第十二章：MaterialDesign实战/</id>
    <published>2019-01-27T07:57:23.000Z</published>
    <updated>2019-01-29T05:48:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>长久以来，大多数人都认为Android系统的UI并不算美观，至少没有iOS系统的美观。以至于很多IT公司在进行应用界面设计的时候，为了保证双平台的统一性，强制要求Android端的界面风格必须和iOS端一致。这种情况在现实工作当中实在是太常见了，虽然我认为这是非常不合理的。因为对于一般用户来说，他们不太可能会在两个操作系统上分别去使用同一个应用，但是却必定会在同一个操作系统上使用不同的应用。因此，同一个操作系统中各个应用之间的界面统一性要远比一个应用在双平台的界面统一性重要得多，只有这样，才能给使用者带来更好的用户体验。</p><p>但问题在于，Android标准的界面设计风格并不是特别被大众所接受，很多公司都觉得自己完全可以设计出更加好看的界面，从而导致Android平台的界面风格长期难以得到统一。为了解决这个问题，谷歌也是祭出了杀手锏，在2014年Google I/O大会上重磅推出了一套全新的界面设计语言——Material Design。</p><a id="more"></a><h1 id="什么是Material-Design"><a href="#什么是Material-Design" class="headerlink" title="什么是Material Design"></a>什么是Material Design</h1><p>Material Design是由谷歌的设计工程师们基于传统优秀的设计原则，结合丰富的创意和科学技术所发明的一套全新的界面设计语言，包含了视觉、运动、互动效果等特性。那么谷歌凭什么认为Material Design就能解决Android平台界面风格不统一的问题呢？一言以蔽之，好看！</p><p>不过，在重磅推出之后，Material Design的普及程度却不能说是特别理想。因为这只是一个推荐的设计规范，主要是面向UI设计人员的，而不是面向开发者的。很多开发者可能根本就搞不清楚什么样的界面和效果才叫Material Design，就算搞清楚了，实现起来也会很费劲，因为不少Material Design的效果是很难实现的，而Android中却几乎没有提供相应的API支持，一切都要靠开发者自己从零写起。</p><p>谷歌当然也意识到了这个问题，于是在2015年的Google I/O大会上推出了一个Design Support库，这个库将Material Design中最具代表性的一些控件和效果进行了封装，使得开发者在即使不了解Material Design的情况下也能非常轻松地将自己的应用material化。本章中我们就将对Design Support这个库进行深入的学习，并且配合一些其他的控件来完成一个优秀的Material Design应用。</p><h1 id="Toolbar"><a href="#Toolbar" class="headerlink" title="Toolbar"></a>Toolbar</h1><p>对于Toolbar你暂时应该还是比较陌生的，但是对于它的另一个相关控件ActionBar，你就应该有点熟悉了。</p><p>回忆一下，我们曾经在3.4.1小节为了使用一个自定义的标题栏，而把系统原生的ActionBar隐藏掉。没错，每个活动最顶部的那个标题栏其实就是ActionBar，之前我们编写的所有程序里一直都有ActionBar的身影。</p><p>不过ActionBar由于其设计的原因，被限定只能位于活动的顶部，从而不能实现一些Material Design的效果，因此官方现在已经不再建议使用ActionBar了。那么本书中我也就不准备再介绍ActionBar的用法了，而是直接讲解现在更加推荐使用的Toolbar。</p><p>Toolbar的强大之处在于，它不仅继承了ActionBar的所有功能，而且灵活性很高，可以配合其他控件来完成一些Material Design的效果。</p><ul><li>任何一个新建的项目都会包含ActionBar，这是根据项目指定的主题来的，打开AndroidManifest.xml文件，其中<code>android:theme=&quot;@style/AppTheme&quot;</code>指定了一个AppTheme的主题，而这个主题是在<code>res/values/styles.xml</code>中定义的，代码如下</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"AppTheme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.Light.DarkActionBar"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- Customize your theme here. --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimary"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimaryDark"</span>&gt;</span>@color/colorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorAccent"</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里定义了一个叫AppTheme的主题，然后指定它的parent主题是Theme.AppCompat.Light.DarkActionBar。这个DarkActionBar是一个深色的ActionBar主题，我们之前所有的项目中自带的ActionBar就是因为指定了这个主题才出现的。</p><ul><li>现在我们准备使用Toolbar来替代ActionBar，因此需要指定一个不带ActionBar的主题，通常有<code>Theme.AppCompat.NoActionBar</code>和<code>Theme.AppCompat.Light.NoActionBar</code>这两种主题可选。其中<code>Theme.AppCompat.NoActionBar</code>表示深色主题，它会将界面的主体颜色设成深色，陪衬颜色设成淡色。而<code>Theme.AppCompat.Light.NoActionBar</code>表示淡色主题，它会将界面的主体颜色设成淡色，陪衬颜色设成深色。</li></ul><p>我们之前的应用都是淡色，这里也用淡色</p><ul><li>修改代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"AppTheme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.Light.NoActionBar"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- Customize your theme here. --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimary"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimaryDark"</span>&gt;</span>@color/colorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorAccent"</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>观察一下AppTheme中的属性重写，这里重写了colorPrimary、colorPrimaryDark和colorAccent这3个属性的颜色。</p><p><img src="/2019/01/27/第十二章：MaterialDesign实战/color.png" alt=""></p><p>除了上述3个属性之外，我们还可以通过textColorPrimary、windowBackground和navigationBarColor等属性来控制更多位置的颜色。不过唯独colorAccent这个属性比较难理解，它不只是用来指定这样一个按钮的颜色，而是更多表达了一个强调的意思，比如一些控件的选中状态也会使用colorAccent的颜色。</p><ul><li>修改activity_main.xml的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>xmlns:app</code>指定了一个新的命名空间，由于每个布局文件都会使用xmlns:android来指定一个命名空间，因此我们才能一直使用android:id、android: layout_width等写法，那么这里指定了xmlns:app，也就是说现在可以使用app:attribute这样的写法了，由于Material Design是在Android 5.0系统中才出现的，而很多的material属性在5.0之前的系统中并不存在，那么为了能够兼容之前的老系统，我们就不能使用android:attribute这样的写法了，而是应该使用app:attribute</p><p>接下来定义了一个Toolbar控件，这个控件是由appcompat-v7库提供的。这里我们给Toolbar指定了一个id，将它的宽度设置为match_parent，高度设置为actionBar的高度，背景色设置为colorPrimary。不过下面的部分就稍微有点难理解了，由于我们刚才在styles.xml中将程序的主题指定成了淡色主题，因此Toolbar现在也是淡色主题，而Toolbar上面的各种元素就会自动使用深色系，这是为了和主体颜色区别开。但是这个效果看起来就会很差，之前使用ActionBar时文字都是白色的，现在变成黑色的会很难看。那么为了能让Toolbar单独使用深色主题，这里我们使用android:theme属性，将Toolbar的主题指定成了ThemeOverlay.AppCompat.Dark.ActionBar。但是这样指定完了之后又会出现新的问题，如果Toolbar中有菜单按钮（我们在2.2.5小节中学过），那么弹出的菜单项也会变成深色主题，这样就再次变得十分难看，于是这里使用了app:popupTheme属性单独将弹出的菜单项指定成了淡色主题。之所以使用app:popupTheme，是因为popupTheme这个属性是在Android 5.0系统中新增的，我们使用app:popupTheme的话就可以兼容Android 5.0以下的系统了。</p><ul><li>修改MainActivity的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.<span class="type">AppCompatActivity</span>;</span><br><span class="line"><span class="keyword">import</span> android.os.<span class="type">Bundle</span>;</span><br><span class="line"><span class="keyword">import</span> android.widget.<span class="type">Toolbar</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        android.support.v7.widget.<span class="type">Toolbar</span> toolbar=findViewById(<span class="type">R</span>.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里直接打Toolbar会出来两个选择，而这里用的是v7库中的，注意选择.虽然看上去和之前的标题栏没什么两样，但其实它已经是Toolbar而不是ActionBar了。因此它现在也具备了实现Material Design效果的能力</p><h2 id="Toolbar常用功能"><a href="#Toolbar常用功能" class="headerlink" title="Toolbar常用功能"></a>Toolbar常用功能</h2><h3 id="label属性，指定Toolbar中显示的内容"><a href="#label属性，指定Toolbar中显示的内容" class="headerlink" title="label属性，指定Toolbar中显示的内容"></a>label属性，指定Toolbar中显示的内容</h3><ul><li>修改AndroidManifest中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.zanecode6574.materialtest"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:label</span>=<span class="string">"测试material"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里给activity增加了一个android:label属性，用于指定在Toolbar中显示的文字内容，如果没有指定的话，会默认使用application中指定的label内容，也就是我们的应用名称。</p><p><img src="/2019/01/27/第十二章：MaterialDesign实战/MaterialName.png" alt=""></p><p>到这里我发现之前有些单词我给打错了，material打成了material，不管了，不影响</p><h3 id="添加一些Action按钮"><a href="#添加一些Action按钮" class="headerlink" title="添加一些Action按钮"></a>添加一些Action按钮</h3><ul><li>提前准备图片作为图标,可以放在drawable-xxhdpi目录下,我这里就直接用那个默认图标算了</li><li>在res目录下新建文件夹menu，然后在menu中新建Menu resource file，命名为toolbar.xml文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/backup"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"Backup"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:showAsAction</span>=<span class="string">"always"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/delete"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"Delete"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:showAsAction</span>=<span class="string">"ifRoom"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/settings"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"Settings"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:showAsAction</span>=<span class="string">"never"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们通过<code>&lt;item&gt;</code>标签来定义action按钮，android:id用于指定按钮的id，android:icon用于指定按钮的图标，android:title用于指定按钮的文字。</p><p>接着使用app:showAsAction来指定按钮的显示位置，之所以这里再次使用了app命名空间，同样是为了能够兼容低版本的系统。showAsAction主要有以下几种值可选：always表示永远显示在Toolbar中，如果屏幕空间不够则不显示；ifRoom表示屏幕空间足够的情况下显示在Toolbar中，不够的话就显示在菜单当中；never则表示永远显示在菜单当中。注意，Toolbar中的action按钮只会显示图标，菜单中的action按钮只会显示文字。</p><ul><li>修改MainActivity的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(item.getItemId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.backup:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了backup按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.delete:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中delete按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.settings:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了Settings按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        android.support.v7.widget.Toolbar toolbar=findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在onCreateOptionsMenu()方法中加载了toolbar.xml这个菜单文件，然后在onOptionsItemSelected()方法中处理各个按钮的点击事件。</p><p>Toolbar上面现在显示了两个action按钮，这是因为Backup按钮指定的显示位置是always，Delete按钮指定的显示位置是ifRoom，而现在屏幕空间很充足，因此两个按钮都会显示在Toolbar中。另外一个Settings按钮由于指定的显示位置是never，所以不会显示在Toolbar中，点击一下最右边的菜单按钮来展开菜单项，你就能找到Settings按钮了。</p><h1 id="滑动菜单"><a href="#滑动菜单" class="headerlink" title="滑动菜单"></a>滑动菜单</h1><p>滑动菜单可以说是Material Design中最常见的效果之一了，在许多著名的应用（如Gmail、Google+等）中，都有滑动菜单的功能。虽说这个功能看上去好像挺复杂的，不过借助谷歌提供的各种工具，我们可以很轻松地实现非常炫酷的滑动菜单效果</p><h2 id="DrawerLayout"><a href="#DrawerLayout" class="headerlink" title="DrawerLayout"></a>DrawerLayout</h2><p>所谓的滑动菜单就是将一些菜单选项隐藏起来，而不是放置在主屏幕上，然后可以通过滑动的方式将菜单显示出来。这种方式既节省了屏幕空间，又实现了非常好的动画效果，是Material Design中推荐的做法。</p><p>不过如果我们全靠自己去实现上述功能的话，难度恐怕就很大了。幸运的是，谷歌提供了一个DrawerLayout控件，借助这个控件，实现滑动菜单简单又方便。</p><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>它是一个布局，在布局中允许放入两个直接子控件，第一个子控件是主屏幕中显示的内容，第二个子控件是滑动菜单中显示的内容。</p><ul><li>修改activity_main.xml中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/drawer_layout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"这是菜单"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#FFF"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最外层的控件使用了DrawerLayout，这个控件是由support-v4库提供的。DrawerLayout中放置了两个直接子控件，第一个子控件是FrameLayout，用于作为主屏幕中显示的内容，当然里面还有我们刚刚定义的Toolbar。第二个子控件这里使用了一个TextView，用于作为滑动菜单中显示的内容，其实使用什么都可以，DrawerLayout并没有限制只能使用固定的控件。</p><p>但是关于第二个子控件有一点需要注意，layout_gravity这个属性是必须指定的，因为我们需要告诉DrawerLayout滑动菜单是在屏幕的左边还是右边，指定left表示滑动菜单在左边，指定right表示滑动菜单在右边。这里我指定了start，表示会根据系统语言进行判断，如果系统语言是从左往右的，比如英语、汉语，滑动菜单就在左边，如果系统语言是从右往左的，比如阿拉伯语，滑动菜单就在右边。</p><h3 id="添加按钮启动滑动菜单"><a href="#添加按钮启动滑动菜单" class="headerlink" title="添加按钮启动滑动菜单"></a>添加按钮启动滑动菜单</h3><p>书上也是准备了图标的，我这里还是用默认图标，别问为什么，懒得找</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.GravityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.widget.DrawerLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBar;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> DrawerLayout mDrawerLayout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> onOptionsItemSelected(MenuItem item) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(item.getItemId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">backup:</span></span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了backup按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">delete:</span></span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中delete按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">settings:</span></span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了Settings按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.<span class="string">home:</span></span><br><span class="line">                mDrawerLayout.openDrawer(GravityCompat.START);</span><br><span class="line"><span class="symbol">                default:</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        android.support.v7.widget.Toolbar toolbar=findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line"></span><br><span class="line">        mDrawerLayout=findViewById(R.id.drawer_layout);</span><br><span class="line">        ActionBar actionBar=getSupportActionBar();</span><br><span class="line">        <span class="keyword">if</span>(actionBar!=<span class="literal">null</span>)&#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="literal">true</span>);</span><br><span class="line">            actionBar.setHomeAsUpIndicator(R.mipmap.ic_launcher);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先调用findViewById()方法得到了DrawerLayout的实例，然后调用getSupportActionBar()方法得到了ActionBar的实例，虽然这个ActionBar的具体实现是由Toolbar来完成的。接着调用ActionBar的setDisplayHomeAsUpEnabled()方法让导航按钮显示出来，又调用了setHomeAsUpIndicator()方法来设置一个导航按钮图标。实际上，Toolbar最左侧的这个按钮就叫作HomeAsUp按钮，它默认的图标是一个返回的箭头，含义是返回上一个活动。很明显，这里我们将它默认的样式和作用都进行了修改。</p><p>接下来在onOptionsItemSelected()方法中对HomeAsUp按钮的点击事件进行处理，HomeAsUp按钮的id永远都是android.R.id.home。然后调用DrawerLayout的openDrawer()方法将滑动菜单展示出来，注意openDrawer()方法要求传入一个Gravity参数，为了保证这里的行为和XML中定义的一致，我们传入了GravityCompat.START。</p><h2 id="NavigationView"><a href="#NavigationView" class="headerlink" title="NavigationView"></a>NavigationView</h2><p>在滑动菜单页面可以定制任意的布局，不过谷歌给我们提供了一种更好的方法——使用NavigationView。NavigationView是Design Support库中提供的一个控件，它不仅是严格按照Material Design的要求来进行设计的，而且还可以将滑动菜单页面的实现变得非常简单。</p><ul><li>添加依赖</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">implementation</span> <span class="string">'com.android.support:design:28.0.0'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'de.hdodenhof:circleimageview:2.1.0'</span></span><br></pre></td></tr></table></figure><p>这里添加了两行依赖关系，第一行就是Design Support库，第二行是一个开源项目CircleImageView，它可以用来轻松实现图片圆形化的功能，我们待会就会用到它。</p><p>CircleImageView 的项目主页地址是：<a href="https://github.com/hdodenhof/CircleImageView" target="_blank" rel="noopener">https://github.com/hdodenhof/CircleImageView</a></p><ul><li>在开始准备NavigationView之前，需要提前准备好两个东西：menu和headerLayout。menu是用来在NavigationView中显示具体的菜单项的，headerLayout则是用来在NavigationView中显示头部布局的。</li><li>图片我直接也用那个默认的，方便</li><li>在menu文件夹下创建新的Menu resource file，命名为nav_menu.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">group</span> <span class="attr">android:checkableBehavior</span>=<span class="string">"single"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nav_call"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">"Call"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nav_friends"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">"Friends"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nav_location"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">"Location"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nav_mail"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">"Mail"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/nav_task"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:title</span>=<span class="string">"Tasks"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们首先在<code>&lt;menu&gt;</code>中嵌套了一个<code>&lt;group&gt;</code>标签，然后将group的checkableBehavior属性指定为single。group表示一个组，checkableBehavior指定为single表示组中的所有菜单项只能单选。</p><p>那么下面我们来看一下这些菜单项吧。这里一共定义了5个item，分别使用android:id属性指定菜单项的id，android:icon属性指定菜单项的图标，android:title属性指定菜单项显示的文字。就是这么简单，现在我们已经把menu准备好了。</p><ul><li><p>接下来应该准备headerLayout了，这是一个可以随意定制的布局，不过我并不想将它做得太复杂。这里简单起见，我们就在headerLayout中放置头像、用户名、邮箱地址这3项内容吧。这里头像书上用了一张图，我呢，继续用那个默认图标</p></li><li><p>在layout文件夹新建Layout resource file，名字为nav_header.xml</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"180dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:padding</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">de.hdodenhof.circleimageview.CircleImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"70dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"70dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/icon_image"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/mail"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"ZaneCode6574@qq.com"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#FFF"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"14sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/username"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_above</span>=<span class="string">"@+id/mail"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"ZaneCode6574"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"#FFF"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"14sp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>布局文件的最外层是一个RelativeLayout，我们将它的宽度设为match_parent，高度设为180dp，这是一个NavigationView比较适合的高度，然后指定它的背景色为colorPrimary。<br>在RelativeLayout中我们放置了3个控件，CircleImageView是一个用于将图片圆形化的控件，它的用法非常简单，基本和ImageView是完全一样的，这里给它指定了一张图片作为头像，然后设置为居中显示。另外两个TextView分别用于显示用户名和邮箱地址</p><ul><li>修改activity_main.xml的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/drawer_layout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.NavigationView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:menu</span>=<span class="string">"@menu/nav_menu"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:headerLayout</span>=<span class="string">"@layout/nav_header"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.NavigationView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们将之前的TextView换成了NavigationView，这样滑动菜单中显示的内容也就变成NavigationView了。这里又通过app:menu和app:headerLayout属性将我们刚才准备好的menu和headerLayout设置了进去，这样NavigationView就定义完成了。</p><ul><li>修改MainACtivity设置点击事件</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.NavigationView;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.GravityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.widget.DrawerLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBar;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> DrawerLayout mDrawerLayout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> onOptionsItemSelected(MenuItem item) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(item.getItemId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">backup:</span></span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了backup按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">delete:</span></span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中delete按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">settings:</span></span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了Settings按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.<span class="string">home:</span></span><br><span class="line">                mDrawerLayout.openDrawer(GravityCompat.START);</span><br><span class="line"><span class="symbol">                default:</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        android.support.v7.widget.Toolbar toolbar=findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line"></span><br><span class="line">        mDrawerLayout=findViewById(R.id.drawer_layout);</span><br><span class="line">        NavigationView navigationView=findViewById(R.id.nav_view);</span><br><span class="line">        ActionBar actionBar=getSupportActionBar();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(actionBar!=<span class="literal">null</span>)&#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="literal">true</span>);</span><br><span class="line">            actionBar.setHomeAsUpIndicator(R.mipmap.ic_launcher);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        navigationView.setCheckedItem(R.id.nav_call);</span><br><span class="line">        navigationView.setNavigationItemSelectedListener(<span class="keyword">new</span> NavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">boolean</span> onNavigationItemSelected(<span class="meta">@NonNull</span> MenuItem menuItem) &#123;</span><br><span class="line">                mDrawerLayout.closeDrawers();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="悬浮按钮和可交互提示"><a href="#悬浮按钮和可交互提示" class="headerlink" title="悬浮按钮和可交互提示"></a>悬浮按钮和可交互提示</h1><p>立面设计是Material Design中一条非常重要的设计思想，也就是说，按照Material Design的理念，应用程序的界面不仅仅只是一个平面，而应该是有立体效果的。在官方给出的示例中，最简单且最具代表性的立面设计就是悬浮按钮了，这种按钮不属于主界面平面的一部分，而是位于另外一个维度的，因此就会给人一种悬浮的感觉。</p><h2 id="FloatingActionButton"><a href="#FloatingActionButton" class="headerlink" title="FloatingActionButton"></a>FloatingActionButton</h2><p>FloatingActionButton是Design Support库中提供的一个控件，这个控件可以帮助我们比较轻松地实现悬浮按钮的效果。</p><ul><li>这里又要准备一张图，我呢，你懂的</li><li>修改activity_main.xml的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/drawer_layout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/fab"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"bottom|end"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_margin</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.NavigationView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:menu</span>=<span class="string">"@menu/nav_menu"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:headerLayout</span>=<span class="string">"@layout/nav_header"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.NavigationView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>仔细观察的话，会发现这个悬浮按钮的下面还有一点阴影。其实这很好理解，因为FloatingActionButton是悬浮在当前界面上的，既然是悬浮，那么就理所应当会有投影，Design Support库连这种细节都帮我们考虑到了。<br>说到悬浮，其实我们还可以指定FloatingActionButton的悬浮高度，使用<code>app:elevation=&quot;&quot;</code>属性即可，高度值越大，投影范围也越大，但是投影效果越淡，高度值越小，投影范围也越小，但是投影效果越浓。当然这些效果的差异其实都不怎么明显，我个人感觉使用默认的FloatingActionButton效果就已经足够了</p><h3 id="增加点击事件"><a href="#增加点击事件" class="headerlink" title="增加点击事件"></a>增加点击事件</h3><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.FloatingActionButton;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.NavigationView;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.GravityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.widget.DrawerLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBar;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DrawerLayout mDrawerLayout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(item.getItemId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.backup:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了backup按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.delete:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中delete按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.settings:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了Settings按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">                mDrawerLayout.openDrawer(GravityCompat.START);</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        FloatingActionButton fab=findViewById(R.id.fab);</span><br><span class="line"></span><br><span class="line">        fab.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"点击了悬浮按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        android.support.v7.widget.Toolbar toolbar=findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line"></span><br><span class="line">        mDrawerLayout=findViewById(R.id.drawer_layout);</span><br><span class="line">        NavigationView navigationView=findViewById(R.id.nav_view);</span><br><span class="line">        ActionBar actionBar=getSupportActionBar();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(actionBar!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line">            actionBar.setHomeAsUpIndicator(R.mipmap.ic_launcher);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        navigationView.setCheckedItem(R.id.nav_call);</span><br><span class="line">        navigationView.setNavigationItemSelectedListener(<span class="keyword">new</span> NavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNavigationItemSelected</span><span class="params">(@NonNull MenuItem menuItem)</span> </span>&#123;</span><br><span class="line">                mDrawerLayout.closeDrawers();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Snackbar"><a href="#Snackbar" class="headerlink" title="Snackbar"></a>Snackbar</h2><p>Snackbar并不是Toast的替代品，它们两者之间有着不同的应用场景。Toast的作用是告诉用户现在发生了什么事情，但同时用户只能被动接收这个事情，因为没有什么办法能让用户进行选择。而Snackbar则在这方面进行了扩展，它允许在提示当中加入一个可交互按钮，当用户点击按钮的时候可以执行一些额外的逻辑操作。打个比方，如果我们在执行删除操作的时候只弹出一个Toast提示，那么用户要是误删了某个重要数据的话肯定会十分抓狂吧，但是如果我们增加一个Undo按钮，就相当于给用户提供了一种弥补措施，从而大大降低了事故发生的概率，提升了用户体验。</p><p>Snackbar的用法也非常简单，它和Toast是基本相似的，只不过可以额外增加一个按钮的点击事件。</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.FloatingActionButton;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.NavigationView;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.Snackbar;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.GravityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.widget.DrawerLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBar;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DrawerLayout mDrawerLayout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(item.getItemId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.backup:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了backup按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.delete:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中delete按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.settings:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了Settings按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">                mDrawerLayout.openDrawer(GravityCompat.START);</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        FloatingActionButton fab=findViewById(R.id.fab);</span><br><span class="line"></span><br><span class="line">        fab.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Snackbar.make(v,<span class="string">"数据已经删除"</span>,Snackbar.LENGTH_SHORT).setAction(<span class="string">"撤销"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"数据已经恢复"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        android.support.v7.widget.Toolbar toolbar=findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line"></span><br><span class="line">        mDrawerLayout=findViewById(R.id.drawer_layout);</span><br><span class="line">        NavigationView navigationView=findViewById(R.id.nav_view);</span><br><span class="line">        ActionBar actionBar=getSupportActionBar();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(actionBar!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line">            actionBar.setHomeAsUpIndicator(R.mipmap.ic_launcher);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        navigationView.setCheckedItem(R.id.nav_call);</span><br><span class="line">        navigationView.setNavigationItemSelectedListener(<span class="keyword">new</span> NavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNavigationItemSelected</span><span class="params">(@NonNull MenuItem menuItem)</span> </span>&#123;</span><br><span class="line">                mDrawerLayout.closeDrawers();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用了Snackbar的make()方法来创建一个Snackbar对象，make()方法的第一个参数需要传入一个View，只要是当前界面布局的任意一个View都可以，Snackbar会使用这个View来自动查找最外层的布局，用于展示Snackbar。第二个参数就是Snackbar中显示的内容，第三个参数是Snackbar显示的时长。这些和Toast都是类似的。</p><p>接着这里又调用了一个setAction()方法来设置一个动作，从而让Snackbar不仅仅是一个提示，而是可以和用户进行交互的。简单起见，我们在动作按钮的点击事件里面弹出一个Toast提示。最后调用show()方法让Snackbar显示出来。</p><p><strong>但是，这个Snakbar弹出来的时候挡住了悬浮按钮,借助CoordinatorLayout可以解决这个问题</strong></p><h2 id="CoordinatorLayout"><a href="#CoordinatorLayout" class="headerlink" title="CoordinatorLayout"></a>CoordinatorLayout</h2><p>CoordinaLayout可以说是加强版的FrameLayout</p><p>CoordinatorLayout可以监听其所有子控件的各种事件，然后自动帮助我们做出最为合理的响应。举个简单的例子，刚才弹出的Snackbar提示将悬浮按钮遮挡住了，而如果我们能让CoordinatorLayout监听到Snackbar的弹出事件，那么它会自动将内部的FloatingActionButton向上偏移，从而确保不会被Snackbar遮挡到。</p><p>至于CoordinatorLayout的使用也非常简单，我们只需要将原来的FrameLayout替换一下就可以了。</p><p>刚才说的是CoordinatorLayout可以监听其所有子控件的各种事件，但是Snackbar好像并不是CoordinatorLayout的子控件吧，为什么它却可以被监听到呢？</p><p>其实道理很简单，还记得我们在Snackbar的make()方法中传入的第一个参数吗？这个参数就是用来指定Snackbar是基于哪个View来触发的，刚才我们传入的是FloatingActionButton本身，而FloatingActionButton是CoordinatorLayout中的子控件，因此这个事件就理所应当能被监听到了。</p><h1 id="卡片式布局"><a href="#卡片式布局" class="headerlink" title="卡片式布局"></a>卡片式布局</h1><p>虽然现在materialTest中已经应用了非常多的Material Design效果，不过你会发现，界面上最主要的一块区域还处于空白状态。这块区域通常都是用来放置应用的主体内容的，我准备使用一些精美的水果图片来填充这部分区域。</p><p>那么为了要让水果图片也能material化，本节中我们将会学习如何实现卡片式布局的效果。卡片式布局也是materials Design中提出的一个新的概念，它可以让页面中的元素看起来就像在卡片中一样，并且还能拥有圆角和投影，下面我们就开始具体学习一下。</p><p>老规矩，默认图</p><h2 id="CardView"><a href="#CardView" class="headerlink" title="CardView"></a>CardView</h2><p>CardView是用于实现卡片式布局效果的重要控件，由appcompat-v7库提供。实际上，CardView也是一个FrameLayout，只是额外提供了圆角和阴影等效果，看上去会有立体的感觉。</p><ul><li>基本用法</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;android<span class="selector-class">.support</span><span class="selector-class">.v7</span>．widget.CardView</span><br><span class="line">android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">app:cardCornerRadius=<span class="string">"4dp"</span></span><br><span class="line">app:elevation=<span class="string">"5dp"</span>&gt;</span><br><span class="line">&lt;TextView</span><br><span class="line">android:id=<span class="string">"@+id/info_text"</span></span><br><span class="line">android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">android:layout_height=<span class="string">"wrap_content"</span>/&gt;</span><br><span class="line">&lt;/android<span class="selector-class">.support</span><span class="selector-class">.v7</span>．widget.CardView&gt;</span><br></pre></td></tr></table></figure><p>定义了一个CardView布局，我们可以通过app:cardCornerRadius属性指定卡片圆角的弧度，数值越大，圆角的弧度也越大。另外还可以通过app:elevation属性指定卡片的高度，高度值越大，投影范围也越大，但是投影效果越淡，高度值越小，投影范围也越小，但是投影效果越浓，这一点和FloatingActionButton是一致的。</p><p>然后我们在CardView布局中放置了一个TextView，那么这个TextView就会显示在一张卡片当中了，CardView的用法就是这么简单。</p><ul><li><p>为了能够充分利用屏幕的空间，这里我准备综合运用一下第3章中学到的知识，使用RecyclerView来填充materialTest项目的主界面部分。</p></li><li><p>添加依赖</p></li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">implementation</span> <span class="string">'com.android.support:recyclerview-v7:28.0.0'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'com.android.support:cardview-v7:28.0.0'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'com.github.bumptech.glide:glide:3.7.0'</span></span><br></pre></td></tr></table></figure><p>最后一行，这里添加了一个Glide库的依赖。Glide是一个超级强大的图片加载库，它不仅可以用于加载本地图片，还可以加载网络图片、GIF图片、甚至是本地视频。最重要的是，Glide的用法非常简单，只需一行代码就能轻松实现复杂的图片加载功能，因此这里我们准备用它来加载水果图片</p><p>Glide的项目主页地址是：<a href="https://github.com/bumptech/glide" target="_blank" rel="noopener">https://github.com/bumptech/glide</a></p><ul><li>修改activity_main.xml中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/drawer_layout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/fab"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"bottom|end"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_margin</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.NavigationView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:menu</span>=<span class="string">"@menu/nav_menu"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:headerLayout</span>=<span class="string">"@layout/nav_header"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.NavigationView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>定义类Fruit</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fruit</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> imageId;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fruit</span><span class="params">(String name,<span class="keyword">int</span> imageId)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">        <span class="keyword">this</span>.imageId=imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getImageId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setImageId</span><span class="params">(<span class="keyword">int</span> imageId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>为RecyclerView的子项指定一个我们自定义的布局</li></ul><p>在layout下新建fruit_item.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardCornerRadius</span>=<span class="string">"4dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/fruit_image"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/fruit_name"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_margin</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"16sp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用了CardView来作为子项的最外层布局，从而使得RecyclerView中的每个元素都是在卡片当中的。CardView由于是一个FrameLayout，因此它没有什么方便的定位方式，这里我们只好在CardView中再嵌套一个LinearLayout，然后在LinearLayout中放置具体的内容。</p><p>内容倒也没有什么特殊的地方，就是定义了一个ImageView用于显示水果的图片，又定义了一个TextView用于显示水果的名称，并让TextView在水平方向上居中显示。注意在ImageView中我们使用了一个scaleType属性，这个属性可以指定图片的缩放模式。由于各张水果图片的长宽比例可能都不一致，为了让所有的图片都能填充满整个ImageView，这里使用了centerCrop模式，它可以让图片保持原有比例填充满ImageView，并将超出屏幕的部分裁剪掉。</p><ul><li>为RecyclerView准备一个适配器</li></ul><p>新建FruitAdapter类，让这个适配器继承自RecyclerView.Adapter，指定泛型为FruitAdapter.ViewHolder</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.<span class="type">Context</span>;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.<span class="type">NonNull</span>;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.<span class="type">CardView</span>;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.<span class="type">RecyclerView</span>;</span><br><span class="line"><span class="keyword">import</span> android.view.<span class="type">LayoutInflater</span>;</span><br><span class="line"><span class="keyword">import</span> android.view.<span class="type">View</span>;</span><br><span class="line"><span class="keyword">import</span> android.view.<span class="type">ViewGroup</span>;</span><br><span class="line"><span class="keyword">import</span> android.widget.<span class="type">ImageView</span>;</span><br><span class="line"><span class="keyword">import</span> android.widget.<span class="type">TextView</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bumptech.glide.<span class="type">Glide</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">List</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter&lt;FruitAdapter</span>.<span class="title">ViewHolder&gt;</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Context</span> mContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">List</span>&lt;<span class="type">Fruit</span>&gt; mFruitList;</span><br><span class="line"></span><br><span class="line">    static <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span></span>&#123;</span><br><span class="line">        <span class="type">CardView</span> cardView;</span><br><span class="line">        <span class="type">ImageView</span> fruitImage;</span><br><span class="line">        <span class="type">TextView</span> fruitName;</span><br><span class="line"></span><br><span class="line">        public <span class="type">ViewHolder</span>(<span class="meta">@NonNull</span> <span class="type">View</span> itemView) &#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cardView=(<span class="type">CardView</span>)itemView;</span><br><span class="line"></span><br><span class="line">            fruitImage=(<span class="type">ImageView</span>)itemView.findViewById(<span class="type">R</span>.id.fruit_image);</span><br><span class="line">            fruitName=(<span class="type">TextView</span>)itemView.findViewById(<span class="type">R</span>.id.fruit_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="type">FruitAdapter</span>(<span class="type">List</span>&lt;<span class="type">Fruit</span>&gt; fruitList)&#123;</span><br><span class="line">        mFruitList=fruitList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="type">ViewHolder</span> onCreateViewHolder(<span class="meta">@NonNull</span> <span class="type">ViewGroup</span> viewGroup, int i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(mContext==<span class="literal">null</span>)&#123;</span><br><span class="line">            mContext=viewGroup.getContext();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">View</span> view=<span class="type">LayoutInflater</span>.from(mContext).inflate(<span class="type">R</span>.layout.fruit_item,viewGroup,<span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">ViewHolder</span>(view);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void onBindViewHolder(<span class="meta">@NonNull</span> <span class="type">ViewHolder</span> viewHolder, int i) &#123;</span><br><span class="line">        <span class="type">Fruit</span> fruit=mFruitList.get(i);</span><br><span class="line">        viewHolder.fruitName.setText(fruit.getName());</span><br><span class="line"></span><br><span class="line">        <span class="type">Glide</span>.<span class="keyword">with</span>(mContext).load(fruit.getImageId()).into(viewHolder.fruitImage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public int getItemCount() &#123;</span><br><span class="line">        <span class="keyword">return</span> mFruitList.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Glide的用法实在是太简单了。首先调用Glide.with()方法并传入一个Context、Activity或Fragment参数，然后调用load()方法去加载图片，可以是一个URL地址，也可以是一个本地路径，或者是一个资源id，最后调用into()方法将图片设置到具体某一个ImageView中就可以了。</p><p>为什么要使用Glide而不是传统的设置图片方式呢？因为这次我从网上找的这些水果图片像素都非常高，如果不进行压缩就直接展示的话，很容易就会引起内存溢出。而使用Glide就完全不需要担心这回事，因为Glide在内部做了许多非常复杂的逻辑操作，其中就包括了图片压缩，我们只需要安心按照Glide的标准用法去加载图片就可以了。</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.FloatingActionButton;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.NavigationView;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.Snackbar;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.GravityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.widget.DrawerLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBar;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DrawerLayout mDrawerLayout;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Fruit[] fruits=&#123;<span class="keyword">new</span> Fruit(<span class="string">"Apple"</span>,R.mipmap.ic_launcher),<span class="keyword">new</span> Fruit(<span class="string">"Banana"</span>,R.mipmap.ic_launcher)</span><br><span class="line">            ,<span class="keyword">new</span> Fruit(<span class="string">"Orange"</span>,R.mipmap.ic_launcher),<span class="keyword">new</span> Fruit(<span class="string">"Pear"</span>,R.mipmap.ic_launcher)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; fruitList=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FruitAdapter adapter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(item.getItemId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.backup:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了backup按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.delete:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中delete按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.settings:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了Settings按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">                mDrawerLayout.openDrawer(GravityCompat.START);</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        initFruits();</span><br><span class="line">        RecyclerView recyclerView=findViewById(R.id.recycler_view);</span><br><span class="line">        GridLayoutManager layoutManager=<span class="keyword">new</span> GridLayoutManager(<span class="keyword">this</span>,<span class="number">2</span>);</span><br><span class="line">        recyclerView.setLayoutManager(layoutManager);</span><br><span class="line"></span><br><span class="line">        adapter=<span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">        recyclerView.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">        FloatingActionButton fab=findViewById(R.id.fab);</span><br><span class="line"></span><br><span class="line">        fab.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Snackbar.make(v,<span class="string">"数据已经删除"</span>,Snackbar.LENGTH_SHORT).setAction(<span class="string">"撤销"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"数据已经恢复"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        android.support.v7.widget.Toolbar toolbar=findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line"></span><br><span class="line">        mDrawerLayout=findViewById(R.id.drawer_layout);</span><br><span class="line">        NavigationView navigationView=findViewById(R.id.nav_view);</span><br><span class="line">        ActionBar actionBar=getSupportActionBar();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(actionBar!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line">            actionBar.setHomeAsUpIndicator(R.mipmap.ic_launcher);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        navigationView.setCheckedItem(R.id.nav_call);</span><br><span class="line">        navigationView.setNavigationItemSelectedListener(<span class="keyword">new</span> NavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNavigationItemSelected</span><span class="params">(@NonNull MenuItem menuItem)</span> </span>&#123;</span><br><span class="line">                mDrawerLayout.closeDrawers();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initFruits</span><span class="params">()</span></span>&#123;</span><br><span class="line">        fruitList.clear();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">50</span>;i++)&#123;</span><br><span class="line">            Random random=<span class="keyword">new</span> Random();</span><br><span class="line">            <span class="keyword">int</span> index=random.nextInt(fruits.length);</span><br><span class="line">            fruitList.add(fruits[index]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在MainActivity中我们首先定义了一个数组，数组里面存放了很多个Fruit的实例，每个实例都代表着一种水果。然后在initFruits()方法中，先是清空了一下fruitList中的数据，接着使用一个随机函数，从刚才定义的Fruit数组中随机挑选一个水果放入到fruitList当中，这样每次打开程序看到的水果数据都会是不同的。另外，为了让界面上的数据多一些，这里使用了一个循环，随机挑选50个水果。</p><p>之后的用法就是RecyclerView的标准用法了，不过这里使用了GridLayoutManager这种布局方式。在第3章中我们已经学过了LinearLayoutManager和StaggeredGridLayoutManager，现在终于将所有的布局方式都补齐了。GridLayoutManager的用法也没有什么特别之处，它的构造函数接收两个参数，第一个是Context，第二个是列数，这里我们希望每一行中会有两列数据。</p><p>但是，现在Toolbar被挡住了，我们需要用AppBarLayout来解决</p><h2 id="AppBarLayout"><a href="#AppBarLayout" class="headerlink" title="AppBarLayout"></a>AppBarLayout</h2><p>由于RecyclerView和Toolbar都是放置在CoordinatorLayout中的，而前面已经说过，CoordinatorLayout就是一个加强版的FrameLayout，那么FrameLayout中的所有控件在不进行明确定位的情况下，默认都会摆放在布局的左上角，从而也就产生了遮挡的现象。</p><p>使用Design Support库中提供的另外一个工具——AppBarLayout。AppBarLayout实际上是一个垂直方向的LinearLayout，它在内部做了很多滚动事件的封装，并应用了一些Material Design的设计理念。</p><ul><li>将Toolbar嵌套到AppBarLayout中</li><li>给RecyclerView指定一个布局行为</li><li>修改activity_main.xml中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/drawer_layout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/fab"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"bottom|end"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_margin</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_behavior</span>=<span class="string">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.NavigationView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:menu</span>=<span class="string">"@menu/nav_menu"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:headerLayout</span>=<span class="string">"@layout/nav_header"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.NavigationView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>刚才有提到过，说AppBarLayout中应用了一些Material Design的设计理念，好像从上面的例子完全体现不出来呀。事实上，当RecyclerView滚动的时候就已经将滚动事件都通知给AppBarLayout了，只是我们还没进行处理而已。那么下面就让我们来进一步优化，看看AppBarLayout到底能实现什么样的Material Design效果。</p><p>当AppBarLayout接收到滚动事件的时候，它内部的子控件其实是可以指定如何去影响这些事件的，通过app:layout_scrollFlags属性就能实现</p><ul><li>修改activity_main.xml中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/drawer_layout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_scrollFlags</span>=<span class="string">"scroll|enterAlways|snap"</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/fab"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"bottom|end"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_margin</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_behavior</span>=<span class="string">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.NavigationView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:menu</span>=<span class="string">"@menu/nav_menu"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:headerLayout</span>=<span class="string">"@layout/nav_header"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.NavigationView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在Toolbar中添加了一个app:layout_scrollFlags属性，并将这个属性的值指定成了scroll|enterAlways|snap。其中，scroll表示当RecyclerView向上滚动的时候，Toolbar会跟着一起向上滚动并实现隐藏；enterAlways表示当RecyclerView向下滚动的时候，Toolbar会跟着一起向下滚动并重新显示。snap表示当Toolbar还没有完全隐藏或显示的时候，会根据当前滚动的距离，自动选择是隐藏还是显示。</p><h1 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h1><p>谷歌为了让Android的下拉刷新风格能有一个统一的标准，于是在Material Design中制定了一个官方的设计规范。当然，我们并不需要去深入了解这个规范到底是什么样的，因为谷歌早就提供好了现成的控件，我们只需要在项目中直接使用就可以了。</p><p>SwipeRefreshLayout就是用于实现下拉刷新功能的核心类，它是由support-v4库提供的。我们把想要实现下拉刷新功能的控件放置到SwipeRefreshLayout中，就可以迅速让这个控件支持下拉刷新。那么在materialTest项目中，应该支持下拉刷新功能的控件自然就是RecyclerView了。</p><ul><li>修改acitivty_main.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/drawer_layout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:popupTheme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Light"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_scrollFlags</span>=<span class="string">"scroll|enterAlways|snap"</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/fab"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">"bottom|end"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_margin</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.v4.widget.SwipeRefreshLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/swipe_refresh"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_behavior</span>=<span class="string">"@string/appbar_scrolling_view_behavior"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/recycler_view"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.v4.widget.SwipeRefreshLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.NavigationView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/nav_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:menu</span>=<span class="string">"@menu/nav_menu"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:headerLayout</span>=<span class="string">"@layout/nav_header"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.NavigationView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们在RecyclerView的外面又嵌套了一层SwipeRefreshLayout，这样RecyclerView就自动拥有下拉刷新功能了。另外需要注意，由于RecyclerView现在变成了SwipeRefreshLayout的子控件，因此之前使用app:layout_behavior声明的布局行为现在也要移到SwipeRefreshLayout中才行。</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.FloatingActionButton;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.NavigationView;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.Snackbar;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.view.GravityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.widget.DrawerLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.widget.SwipeRefreshLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBar;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.GridLayoutManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.RecyclerView;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DrawerLayout mDrawerLayout;</span><br><span class="line">    <span class="keyword">private</span> SwipeRefreshLayout swipeRefreshLayout;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Fruit[] fruits=&#123;<span class="keyword">new</span> Fruit(<span class="string">"Apple"</span>,R.mipmap.ic_launcher),<span class="keyword">new</span> Fruit(<span class="string">"Banana"</span>,R.mipmap.ic_launcher)</span><br><span class="line">            ,<span class="keyword">new</span> Fruit(<span class="string">"Orange"</span>,R.mipmap.ic_launcher),<span class="keyword">new</span> Fruit(<span class="string">"Pear"</span>,R.mipmap.ic_launcher)</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; fruitList=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> FruitAdapter adapter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.toolbar,menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(item.getItemId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.backup:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了backup按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.delete:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中delete按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.settings:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"选中了Settings按钮"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">                mDrawerLayout.openDrawer(GravityCompat.START);</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        swipeRefreshLayout=findViewById(R.id.swipe_refresh);</span><br><span class="line"></span><br><span class="line">        swipeRefreshLayout.setColorSchemeResources(R.color.colorPrimary);</span><br><span class="line">        swipeRefreshLayout.setOnRefreshListener(<span class="keyword">new</span> SwipeRefreshLayout.OnRefreshListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                refreshFruits();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        initFruits();</span><br><span class="line">        RecyclerView recyclerView=findViewById(R.id.recycler_view);</span><br><span class="line">        GridLayoutManager layoutManager=<span class="keyword">new</span> GridLayoutManager(<span class="keyword">this</span>,<span class="number">2</span>);</span><br><span class="line">        recyclerView.setLayoutManager(layoutManager);</span><br><span class="line"></span><br><span class="line">        adapter=<span class="keyword">new</span> FruitAdapter(fruitList);</span><br><span class="line">        recyclerView.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">        FloatingActionButton fab=findViewById(R.id.fab);</span><br><span class="line"></span><br><span class="line">        fab.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Snackbar.make(v,<span class="string">"数据已经删除"</span>,Snackbar.LENGTH_SHORT).setAction(<span class="string">"撤销"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"数据已经恢复"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        android.support.v7.widget.Toolbar toolbar=findViewById(R.id.toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line"></span><br><span class="line">        mDrawerLayout=findViewById(R.id.drawer_layout);</span><br><span class="line">        NavigationView navigationView=findViewById(R.id.nav_view);</span><br><span class="line">        ActionBar actionBar=getSupportActionBar();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(actionBar!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line">            actionBar.setHomeAsUpIndicator(R.mipmap.ic_launcher);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        navigationView.setCheckedItem(R.id.nav_call);</span><br><span class="line">        navigationView.setNavigationItemSelectedListener(<span class="keyword">new</span> NavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onNavigationItemSelected</span><span class="params">(@NonNull MenuItem menuItem)</span> </span>&#123;</span><br><span class="line">                mDrawerLayout.closeDrawers();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initFruits</span><span class="params">()</span></span>&#123;</span><br><span class="line">        fruitList.clear();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">50</span>;i++)&#123;</span><br><span class="line">            Random random=<span class="keyword">new</span> Random();</span><br><span class="line">            <span class="keyword">int</span> index=random.nextInt(fruits.length);</span><br><span class="line">            fruitList.add(fruits[index]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshFruits</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">                &#125;<span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        initFruits();</span><br><span class="line">                        adapter.notifyDataSetChanged();</span><br><span class="line">                        swipeRefreshLayout.setRefreshing(<span class="keyword">false</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先通过findViewById()方法拿到SwipeRefreshLayout的实例，然后调用setColorSchemeResources()方法来设置下拉刷新进度条的颜色，这里我们就使用主题中的colorPrimary作为进度条的颜色了。</p><p>接着调用setOnRefreshListener()方法来设置一个下拉刷新的监听器，当触发了下拉刷新操作的时候就会回调这个监听器的onRefresh()方法，然后我们在这里去处理具体的刷新逻辑就可以了。</p><p>通常情况下，onRefresh()方法中应该是去网络上请求最新的数据，然后再将这些数据展示出来。这里简单起见，我们就不和网络进行交互了，而是调用一个refreshFruits()方法进行本地刷新操作。refreshFruits()方法中先是开启了一个线程，然后将线程沉睡两秒钟。之所以这么做，是因为本地刷新操作速度非常快，如果不将线程沉睡的话，刷新立刻就结束了，从而看不到刷新的过程。</p><p>沉睡结束之后，这里使用了runOnUiThread()方法将线程切换回主线程，然后调用initFruits()方法重新生成数据，接着再调用FruitAdapter的notifyDataSetChanged()方法通知数据发生了变化，最后调用SwipeRefreshLayout的setRefreshing()方法并传入false，用于表示刷新事件结束，并隐藏刷新进度条。</p><h1 id="可折叠式标题栏"><a href="#可折叠式标题栏" class="headerlink" title="可折叠式标题栏"></a>可折叠式标题栏</h1><p>虽说我们现在的标题栏是使用Toolbar来编写的，不过它看上去和传统的ActionBar其实没什么两样，只不过可以响应RecyclerView的滚动事件来进行隐藏和显示。而Material Design中并没有限定标题栏必须是长这个样子的，事实上，我们可以根据自己的喜好随意定制标题栏的样式。那么本节中我们就来实现一个可折叠式标题栏的效果，需要借助CollapsingToolbarLayout这个工具。</p><h2 id="CollapsingToolbarLayout"><a href="#CollapsingToolbarLayout" class="headerlink" title="CollapsingToolbarLayout"></a>CollapsingToolbarLayout</h2><p>CollapsingToolbarLayout是一个作用于Toolbar基础之上的布局，它也是由Design Support库提供的。CollapsingToolbarLayout可以让Toolbar的效果变得更加丰富，不仅仅是展示一个标题栏，而是能够实现非常华丽的效果。</p><p>CollapsingToolbarLayout是不能独立存在的，它在设计的时候就被限定只能作为AppBarLayout的直接子布局来使用。而AppBarLayout又必须是CoordinatorLayout的子布局。</p><ul><li>新建活动作为水果的详情展示界面,命名为FruitActivity</li><li>编辑activity_fruit.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/appBar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"250dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.CollapsingToolbarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/collapsing_toolbar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:contentScrim</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_scrollFlags</span>=<span class="string">"scroll|exitUntilCollapsed"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/fruit_image_view"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_collapseMode</span>=<span class="string">"parallax"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_collapseMode</span>=<span class="string">"pin"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">android.support.v7.widget.Toolbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.design.widget.CollapsingToolbarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在新的布局中android:theme属性指定了一个ThemeOverlay.AppCompat.Dark.ActionBar的主题，其实对于这部分我们也并不陌生，因为之前在activity_main.xml中给Toolbar指定的也是这个主题，只不过这里要实现更加高级的Toolbar效果，因此需要将这个主题的指定提到上一层来。</p></li><li><p>app:contentScrim属性用于指定CollapsingToolbarLayout在趋于折叠状态以及折叠之后的背景色，其实CollapsingToolbarLayout在折叠之后就是一个普通的Toolbar，那么背景色肯定应该是colorPrimary了，具体的效果我们待会儿就能看到。</p></li><li><p>app:layout_scrollFlags属性我们也是见过的，只不过之前是给Toolbar指定的，现在也移到外面来了。其中，scroll表示CollapsingToolbarLayout会随着水果内容详情的滚动一起滚动，exitUntilCollapsed表示当CollapsingToolbarLayout随着滚动完成折叠之后就保留在界面上，不再移出屏幕。</p></li></ul><ul><li><p>在CollapsingToolbarLayout中定义了一个ImageView和一个Toolbar，也就意味着，这个高级版的标题栏将是由普通的标题栏加上图片组合而成的。这里定义的大多数属性我们都是见过的，就不再解释了，只有一个app:layout_collapseMode比较陌生。它用于指定当前控件在CollapsingToolbarLayout折叠过程中的折叠模式，其中Toolbar指定成pin，表示在折叠的过程中位置始终保持不变，ImageView指定成parallax，表示会在折叠的过程中产生一定的错位偏移，这种模式的视觉效果会非常好。</p></li><li><p>水果内容详情的最外层布局使用了一个NestedScrollView，注意它和AppBarLayout是平级的。我们之前在9.2.1小节学过ScrollView的用法，它允许使用滚动的方式来查看屏幕以外的数据，而NestedScrollView在此基础之上还增加了嵌套响应滚动事件的功能。由于CoordinatorLayout本身已经可以响应滚动事件了，因此我们在它的内部就需要使用NestedScrollView或RecyclerView这样的布局。另外，这里还通过app:layout_behavior属性指定了一个布局行为，这和之前在RecyclerView中的用法是一模一样的。</p></li><li><p>不管是ScrollView还是NestedScrollView，它们的内部都只允许存在一个直接子布局。因此，如果我们想要在里面放入很多东西的话，通常都会先嵌套一个LinearLayout，然后再在LinearLayout中放入具体的内容</p></li><li><p>水果详情页编写完了以后，还可以在界面上添加一个悬浮按钮，加入的话我们会活得一些额外的动画效果，这里举例加入一个表示评论的按钮</p></li><li><p>这里加入了一个FloatingActionButton，它和AppBarLayout以及NestedScrollView是平级的。FloatingActionButton中使用app:layout_anchor属性指定了一个锚点，我们将锚点设置为AppBarLayout，这样悬浮按钮就会出现在水果标题栏的区域内，接着又使用app:layout_anchorGravity属性将悬浮按钮定位在标题栏区域的右下角。其他一些属性都比较简单，就不再进行解释了。</p></li><li><p>修改FruitActivity中的代码</p></li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.support.design.widget.CollapsingToolbarLayout;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.ActionBar;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bumptech.glide.Glide;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_NAME=<span class="string">"fruit_name"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FRUIT_IMAGE_ID=<span class="string">"fruit_image_id"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_fruit);</span><br><span class="line"></span><br><span class="line">        Intent intent=getIntent();</span><br><span class="line"></span><br><span class="line">        String fruitName=intent.getStringExtra(FRUIT_NAME);</span><br><span class="line">        <span class="keyword">int</span> fruitImageId=intent.getIntExtra(FRUIT_IMAGE_ID,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        android.support.v7.widget.Toolbar toolbar=findViewById(R.id.toolbar);</span><br><span class="line"></span><br><span class="line">        CollapsingToolbarLayout collapsingToolbarLayout=findViewById(R.id.collapsing_toolbar);</span><br><span class="line"></span><br><span class="line">        ImageView fruitImageView=findViewById(R.id.fruit_image_view);</span><br><span class="line">        TextView fruitContentText=findViewById(R.id.fruit_content_text);</span><br><span class="line"></span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line">        ActionBar actionBar=getSupportActionBar();</span><br><span class="line">        <span class="keyword">if</span>(actionBar!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            actionBar.setDisplayHomeAsUpEnabled(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        collapsingToolbarLayout.setTitle(fruitName);</span><br><span class="line"></span><br><span class="line">        Glide.with(<span class="keyword">this</span>).load(fruitImageId).into(fruitImageView);</span><br><span class="line">        String fruitContent=generateFruitContent(fruitName);</span><br><span class="line"></span><br><span class="line">        fruitContentText.setText(fruitContent);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function">String <span class="title">generateFruitContent</span><span class="params">(String fruitName)</span></span>&#123;</span><br><span class="line">        StringBuilder fruitContent=<span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">            fruitContent.append(fruitName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> fruitContent.<span class="title">toString</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(item.getItemId())&#123;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">                finish();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onOptionsItemSelected</span><span class="params">(item)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FruitActivity中的代码并不是很复杂。首先，在onCreate()方法中，我们通过Intent获取到传入的水果名和水果图片的资源id，然后通过findViewById()方法拿到刚才在布局文件中定义的各个控件的实例。接着就是使用了Toolbar的标准用法，将它作为ActionBar显示，并启用HomeAsUp按钮。由于HomeAsUp按钮的默认图标就是一个返回箭头，这正是我们所期望的，因此就不用再额外设置别的图标了。</p><p>接下来开始填充界面上的内容，调用CollapsingToolbarLayout的setTitle()方法将水果名设置成当前界面的标题，然后使用Glide加载传入的水果图片，并设置到标题栏的ImageView上面。接着需要填充水果的内容详情，由于这只是一个示例程序，并不需要什么真实的数据，所以我使用了一个generateFruitContent()方法将水果名循环拼接500次，从而生成了一个比较长的字符串，将它设置到了TextView上面。</p><p>最后，我们在onOptionsItemSelected()方法中处理了HomeAsUp按钮的点击事件，当点击了这个按钮时，就调用finish()方法关闭当前的活动，从而返回上一个活动。</p><ul><li>修改FruitAdapter的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.materialtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.<span class="type">Context</span>;</span><br><span class="line"><span class="keyword">import</span> android.content.<span class="type">Intent</span>;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.<span class="type">NonNull</span>;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.<span class="type">CardView</span>;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.widget.<span class="type">RecyclerView</span>;</span><br><span class="line"><span class="keyword">import</span> android.view.<span class="type">LayoutInflater</span>;</span><br><span class="line"><span class="keyword">import</span> android.view.<span class="type">View</span>;</span><br><span class="line"><span class="keyword">import</span> android.view.<span class="type">ViewGroup</span>;</span><br><span class="line"><span class="keyword">import</span> android.widget.<span class="type">ImageView</span>;</span><br><span class="line"><span class="keyword">import</span> android.widget.<span class="type">TextView</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bumptech.glide.<span class="type">Glide</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.<span class="type">List</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter&lt;FruitAdapter</span>.<span class="title">ViewHolder&gt;</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Context</span> mContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">List</span>&lt;<span class="type">Fruit</span>&gt; mFruitList;</span><br><span class="line"></span><br><span class="line">    static <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span></span>&#123;</span><br><span class="line">        <span class="type">CardView</span> cardView;</span><br><span class="line">        <span class="type">ImageView</span> fruitImage;</span><br><span class="line">        <span class="type">TextView</span> fruitName;</span><br><span class="line"></span><br><span class="line">        public <span class="type">ViewHolder</span>(<span class="meta">@NonNull</span> <span class="type">View</span> itemView) &#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            cardView=(<span class="type">CardView</span>)itemView;</span><br><span class="line"></span><br><span class="line">            fruitImage=itemView.findViewById(<span class="type">R</span>.id.fruit_image);</span><br><span class="line">            fruitName=itemView.findViewById(<span class="type">R</span>.id.fruit_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="type">FruitAdapter</span>(<span class="type">List</span>&lt;<span class="type">Fruit</span>&gt; fruitList)&#123;</span><br><span class="line">        mFruitList=fruitList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="type">ViewHolder</span> onCreateViewHolder(<span class="meta">@NonNull</span> <span class="type">ViewGroup</span> viewGroup, int i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(mContext==<span class="literal">null</span>)&#123;</span><br><span class="line">            mContext=viewGroup.getContext();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">View</span> view=<span class="type">LayoutInflater</span>.from(mContext).inflate(<span class="type">R</span>.layout.fruit_item,viewGroup,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">ViewHolder</span> holder=<span class="keyword">new</span> <span class="type">ViewHolder</span>(view);</span><br><span class="line">        holder.cardView.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                int position=holder.getAdapterPosition();</span><br><span class="line">                <span class="type">Fruit</span> fruit=mFruitList.get(position);</span><br><span class="line">                <span class="type">Intent</span> intent=<span class="keyword">new</span> <span class="type">Intent</span>(mContext,<span class="type">FruitActivity</span>.<span class="keyword">class</span>);</span><br><span class="line">                intent.putExtra(<span class="type">FruitActivity</span>.<span class="type">FRUIT_NAME</span>,fruit.getName());</span><br><span class="line">                intent.putExtra(<span class="type">FruitActivity</span>.<span class="type">FRUIT_IMAGE_ID</span>,fruit.getImageId());</span><br><span class="line">                mContext.startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> holder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void onBindViewHolder(<span class="meta">@NonNull</span> <span class="type">ViewHolder</span> viewHolder, int i) &#123;</span><br><span class="line">        <span class="type">Fruit</span> fruit=mFruitList.get(i);</span><br><span class="line">        viewHolder.fruitName.setText(fruit.getName());</span><br><span class="line"></span><br><span class="line">        <span class="type">Glide</span>.<span class="keyword">with</span>(mContext).load(fruit.getImageId()).into(viewHolder.fruitImage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public int getItemCount() &#123;</span><br><span class="line">        <span class="keyword">return</span> mFruitList.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="充分利用状态栏空间"><a href="#充分利用状态栏空间" class="headerlink" title="充分利用状态栏空间"></a>充分利用状态栏空间</h2><p>Android 5.0系统之前，我们是无法对状态栏的背景或颜色进行操作的，那个时候也还没有Material Design的概念。但是Android 5.0及之后的系统都是支持这个功能的，因此这里我们就来实现一个系统差异型的效果，在Android 5.0及之后的系统中，使用背景图和状态栏融合的模式，在之前的系统中使用普通的模式。</p><p>想要让背景图能够和系统状态栏融合，需要借助android:fitsSystemWindows这个属性来实现。在CoordinatorLayout、AppBarLayout、CollapsingToolbarLayout这种嵌套结构的布局中，将控件的android:fitsSystemWindows属性指定成true，就表示该控件会出现在系统状态栏里。对应到我们的程序，那就是水果标题栏中的ImageView应该设置这个属性了。不过只给ImageView设置这个属性是没有用的，我们必须将ImageView布局结构中的所有父布局都设置上这个属性才可以</p><ul><li>修改activity_fruit.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.AppBarLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/appBar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"250dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.CollapsingToolbarLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/collapsing_toolbar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">"@style/ThemeOverlay.AppCompat.Dark.ActionBar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:contentScrim</span>=<span class="string">"?attr/colorPrimary"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:layout_scrollFlags</span>=<span class="string">"scroll|exitUntilCollapsed"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/fruit_image_view"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_collapseMode</span>=<span class="string">"parallax"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"?attr/actionBarSize"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:layout_collapseMode</span>=<span class="string">"pin"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">android.support.v7.widget.Toolbar</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">android.support.design.widget.CollapsingToolbarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.AppBarLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v4.widget.NestedScrollView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_behavior</span>=<span class="string">"@string/appbar_scrolling_view_behavior"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">android.support.v7.widget.CardView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginBottom</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginLeft</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginRight</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">"35dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">app:cardCornerRadius</span>=<span class="string">"4dp"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">"@+id/fruit_content_text"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_margin</span>=<span class="string">"10dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">android.support.v7.widget.CardView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.v4.widget.NestedScrollView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_anchor</span>=<span class="string">"@id/appBar"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_anchorGravity</span>=<span class="string">"bottom|end"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>即使我们将android:fitsSystemWindows属性都设置好了还是没有用的，因为还必须在程序的主题中将状态栏颜色指定成透明色才行。指定成透明色的方法很简单，在主题中将android:statusBarColor属性的值指定成@android:color/transparent就可以了。但问题在于，android:statusBarColor这个属性是从API 21，也就是Android 5.0系统开始才有的，之前的系统无法指定这个属性。那么，系统差异型的功能实现就要从这里开始了。</p><ul><li>在res文件夹新建目录values-v21,新建一个Values resource file，名字为styles.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"FruitActivityTheme"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">parent</span>=<span class="string">"AppTheme"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:statusBarColor"</span>&gt;</span></span></span><br><span class="line"><span class="undefined">            @android:color/transparent</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们定义了一个FruitActivityTheme主题，它是专门给FruitActivity使用的。FruitActivityTheme的parent主题是AppTheme，也就是说，它继承了AppTheme中的所有特性。然后我们在FruitActivityTheme中将状态栏的颜色指定成透明色，由于values-v21目录是只有Android 5.0及以上的系统才会去读取的，因此这么声明是没有问题的。</p><ul><li>由于安卓5.0一下的系统无法识别，因此还需要对values/styles.xml文件进行修改</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"AppTheme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.Light.NoActionBar"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- Customize your theme here. --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimary"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimaryDark"</span>&gt;</span>@color/colorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorAccent"</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"FruitActivityTheme."</span> <span class="attr">parent</span>=<span class="string">"AppTheme"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改AndroidManifest.xml中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.zanecode6574.materialtest"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">".MainActivity"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:label</span>=<span class="string">"测试material"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".FruitActivity"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">"@style/FruitActivityTheme"</span>&gt;</span><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/01/27/第十二章：MaterialDesign实战/Material.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;长久以来，大多数人都认为Android系统的UI并不算美观，至少没有iOS系统的美观。以至于很多IT公司在进行应用界面设计的时候，为了保证双平台的统一性，强制要求Android端的界面风格必须和iOS端一致。这种情况在现实工作当中实在是太常见了，虽然我认为这是非常不合理的。因为对于一般用户来说，他们不太可能会在两个操作系统上分别去使用同一个应用，但是却必定会在同一个操作系统上使用不同的应用。因此，同一个操作系统中各个应用之间的界面统一性要远比一个应用在双平台的界面统一性重要得多，只有这样，才能给使用者带来更好的用户体验。&lt;/p&gt;
&lt;p&gt;但问题在于，Android标准的界面设计风格并不是特别被大众所接受，很多公司都觉得自己完全可以设计出更加好看的界面，从而导致Android平台的界面风格长期难以得到统一。为了解决这个问题，谷歌也是祭出了杀手锏，在2014年Google I/O大会上重磅推出了一套全新的界面设计语言——Material Design。&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="MaterialDesign" scheme="https://zanecode6574.github.io/tags/MaterialDesign/"/>
    
      <category term="界面" scheme="https://zanecode6574.github.io/tags/%E7%95%8C%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>第十一章：基于位置的服务</title>
    <link href="https://zanecode6574.github.io/2019/01/26/%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0%EF%BC%9A%E5%9F%BA%E4%BA%8E%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%9C%8D%E5%8A%A1/"/>
    <id>https://zanecode6574.github.io/2019/01/26/第十一章：基于位置的服务/</id>
    <published>2019-01-26T13:52:26.000Z</published>
    <updated>2019-01-27T07:54:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>说到只有在移动设备上才能实现的技术，很容易就让人联想到基于位置的服务（Location Based Service）。由于移动设备相比于电脑可以随身携带，我们通过地理定位的技术就可以随时得知自己所在的位置，从而围绕这一点开发出很多有意思的应用。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>基于位置的服务简称LBS，随着移动互联网的兴起，这个技术在最近的几年里十分火爆。其实它本身并不是什么时髦的技术，主要的工作原理就是利用无线电通讯网络或GPS等定位方式来确定出移动设备所在的位置，而这种定位技术早在很多年前就已经出现了。</p><p>那为什么LBS技术直到最近几年才开始流行呢？这主要是因为，在过去移动设备的功能极其有限，即使定位到了设备所在的位置，也就仅仅只是定位到了而已，我们并不能在位置的基础上进行一些其他的操作。而现在就大大不同了，有了Android系统作为载体，我们可以利用定位出的位置进行许多丰富多彩的操作。比如说天气预报程序可以根据用户所在的位置自动选择城市，发微博的时候我们可以向朋友们晒一下自己在哪里，不认识路的时候随时打开地图就可以查询路线，等等。</p><p>基于位置的服务所围绕的核心就是要先确定出用户所在的位置。通常有两种技术方式可以实现：一种是通过GPS定位，一种是通过网络定位。GPS定位的工作原理是基于手机内置的GPS硬件直接和卫星交互来获取当前的经纬度信息，这种定位方式精确度非常高，但缺点是只能在室外使用，室内基本无法接收到卫星的信号。网络定位的工作原理是根据手机当前网络附近的三个基站进行测速，以此计算出手机和每个基站之间的距离，再通过三角定位确定出一个大概的位置，这种定位方式精确度一般，但优点是在室内室外都可以使用。</p><a id="more"></a><p>Android对这两种定位方式都提供了相应的API支持，但是由于一些特殊原因，Google的网络服务在中国不可访问，从而导致网络定位方式的API失效。而GPS定位虽然不需要网络，但是必须要在室外才可以使用，因此你在室内开发的时候很有可能会遇到不管使用哪种定位方式都无法成功定位的情况。</p><p>基于以上原因，我决定就不在本书中讲解Android原生定位API的用法了，而是使用一些国内第三方公司的SDK。目前国内在这一领域做得比较好的一个是百度，一个是高德。</p><p>下面是学习百度在LBS方面提供的功能。</p><h1 id="申请API-Key"><a href="#申请API-Key" class="headerlink" title="申请API Key"></a>申请API Key</h1><p>想在自己的应用程序里使用百度的LBS功能，首先必须申请一个API Key</p><ul><li>打开<a href="http://lbsyun.baidu.com/" target="_blank" rel="noopener">http://lbsyun.baidu.com/</a>进行注册</li><li>点击创建应用去申请API Key,类型选择Android SDK</li><li>发布版SHA1和开发版SHA1是我们申请API Key所必须填写的一个字段，它指的是打包程序时所用签名文件的SHA1指纹，可以通过Android Studio查看到<ul><li>打开Android Studio中的任意一个项目，点击右侧工具栏的Gradle→项目名→:app→Tasks→ android，这里展示了一个Android Studio项目中所有内置的Gradle Tasks，其中signingReport这个Task就可以用来查看签名文件信息。</li><li>双击signingReport就会看到sha1的值</li><li>目前我们使用的是debug.keystore文件所生成的指纹，这是Android自动生成的一个用于测试的签名文件。而当你的应用程序发布时还需要创建一个正式的签名文件，如果要得到它的指纹，可以在cmd中输入如下命令：<code>keytool -list -v –keystore &lt;签名文件路径&gt;</code>,然后输入正确的密码就可以了。创建签名文件的方法我们将在第15章中学习。</li></ul></li><li>现在得到的这个SHA1指纹实际上是一个开发版的SHA1指纹，不过因为暂时我们还没有一个发布版的SHA1指纹，因此这两个值都填成一样的就可以了。</li><li>包名选项由于现在我们的应用还不存在，暂时预定一个即可</li><li>最后提交即可</li></ul><h1 id="使用百度定位"><a href="#使用百度定位" class="headerlink" title="使用百度定位"></a>使用百度定位</h1><h2 id="配置LBS-Sdk"><a href="#配置LBS-Sdk" class="headerlink" title="配置LBS Sdk"></a>配置LBS Sdk</h2><ul><li>新建一个LBSTest项目，包名指定为刚才自己写的那个</li><li>下载百度LBS开放平台的SDK，这里地址跟书上不同了，自己找找吧<br><img src="/2019/01/26/第十一章：基于位置的服务/LBSSdk.png" alt=""></li><li>下载的文件libs目录下的内容又分为两部分，BaiduLBS_Android.jar这个文件是Java层要使用到的，其他子目录下的so文件是Native层要用到的。so文件是用C/C++语言进行编写，然后再用NDK编译出来的。当然这里我们并不需要去编写C/C++的代码，因为百度都已经做好了封装，但是我们需要将libs目录下的每一个文件都放置到正确的位置。</li><li>将BaiduLBS_Android.jar添加到项目的app/libs文件夹下</li><li>展开src/main目录，新建一个jniLibs目录，然后把压缩包内剩下的所有放到这个目录中<br><img src="/2019/01/26/第十一章：基于位置的服务/Directory.png" alt=""></li><li>虽然所有新创建的项目中，app/build.gradle文件都会默认配置以下这段声明：</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line"><span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这表示会将libs目录下所有以.jar结尾的文件添加到当前项目的引用中。但是由于我们是直接将Jar包复制到libs目录下的，并没有修改gradle文件，因此不会弹出我们平时熟悉的Sync Now提示。这个时候必须手动点击一下Android Studio顶部工具栏中的Sync按钮。</p><h2 id="确定自己的经纬度"><a href="#确定自己的经纬度" class="headerlink" title="确定自己的经纬度"></a>确定自己的经纬度</h2><ul><li>修改activity_main.xml的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/position_text_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改AndroidManifest中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.zanecode6574.lbstest"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CHANGE_WIFI_STATE"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WAKE_LOCK"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.lbsapi.API_KEY"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"EZI9oQzACy3CCAGVFoI7yWqmz9f2F1Zw"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.location.f"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:process</span>=<span class="string">":remote"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先添加了很多行权限声明，每一个权限都是百度LBS SDK内部要用到的。然后在<application>标签的内部添加了一个<meta-data>标签，这个标签的android:name部分是固定的，必须填com.baidu.lbsapi.API_KEY，android:value部分则应该填入我们在11.2节申请到的API Key。最后，还需要再注册一个LBS SDK中的服务，不用对这个服务的名字感到疑惑，因为百度LBS SDK中的代码都是混淆过的。</meta-data></application></p><p><strong>这里申请了一堆权限，然后又两个提示权限只会授予系统应用，可能是版本问题</strong></p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.lbstest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocation;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocationListener;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.LocationClient;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.BaiduMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class MainActivity extends AppCompatActivity &#123;</span><br><span class="line">    <span class="keyword">public</span> LocationClient mLocationClient;</span><br><span class="line">    <span class="keyword">private</span> TextView positionText;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        mLocationClient =<span class="keyword">new</span> LocationClient(getApplicationContext());</span><br><span class="line">        mLocationClient.registerLocationListener(<span class="keyword">new</span> MyLocationListener());</span><br><span class="line"></span><br><span class="line">        positionText=findViewById(R.id.position_text_view);</span><br><span class="line"></span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; permissionList=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.ACCESS_FINE_LOCATION)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.ACCESS_FINE_LOCATION);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.READ_PHONE_STATE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.READ_PHONE_STATE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.WRITE_EXTERNAL_STORAGE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!permissionList.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">String</span>[] permissions=permissionList.toArray(<span class="keyword">new</span> <span class="keyword">String</span>[permissionList.<span class="built_in">size</span>()]);</span><br><span class="line">            ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,permissions,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            requestLocation();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> requestLocation()&#123;</span><br><span class="line">        mLocationClient.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onRequestPermissionsResult(<span class="built_in">int</span> requestCode, @NonNull <span class="keyword">String</span>[] permissions, @NonNull <span class="built_in">int</span>[] grantResults) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="built_in">int</span> result:grantResults)&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span>(result!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                            Toast.makeText(<span class="keyword">this</span>, <span class="string">"必须同意所有权限才能使用应用"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                            finish();</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    requestLocation();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"发生未知错误!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> class MyLocationListener implements BDLocationListener&#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> onReceiveLocation(<span class="keyword">final</span> BDLocation bdLocation) &#123;</span><br><span class="line">            runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</span><br><span class="line">                    StringBuilder currentPosition=<span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"纬度："</span>).<span class="built_in">append</span>(bdLocation.getLatitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"线："</span>).<span class="built_in">append</span>(bdLocation.getLongitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"定位方式"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeGpsLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"GPS"</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeNetWorkLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"网络"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    positionText.setText(currentPosition);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在onCreate()方法中，我们首先创建了一个LocationClient的实例，LocationClient的构建函数接收一个Context参数，这里调用getApplicationContext()方法来获取一个全局的Context参数并传入。</li><li>然后调用LocationClient的registerLocationListener()方法来注册一个定位监听器，当获取到位置信息的时候，就会回调这个定位监听器。</li><li>接下来看一下这里运行时权限的用法，由于我们在AndroidManifest.xml中声明了很多权限，参考一下7.2.1小节中的危险权限表格可以发现，其中ACCESS_COARSE_LOCATION、ACCESS_FINE_LOCATION、READ_PHONE_STATE、WRITE_EXTERNAL_STORAGE这4个权限是需要进行运行时权限处理的，不过由于ACCESS_COARSE_LOCATION和ACCESS_FINE_LOCATION都属于同一个权限组，因此两者只要申请其一就可以了。</li><li>一次性申请3个权限：这里我们使用了一种新的用法，首先创建一个空的List集合，然后依次判断这3个权限有没有被授权，如果没被授权就添加到List集合中，最后将List转换成数组，再调用ActivityCompat.requestPermissions()方法一次性申请。</li><li>除此之外，onRequestPermissionsResult()方法中对权限申请结果的逻辑处理也和之前有所不同，这次我们通过一个循环将申请的每个权限都进行了判断，如果有任何一个权限被拒绝，那么就直接调用finish()方法关闭当前程序，只有当所有权限都被用户同意了，才会调用requestLocation()方法开始地理位置定位。</li><li>requestLocation()方法中的代码比较简单，只是调用了一下LocationClient的start()方法就能开始定位了。定位的结果会回调到我们前面注册的监听器当中，也就是MyLocationListener。</li><li>观察一下MyLocationListener的onReceiveLocation()方法中，在这里我们通过BDLocation的getLatitude()方法获取当前位置的纬度，通过getLongitude()方法获取当前位置的经度，通过getLocType()方法获取当前的定位方式，最终将结果组装成一个字符串，显示到TextView上面。</li></ul><h2 id="定位多次"><a href="#定位多次" class="headerlink" title="定位多次"></a>定位多次</h2><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.lbstest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocation;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocationListener;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.LocationClient;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.LocationClientOption;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.BaiduMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class MainActivity extends AppCompatActivity &#123;</span><br><span class="line">    <span class="keyword">public</span> LocationClient mLocationClient;</span><br><span class="line">    <span class="keyword">private</span> TextView positionText;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        mLocationClient =<span class="keyword">new</span> LocationClient(getApplicationContext());</span><br><span class="line">        mLocationClient.registerLocationListener(<span class="keyword">new</span> MyLocationListener());</span><br><span class="line"></span><br><span class="line">        positionText=findViewById(R.id.position_text_view);</span><br><span class="line"></span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; permissionList=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.ACCESS_FINE_LOCATION)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.ACCESS_FINE_LOCATION);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.READ_PHONE_STATE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.READ_PHONE_STATE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.WRITE_EXTERNAL_STORAGE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!permissionList.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">String</span>[] permissions=permissionList.toArray(<span class="keyword">new</span> <span class="keyword">String</span>[permissionList.<span class="built_in">size</span>()]);</span><br><span class="line">            ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,permissions,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            requestLocation();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> requestLocation()&#123;</span><br><span class="line">        initLocation();</span><br><span class="line">        mLocationClient.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onRequestPermissionsResult(<span class="built_in">int</span> requestCode, @NonNull <span class="keyword">String</span>[] permissions, @NonNull <span class="built_in">int</span>[] grantResults) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="built_in">int</span> result:grantResults)&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span>(result!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                            Toast.makeText(<span class="keyword">this</span>, <span class="string">"必须同意所有权限才能使用应用"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                            finish();</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    requestLocation();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"发生未知错误!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> initLocation()&#123;</span><br><span class="line">        LocationClientOption option=<span class="keyword">new</span> LocationClientOption();</span><br><span class="line">        option.setScanSpan(<span class="number">5000</span>);</span><br><span class="line">        mLocationClient.setLocOption(option);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> class MyLocationListener implements BDLocationListener&#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> onReceiveLocation(<span class="keyword">final</span> BDLocation bdLocation) &#123;</span><br><span class="line">            runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</span><br><span class="line">                    StringBuilder currentPosition=<span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"纬度："</span>).<span class="built_in">append</span>(bdLocation.getLatitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"线："</span>).<span class="built_in">append</span>(bdLocation.getLongitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"国家:"</span>).<span class="built_in">append</span>(bdLocation.getCountry()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"省："</span>).<span class="built_in">append</span>(bdLocation.getProvince()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"市："</span>).<span class="built_in">append</span>(bdLocation.getCity()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"区："</span>).<span class="built_in">append</span>(bdLocation.getDistrict()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"街道"</span>).<span class="built_in">append</span>(bdLocation.getStreet()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"定位方式"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeGpsLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"GPS"</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeNetWorkLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"网络"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    positionText.setText(currentPosition);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        mLocationClient.stop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>增加了一个initLocation()方法，在initLocation()方法中我们创建了一个LocationClientOption对象，然后调用它的setScanSpan()方法来设置更新的间隔。这里传入了5000，表示每5秒钟会更新一下当前的位置。<br>最后要记得，在活动被销毁的时候一定要调用LocationClient的stop()方法来停止定位，不然程序会持续在后台不停地进行定位，从而严重消耗手机的电量。</p><h2 id="选择定位模式"><a href="#选择定位模式" class="headerlink" title="选择定位模式"></a>选择定位模式</h2><p>之前的代码都会发现定位方式是网络，可以在手机相应设置中修改，也可以在App中强制使用GPS定位</p><ul><li>修改MainActivity中的代码,在initLocation函数中增加<code>option.setLocationMode(LocationClientOption.LocationMode.Device_Sensors);</code></li></ul><h2 id="看得懂的位置信息"><a href="#看得懂的位置信息" class="headerlink" title="看得懂的位置信息"></a>看得懂的位置信息</h2><p>百度提供了接口能获得当前位置各种信息</p><ul><li>修改MainActivity中的代码,在initLocation函数中增加<code>option.setIsNeedAddress(true);</code></li></ul><h1 id="使用百度地图"><a href="#使用百度地图" class="headerlink" title="使用百度地图"></a>使用百度地图</h1><h2 id="让地图显示出来"><a href="#让地图显示出来" class="headerlink" title="让地图显示出来"></a>让地图显示出来</h2><ul><li>修改activity_main.xml的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/position_text_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">com.baidu.mapapi.map.MapView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/bmapView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:clickable</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainACtivity中的代码</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.lbstest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocation;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocationListener;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.LocationClient;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.LocationClientOption;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.SDKInitializer;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.BaiduMap;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.MapView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class MainActivity extends AppCompatActivity &#123;</span><br><span class="line">    <span class="keyword">public</span> LocationClient mLocationClient;</span><br><span class="line">    <span class="keyword">private</span> TextView positionText;</span><br><span class="line">    <span class="keyword">private</span> MapView mapView;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        mLocationClient =<span class="keyword">new</span> LocationClient(getApplicationContext());</span><br><span class="line">        mLocationClient.registerLocationListener(<span class="keyword">new</span> MyLocationListener());</span><br><span class="line"></span><br><span class="line">        SDKInitializer.initialize(getApplicationContext());</span><br><span class="line"></span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        mapView=findViewById(R.id.bmapView);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        positionText=findViewById(R.id.position_text_view);</span><br><span class="line"></span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; permissionList=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.ACCESS_FINE_LOCATION)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.ACCESS_FINE_LOCATION);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.READ_PHONE_STATE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.READ_PHONE_STATE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.WRITE_EXTERNAL_STORAGE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!permissionList.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">String</span>[] permissions=permissionList.toArray(<span class="keyword">new</span> <span class="keyword">String</span>[permissionList.<span class="built_in">size</span>()]);</span><br><span class="line">            ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,permissions,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            requestLocation();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> requestLocation()&#123;</span><br><span class="line">        initLocation();</span><br><span class="line">        mLocationClient.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onRequestPermissionsResult(<span class="built_in">int</span> requestCode, @NonNull <span class="keyword">String</span>[] permissions, @NonNull <span class="built_in">int</span>[] grantResults) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="built_in">int</span> result:grantResults)&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span>(result!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                            Toast.makeText(<span class="keyword">this</span>, <span class="string">"必须同意所有权限才能使用应用"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                            finish();</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    requestLocation();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"发生未知错误!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> initLocation()&#123;</span><br><span class="line">        LocationClientOption option=<span class="keyword">new</span> LocationClientOption();</span><br><span class="line">        option.setScanSpan(<span class="number">1000</span>);</span><br><span class="line">        option.setLocationMode(LocationClientOption.LocationMode.Device_Sensors);</span><br><span class="line">        option.setIsNeedAddress(<span class="keyword">true</span>);</span><br><span class="line">        mLocationClient.setLocOption(option);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> class MyLocationListener implements BDLocationListener&#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> onReceiveLocation(<span class="keyword">final</span> BDLocation bdLocation) &#123;</span><br><span class="line">            runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</span><br><span class="line">                    StringBuilder currentPosition=<span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"纬度："</span>).<span class="built_in">append</span>(bdLocation.getLatitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"线："</span>).<span class="built_in">append</span>(bdLocation.getLongitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"国家:"</span>).<span class="built_in">append</span>(bdLocation.getCountry()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"省："</span>).<span class="built_in">append</span>(bdLocation.getProvince()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"市："</span>).<span class="built_in">append</span>(bdLocation.getCity()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"区："</span>).<span class="built_in">append</span>(bdLocation.getDistrict()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"街道"</span>).<span class="built_in">append</span>(bdLocation.getStreet()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"定位方式"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeGpsLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"GPS"</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeNetWorkLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"网络"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    positionText.setText(currentPosition);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onResume() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        mapView.onResume();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onPause() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        mapView.onPause();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        mLocationClient.stop();</span><br><span class="line">        mapView.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先需要调用SDKInitializer的initialize()方法来进行初始化操作，initialize()方法接收一个Context参数，这里我们调用getApplicationContext()方法来获取一个全局的Context参数并传入。</p><p><strong><em>注意初始化操作一定要在setContentView()方法前调用</em></strong>，不然的话就会出错。接下来我们调用findViewById()方法获取到了MapView的实例，这个实例在后面的功能当中还会用到。</p><p>另外还需要重写onResume()、onPause()和onDestroy()这3个方法，在这里对MapView进行管理，以保证资源能够及时地得到释放。</p><h2 id="移动到我的位置"><a href="#移动到我的位置" class="headerlink" title="移动到我的位置"></a>移动到我的位置</h2><ul><li>百度LBS SDK的API中提供了一个BaiduMap类，它是地图的总控制器，调用MapView的getMap()方法就能获取到BaiduMap的实例，如下所示：<code>BaiduMap baiduMap = mapView.getMap();</code></li></ul><ul><li>有了BaiduMap后，我们就能对地图进行各种各样的操作了，比如设置地图的缩放级别以及将地图移动到某一个经纬度上。<br>百度地图将缩放级别的取值范围限定在3到19之间，其中小数点位的值也是可以取的，值越大，地图显示的信息就越精细。比如我们想要将缩放级别设置成12.5，就可以这样写：</li></ul><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MapStatusUpdate <span class="keyword">update</span> = MapStatusUpdateFactory.zoomTo(<span class="number">12.5</span>f);</span><br><span class="line">baiduMap.animateMapStatus(<span class="keyword">update</span>);</span><br></pre></td></tr></table></figure><p>其中MapStatusUpdateFactory的zoomTo()方法接收一个float型的参数，就是用于设置缩放级别的，这里我们传入12.5f。zoomTo()方法返回一个MapStatusUpdate对象，我们把这个对象传入BaiduMap的animateMapStatus()方法当中即可完成缩放功能。</p><ul><li>那么怎样才能让地图移动到某一个经纬度上呢？这就需要借助LatLng类了。其实LatLng并没有什么太多的用法，主要就是用于存放经纬度值的，它的构造方法接收两个参数，第一个参数是纬度值，第二个参数是经度值。之后调用MapStatusUpdateFactory的newLatLng()方法将LatLng对象传入，newLatLng()方法返回的也是一个MapStatusUpdate对象，我们再把这个对象传入BaiduMap的animateMapStatus()方法当中，就可以将地图移动到指定的经纬度上了，写法如下：</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LatLng ll = <span class="keyword">new</span> <span class="type">LatLng</span>(<span class="number">39.915</span>, <span class="number">116.404</span>);</span><br><span class="line">MapStatusUpdate update = MapStatusUpdateFactory.<span class="keyword">new</span><span class="type">LatLng</span>(ll);</span><br><span class="line">baiduMap.animateMapStatus(update);</span><br></pre></td></tr></table></figure><p>上述代码就实现了将地图移动到北纬39.915度、东经116.404度这个位置的功能。</p><ul><li>修改MainActivity的代码</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.lbstest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocation;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocationListener;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.LocationClient;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.LocationClientOption;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.SDKInitializer;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.BaiduMap;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.MapStatusUpdate;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.MapStatusUpdateFactory;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.MapView;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.model.LatLng;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class MainActivity extends AppCompatActivity &#123;</span><br><span class="line">    <span class="keyword">public</span> LocationClient mLocationClient;</span><br><span class="line">    <span class="keyword">private</span> TextView positionText;</span><br><span class="line">    <span class="keyword">private</span> MapView mapView;</span><br><span class="line">    <span class="keyword">private</span> BaiduMap baiduMap;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">boolean</span> isFirstLocate=<span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        mLocationClient =<span class="keyword">new</span> LocationClient(getApplicationContext());</span><br><span class="line">        mLocationClient.registerLocationListener(<span class="keyword">new</span> MyLocationListener());</span><br><span class="line">        SDKInitializer.initialize(getApplicationContext());</span><br><span class="line"></span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        mapView=findViewById(R.id.bmapView);</span><br><span class="line">        baiduMap=mapView.getMap();</span><br><span class="line"></span><br><span class="line">        positionText=findViewById(R.id.position_text_view);</span><br><span class="line"></span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; permissionList=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.ACCESS_FINE_LOCATION)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.ACCESS_FINE_LOCATION);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.READ_PHONE_STATE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.READ_PHONE_STATE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.WRITE_EXTERNAL_STORAGE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!permissionList.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">String</span>[] permissions=permissionList.toArray(<span class="keyword">new</span> <span class="keyword">String</span>[permissionList.<span class="built_in">size</span>()]);</span><br><span class="line">            ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,permissions,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            requestLocation();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> requestLocation()&#123;</span><br><span class="line">        initLocation();</span><br><span class="line">        mLocationClient.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onRequestPermissionsResult(<span class="built_in">int</span> requestCode, @NonNull <span class="keyword">String</span>[] permissions, @NonNull <span class="built_in">int</span>[] grantResults) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="built_in">int</span> result:grantResults)&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span>(result!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                            Toast.makeText(<span class="keyword">this</span>, <span class="string">"必须同意所有权限才能使用应用"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                            finish();</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    requestLocation();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"发生未知错误!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> navigateTo(BDLocation location)&#123;</span><br><span class="line">        <span class="keyword">if</span>(isFirstLocate)&#123;</span><br><span class="line">            LatLng ll=<span class="keyword">new</span> LatLng(location.getLatitude(),location.getLongitude());</span><br><span class="line">            MapStatusUpdate update=MapStatusUpdateFactory.newLatLng(ll);</span><br><span class="line">            baiduMap.animateMapStatus(update);</span><br><span class="line">            update=MapStatusUpdateFactory.zoomTo(<span class="number">20</span>f);</span><br><span class="line">            baiduMap.animateMapStatus(update);</span><br><span class="line">            isFirstLocate=<span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> initLocation()&#123;</span><br><span class="line">        LocationClientOption option=<span class="keyword">new</span> LocationClientOption();</span><br><span class="line">        option.setScanSpan(<span class="number">1000</span>);</span><br><span class="line">        option.setLocationMode(LocationClientOption.LocationMode.Device_Sensors);</span><br><span class="line">        option.setIsNeedAddress(<span class="keyword">true</span>);</span><br><span class="line">        mLocationClient.setLocOption(option);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> class MyLocationListener implements BDLocationListener&#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> onReceiveLocation(<span class="keyword">final</span> BDLocation bdLocation) &#123;</span><br><span class="line"></span><br><span class="line">            runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</span><br><span class="line">                    StringBuilder currentPosition=<span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"纬度："</span>).<span class="built_in">append</span>(bdLocation.getLatitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"线："</span>).<span class="built_in">append</span>(bdLocation.getLongitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"国家:"</span>).<span class="built_in">append</span>(bdLocation.getCountry()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"省："</span>).<span class="built_in">append</span>(bdLocation.getProvince()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"市："</span>).<span class="built_in">append</span>(bdLocation.getCity()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"区："</span>).<span class="built_in">append</span>(bdLocation.getDistrict()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"街道"</span>).<span class="built_in">append</span>(bdLocation.getStreet()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"定位方式"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeGpsLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"GPS"</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeNetWorkLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"网络"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    positionText.setText(currentPosition);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeGpsLocation || bdLocation.getLocType() ==BDLocation.TypeNetWorkLocation)&#123;</span><br><span class="line">                navigateTo(bdLocation);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onResume() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        mapView.onResume();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onPause() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        mapView.onPause();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        mLocationClient.stop();</span><br><span class="line">        mapView.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要是加入了一个navigateTo()方法。这个方法中的代码也很好理解，先是将BDLocation对象中的地理位置信息取出并封装到LatLng对象中，然后调用MapStatusUpdateFactory的newLatLng()方法并将LatLng对象传入，接着将返回的MapStatusUpdate对象作为参数传入到BaiduMap的animateMapStatus()方法当中，和上面介绍的用法是一模一样的。并且这里为了让地图信息可以显示得更加丰富一些，我们将缩放级别设置成了16。另外还有一点需要注意，上述代码当中我们使用了一个isFirstLocate变量，这个变量的作用是为了防止多次调用animateMapStatus()方法，因为将地图移动到我们当前的位置只需要在程序第一次定位的时候调用一次就可以了。</p><p>写好了navigateTo()方法之后，剩下的事情就简单了，当定位到设备当前位置的时候，我们在onReceiveLocation()方法中直接把BDLocation对象传给navigateTo()方法，这样就能够让地图移动到设备所在的位置了。</p><h2 id="让自己显示在地图上"><a href="#让自己显示在地图上" class="headerlink" title="让自己显示在地图上"></a>让自己显示在地图上</h2><p>百度LBS SDK当中提供了一个MyLocationData.Builder类，这个类是用来封装设备当前所在位置的，我们只需将经纬度信息传入到这个类的相应方法当中就可以了，如下所示：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MyLocationData.<span class="keyword">Builder </span>locationBuilder = new MyLocationData.<span class="keyword">Builder();</span></span><br><span class="line"><span class="keyword">locationBuilder.latitude(39.915);</span></span><br><span class="line"><span class="keyword">locationBuilder.longitude(116.404);</span></span><br></pre></td></tr></table></figure><p>MyLocationData.Builder类还提供了一个build()方法，当我们把要封装的信息都设置完成之后，只需要调用它的build()方法，就会生成一个MyLocationData的实例，然后再将这个实例传入到BaiduMap的setMyLocationData()方法当中，就可以让设备当前的位置显示在地图上了，写法如下：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MyLocationData locationData = locationBuilder.build()<span class="comment">;</span></span><br><span class="line">baiduMap.setMyLocationData(locationData)<span class="comment">;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainACtivity中的代码</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.lbstest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocation;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.BDLocationListener;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.LocationClient;</span><br><span class="line"><span class="keyword">import</span> com.baidu.location.LocationClientOption;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.SDKInitializer;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.BaiduMap;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.MapStatusUpdate;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.MapStatusUpdateFactory;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.MapView;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.<span class="built_in">map</span>.MyLocationData;</span><br><span class="line"><span class="keyword">import</span> com.baidu.mapapi.model.LatLng;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class MainActivity extends AppCompatActivity &#123;</span><br><span class="line">    <span class="keyword">public</span> LocationClient mLocationClient;</span><br><span class="line">    <span class="keyword">private</span> TextView positionText;</span><br><span class="line">    <span class="keyword">private</span> MapView mapView;</span><br><span class="line">    <span class="keyword">private</span> BaiduMap baiduMap;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">boolean</span> isFirstLocate=<span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        mLocationClient =<span class="keyword">new</span> LocationClient(getApplicationContext());</span><br><span class="line">        mLocationClient.registerLocationListener(<span class="keyword">new</span> MyLocationListener());</span><br><span class="line">        SDKInitializer.initialize(getApplicationContext());</span><br><span class="line"></span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        mapView=findViewById(R.id.bmapView);</span><br><span class="line">        baiduMap=mapView.getMap();</span><br><span class="line">        baiduMap.setMyLocationEnabled(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        positionText=findViewById(R.id.position_text_view);</span><br><span class="line"></span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; permissionList=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.ACCESS_FINE_LOCATION)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.ACCESS_FINE_LOCATION);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.READ_PHONE_STATE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.READ_PHONE_STATE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            permissionList.<span class="built_in">add</span>(Manifest.permission.WRITE_EXTERNAL_STORAGE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!permissionList.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">String</span>[] permissions=permissionList.toArray(<span class="keyword">new</span> <span class="keyword">String</span>[permissionList.<span class="built_in">size</span>()]);</span><br><span class="line">            ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,permissions,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            requestLocation();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> requestLocation()&#123;</span><br><span class="line">        initLocation();</span><br><span class="line">        mLocationClient.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onRequestPermissionsResult(<span class="built_in">int</span> requestCode, @NonNull <span class="keyword">String</span>[] permissions, @NonNull <span class="built_in">int</span>[] grantResults) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="built_in">int</span> result:grantResults)&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span>(result!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                            Toast.makeText(<span class="keyword">this</span>, <span class="string">"必须同意所有权限才能使用应用"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                            finish();</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    requestLocation();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"发生未知错误!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> navigateTo(BDLocation location)&#123;</span><br><span class="line">        <span class="keyword">if</span>(isFirstLocate)&#123;</span><br><span class="line">            LatLng ll=<span class="keyword">new</span> LatLng(location.getLatitude(),location.getLongitude());</span><br><span class="line">            MapStatusUpdate update=MapStatusUpdateFactory.newLatLng(ll);</span><br><span class="line">            baiduMap.animateMapStatus(update);</span><br><span class="line">            update=MapStatusUpdateFactory.zoomTo(<span class="number">20</span>f);</span><br><span class="line">            baiduMap.animateMapStatus(update);</span><br><span class="line">            isFirstLocate=<span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        MyLocationData.Builder locationBuilder=<span class="keyword">new</span> MyLocationData.Builder();</span><br><span class="line">        locationBuilder.latitude(location.getLatitude());</span><br><span class="line">        locationBuilder.longitude(location.getLongitude());</span><br><span class="line">        MyLocationData locationData=locationBuilder.build();</span><br><span class="line">        baiduMap.setMyLocationData(locationData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> initLocation()&#123;</span><br><span class="line">        LocationClientOption option=<span class="keyword">new</span> LocationClientOption();</span><br><span class="line">        option.setScanSpan(<span class="number">1000</span>);</span><br><span class="line">        option.setLocationMode(LocationClientOption.LocationMode.Device_Sensors);</span><br><span class="line">        option.setIsNeedAddress(<span class="keyword">true</span>);</span><br><span class="line">        mLocationClient.setLocOption(option);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> class MyLocationListener implements BDLocationListener&#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> onReceiveLocation(<span class="keyword">final</span> BDLocation bdLocation) &#123;</span><br><span class="line"></span><br><span class="line">            runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</span><br><span class="line">                    StringBuilder currentPosition=<span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"纬度："</span>).<span class="built_in">append</span>(bdLocation.getLatitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"线："</span>).<span class="built_in">append</span>(bdLocation.getLongitude()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"国家:"</span>).<span class="built_in">append</span>(bdLocation.getCountry()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"省："</span>).<span class="built_in">append</span>(bdLocation.getProvince()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"市："</span>).<span class="built_in">append</span>(bdLocation.getCity()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"区："</span>).<span class="built_in">append</span>(bdLocation.getDistrict()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"街道"</span>).<span class="built_in">append</span>(bdLocation.getStreet()).<span class="built_in">append</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">                    currentPosition.<span class="built_in">append</span>(<span class="string">"定位方式"</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeGpsLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"GPS"</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeNetWorkLocation)&#123;</span><br><span class="line">                        currentPosition.<span class="built_in">append</span>(<span class="string">"网络"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    positionText.setText(currentPosition);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(bdLocation.getLocType()==BDLocation.TypeGpsLocation || bdLocation.getLocType() ==BDLocation.TypeNetWorkLocation)&#123;</span><br><span class="line">                navigateTo(bdLocation);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onResume() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        mapView.onResume();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onPause() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        mapView.onPause();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        mLocationClient.stop();</span><br><span class="line">        mapView.onDestroy();</span><br><span class="line">        baiduMap.setMyLocationEnabled(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在navigateTo()方法中，我们添加了MyLocationData的构建逻辑，将Location中包含的经度和纬度分别封装到了MyLocationData.Builder当中，最后把MyLocationData设置到了BaiduMap的setMyLocationData()方法当中。注意这段逻辑必须写在isFirstLocate这个if条件语句的外面，因为让地图移动到我们当前的位置只需要在第一次定位的时候执行，但是设备在地图上显示的位置却应该是随着设备的移动而实时改变的。</p><p>另外，根据百度地图的限制，如果我们想要使用这一功能，一定要事先调用BaiduMap的setMyLocationEnabled()方法将此功能开启，否则设备的位置将无法在地图上显示。而在程序退出的时候，也要记得将此功能给关闭掉。</p><p><img src="/2019/01/26/第十一章：基于位置的服务/Map.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说到只有在移动设备上才能实现的技术，很容易就让人联想到基于位置的服务（Location Based Service）。由于移动设备相比于电脑可以随身携带，我们通过地理定位的技术就可以随时得知自己所在的位置，从而围绕这一点开发出很多有意思的应用。&lt;/p&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;基于位置的服务简称LBS，随着移动互联网的兴起，这个技术在最近的几年里十分火爆。其实它本身并不是什么时髦的技术，主要的工作原理就是利用无线电通讯网络或GPS等定位方式来确定出移动设备所在的位置，而这种定位技术早在很多年前就已经出现了。&lt;/p&gt;
&lt;p&gt;那为什么LBS技术直到最近几年才开始流行呢？这主要是因为，在过去移动设备的功能极其有限，即使定位到了设备所在的位置，也就仅仅只是定位到了而已，我们并不能在位置的基础上进行一些其他的操作。而现在就大大不同了，有了Android系统作为载体，我们可以利用定位出的位置进行许多丰富多彩的操作。比如说天气预报程序可以根据用户所在的位置自动选择城市，发微博的时候我们可以向朋友们晒一下自己在哪里，不认识路的时候随时打开地图就可以查询路线，等等。&lt;/p&gt;
&lt;p&gt;基于位置的服务所围绕的核心就是要先确定出用户所在的位置。通常有两种技术方式可以实现：一种是通过GPS定位，一种是通过网络定位。GPS定位的工作原理是基于手机内置的GPS硬件直接和卫星交互来获取当前的经纬度信息，这种定位方式精确度非常高，但缺点是只能在室外使用，室内基本无法接收到卫星的信号。网络定位的工作原理是根据手机当前网络附近的三个基站进行测速，以此计算出手机和每个基站之间的距离，再通过三角定位确定出一个大概的位置，这种定位方式精确度一般，但优点是在室内室外都可以使用。&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="位置服务" scheme="https://zanecode6574.github.io/tags/%E4%BD%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>第十章：探究服务</title>
    <link href="https://zanecode6574.github.io/2019/01/25/%E7%AC%AC%E5%8D%81%E7%AB%A0%EF%BC%9A%E6%8E%A2%E7%A9%B6%E6%9C%8D%E5%8A%A1/"/>
    <id>https://zanecode6574.github.io/2019/01/25/第十章：探究服务/</id>
    <published>2019-01-25T07:34:00.000Z</published>
    <updated>2019-01-26T03:30:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>服务（Service）是Android中实现程序后台运行的解决方案，它非常适合去执行那些不需要和用户交互而且还要求长期运行的任务。服务的运行不依赖于任何用户界面，即使程序被切换到后台，或者用户打开了另外一个应用程序，服务仍然能够保持正常运行。</p><p>不过需要注意的是，服务并不是运行在一个独立的进程当中的，而是依赖于创建服务时所在的应用程序进程。当某个应用程序进程被杀掉时，所有依赖于该进程的服务也会停止运行。</p><p>另外，也不要被服务的后台概念所迷惑，实际上服务并不会自动开启线程，所有的代码都是默认运行在主线程当中的。也就是说，我们需要在服务的内部手动创建子线程，并在这里执行具体的任务，否则就有可能出现主线程被阻塞住的情况。</p><a id="more"></a><h1 id="Android多线程编程"><a href="#Android多线程编程" class="headerlink" title="Android多线程编程"></a>Android多线程编程</h1><p>当我们需要执行一些耗时操作，比如说发起一条网络请求时，考虑到网速等其他原因，服务器未必会立刻响应我们的请求，如果不将这类操作放在子线程里去运行，就会导致主线程被阻塞住，从而影响用户对软件的正常使用。</p><h2 id="线程基本用法"><a href="#线程基本用法" class="headerlink" title="线程基本用法"></a>线程基本用法</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><ul><li>定义一个线程只需要新建一个类继承自Thread，然后重写父类的run()方法，并在里面编写耗时逻辑即可</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">public void run()&#123;</span><br><span class="line"><span class="comment">//处理具体的逻辑</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>启动线程只需要new出MyThread的实例，然后调用它的start()方法，这样run()方法中的代码就会在子线程当中运行了<code>new MyThread().start();</code></li></ul><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><ul><li>使用继承的方式耦合性有点高，更多的时候我们都会选择使用实现Runnable接口的方式来定义一个线程</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 处理具体的逻辑</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>启动线程的方法</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MyThread myThread = <span class="keyword">new</span> <span class="type">MyThread</span>();</span><br><span class="line"><span class="keyword">new</span> <span class="type">Thread</span>(myThread).start();</span><br></pre></td></tr></table></figure><p>Thread的构造函数接收一个Runnable参数，而我们new出的MyThread正是一个实现了Runnable接口的对象，所以可以直接将它传入到Thread的构造函数里。接着调用Thread的start()方法，run()方法中的代码就会在子线程当中运行了。</p><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><ul><li>使用匿名类的方式</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 处理具体的逻辑</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure><h2 id="在子线程中更新UI"><a href="#在子线程中更新UI" class="headerlink" title="在子线程中更新UI"></a>在子线程中更新UI</h2><p>和其他许多GUI库一样，Android的UI也是线程不安全的。也就是说，如果想要更新应用程序里的UI元素，则必须在主线程中进行，否则就会出现异常。</p><ul><li>新建AndroidThreadTest项目</li><li>修改activity_main.xml的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:id</span>=<span class="string">"@+id/change_text"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:text</span>=<span class="string">"修改文字"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/text"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"20sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.androidthreadtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView text;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        text=findViewById(R.id.text);</span><br><span class="line">        Button changeText=findViewById(R.id.change_text);</span><br><span class="line">        </span><br><span class="line">        changeText.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.change_text:</span><br><span class="line">                <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        text.setText(<span class="string">"改变了！"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).start();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个代码如果去点击按钮是会崩溃的，因为安卓不允许在子线程更新UI，有些时候，我们必须在子线程里去执行一些耗时任务，然后根据任务的执行结果来更新相应的UI控件，对于这种情况，Android提供了一套异步消息处理机制，完美地解决了在子线程中进行UI操作的问题。</p><ul><li>修改MainACtivity中的代码</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.androidthreadtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView text;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UPDATE_TEXT=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> Handler <span class="keyword">handler</span>=<span class="keyword">new</span> Handler()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what)&#123;</span><br><span class="line">                <span class="keyword">case</span> UPDATE_TEXT:</span><br><span class="line">                    text.setText(<span class="string">"我改了！"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        text=findViewById(R.id.text);</span><br><span class="line">        Button changeText=findViewById(R.id.change_text);</span><br><span class="line"></span><br><span class="line">        changeText.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.change_text:</span><br><span class="line">                <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        Message message=<span class="keyword">new</span> Message();</span><br><span class="line">                        message.what=UPDATE_TEXT;</span><br><span class="line">                        <span class="keyword">handler</span>.sendMessage(message);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;).start();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就完全没有问题,我们先是定义了一个整型常量UPDATE_TEXT，用于表示更新TextView这个动作。然后新增一个Handler对象，并重写父类的handleMessage()方法，在这里对具体的Message进行处理。如果发现Message的what字段的值等于UPDATE_TEXT，就将TextView显示的内容修改。</p><p>对于Change Text按钮的点击事件中的代码。可以看到，这次我们并没有在子线程里直接进行UI操作，而是创建了一个Message（android.os.Message）对象，并将它的what字段的值指定为UPDATE_TEXT，然后调用Handler的sendMessage()方法将这条Message发送出去。很快，Handler就会收到这条Message，并在handleMessage()方法中对它进行处理。注意此时handleMessage()方法中的代码就是在主线程当中运行的了，所以我们可以放心地在这里进行UI操作。接下来对Message携带的what字段的值进行判断，如果等于UPDATE_TEXT，就将TextView显示的内容修改。</p><h2 id="解析异步消息处理机制"><a href="#解析异步消息处理机制" class="headerlink" title="解析异步消息处理机制"></a>解析异步消息处理机制</h2><p>Android中的异步消息处理主要由4个部分组成：Message、Handler、MessageQueue和Looper。其中Message和Handler在上一小节中我们已经接触过了，而MessageQueue和Looper还是全新的概念。</p><ul><li>Message：Message是在线程之间传递的消息，它可以在内部携带少量的信息，用于在不同线程之间交换数据。上一小节中我们使用到了Message的what字段，除此之外还可以使用arg1和arg2字段来携带一些整型数据，使用obj字段携带一个Object对象。</li><li>Handler：Handler顾名思义也就是处理者的意思，它主要是用于发送和处理消息的。发送消息一般是使用Handler的sendMessage()方法，而发出的消息经过一系列地辗转处理后，最终会传递到Handler的handleMessage()方法中。</li><li>MessageQueue：MessageQueue是消息队列的意思，它主要用于存放所有通过Handler发送的消息。这部分消息会一直存在于消息队列中，等待被处理。每个线程中只会有一个MessageQueue对象。</li><li>Looper：Looper是每个线程中的MessageQueue的管家，调用Looper的loop()方法后，就会进入到一个无限循环当中，然后每当发现MessageQueue中存在一条消息，就会将它取出，并传递到Handler的handleMessage()方法中。每个线程中也只会有一个Looper对象。</li></ul><p><strong>异步消息处理流程</strong>：首先需要在主线程当中创建一个Handler对象，并重写handleMessage()方法。然后当子线程中需要进行UI操作时，就创建一个Message对象，并通过Handler将这条消息发送出去。之后这条消息会被添加到MessageQueue的队列中等待被处理，而Looper则会一直尝试从MessageQueue中取出待处理消息，最后分发回Handler的handleMessage()方法中。由于Handler是在主线程中创建的，所以此时handleMessage()方法中的代码也会在主线程中运行，于是我们在这里就可以安心地进行UI操作了。</p><p><img src="/2019/01/25/第十章：探究服务/异步消息机制.png" alt=""></p><h2 id="使用AsyncTask"><a href="#使用AsyncTask" class="headerlink" title="使用AsyncTask"></a>使用AsyncTask</h2><p>为了更加方便我们在子线程中对UI进行操作，Android还提供了另外一些好用的工具，比如AsyncTask。借助AsyncTask，即使你对异步消息处理机制完全不了解，也可以十分简单地从子线程切换到主线程。当然，AsyncTask背后的实现原理也是基于异步消息处理机制的，只是Android帮我们做了很好的封装而已。</p><h3 id="AsyncTask基本用法"><a href="#AsyncTask基本用法" class="headerlink" title="AsyncTask基本用法"></a>AsyncTask基本用法</h3><p>由于AsyncTask是一个抽象类，所以如果我们想使用它，就必须要创建一个子类去继承它。在继承时我们可以为AsyncTask类指定3个泛型参数，这3个参数的用途如下。</p><ul><li>Params：在执行AsyncTask时需要传入的参数，可用于在后台任务中使用。</li><li>Progress：后台任务执行时，如果需要在界面上显示当前的进度，则使用这里指定的泛型作为进度单位。</li><li>Result：当任务执行完毕后，如果需要对结果进行返回，则使用这里指定的泛型作为返回值类型。</li></ul><h4 id="一个简单的自定义AsyncTask"><a href="#一个简单的自定义AsyncTask" class="headerlink" title="一个简单的自定义AsyncTask"></a>一个简单的自定义AsyncTask</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadTask</span> <span class="keyword">extends</span> <span class="title">AsyncTask&lt;Void</span>, <span class="title">Integer</span>, <span class="title">Boolean&gt;</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们把AsyncTask的第一个泛型参数指定为Void，表示在执行AsyncTask的时候不需要传入参数给后台任务。第二个泛型参数指定为Integer，表示使用整型数据来作为进度显示单位。第三个泛型参数指定为Boolean，则表示使用布尔型数据来反馈执行结果。</p><p>当然，目前我们自定义的DownloadTask还是一个空任务，并不能进行任何实际的操作，我们还需要去重写AsyncTask中的几个方法才能完成对任务的定制。经常需要去重写的方法有以下4个。</p><ul><li>onPreExecute()：这个方法会在后台任务开始执行之前调用，用于进行一些界面上的初始化操作，比如显示一个进度条对话框等。</li><li>doInBackground(Params…)：这个方法中的所有代码都会在子线程中运行，我们应该在这里去处理所有的耗时任务。任务一旦完成就可以通过return语句来将任务的执行结果返回，如果AsyncTask的第三个泛型参数指定的是Void，就可以不返回任务执行结果。注意，在这个方法中是不可以进行UI操作的，如果需要更新UI元素，比如说反馈当前任务的执行进度，可以调用publishProgress (Progress…)方法来完成。</li><li>onProgressUpdate(Progress…)：当在后台任务中调用了publishProgress(Progress…)方法后，onProgressUpdate (Progress…)方法就会很快被调用，该方法中携带的参数就是在后台任务中传递过来的。在这个方法中可以对UI进行操作，利用参数中的数值就可以对界面元素进行相应的更新。</li><li>onPostExecute(Result)：当后台任务执行完毕并通过return语句进行返回时，这个方法就很快会被调用。返回的数据会作为参数传递到此方法中，可以利用返回的数据来进行一些UI操作，比如说提醒任务执行的结果，以及关闭掉进度条对话框等。</li></ul><h4 id="一个比较完整的自定义AsyncTask"><a href="#一个比较完整的自定义AsyncTask" class="headerlink" title="一个比较完整的自定义AsyncTask"></a>一个比较完整的自定义AsyncTask</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadTask</span> <span class="keyword">extends</span> <span class="title">AsyncTask&lt;Void</span>, <span class="title">Integer</span>, <span class="title">Boolean&gt;</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> void onPreExecute() &#123;</span><br><span class="line">progressDialog.show(); <span class="comment">// 显示进度对话框</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="type">Boolean</span> doInBackground(<span class="type">Void</span>... params) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">int downloadPercent = doDownload(); <span class="comment">// 这是一个虚构的方法</span></span><br><span class="line">publishProgress(downloadPercent);</span><br><span class="line"><span class="keyword">if</span> (downloadPercent &gt;= <span class="number">100</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="type">Exception</span> e) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> void onProgressUpdate(<span class="type">Integer</span>... values) &#123;</span><br><span class="line"><span class="comment">// 在这里更新下载进度</span></span><br><span class="line">progressDialog.setMessage(<span class="string">"Downloaded "</span> + values[<span class="number">0</span>] + <span class="string">"%"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> void onPostExecute(<span class="type">Boolean</span> result) &#123;</span><br><span class="line">progressDialog.dismiss(); <span class="comment">// 关闭进度对话框</span></span><br><span class="line"><span class="comment">// 在这里提示下载结果</span></span><br><span class="line"><span class="keyword">if</span> (result) &#123;</span><br><span class="line"><span class="type">Toast</span>.makeText(context, <span class="string">"Download succeeded"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">Toast</span>.makeText(context, <span class="string">" Download failed"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个DownloadTask中，我们在doInBackground()方法里去执行具体的下载任务。这个方法里的代码都是在子线程中运行的，因而不会影响到主线程的运行。注意这里虚构了一个doDownload()方法，这个方法用于计算当前的下载进度并返回，我们假设这个方法已经存在了。在得到了当前的下载进度后，下面就该考虑如何把它显示到界面上了，由于doInBackground()方法是在子线程中运行的，在这里肯定不能进行UI操作，所以我们可以调用publishProgress()方法并将当前的下载进度传进来，这样onProgressUpdate()方法就会很快被调用，在这里就可以进行UI操作了。<br>当下载完成后，doInBackground()方法会返回一个布尔型变量，这样onPostExecute()方法就会很快被调用，这个方法也是在主线程中运行的。然后在这里我们会根据下载的结果来弹出相应的Toast提示，从而完成整个DownloadTask任务。</p><p>使用AsyncTask的诀窍就是，在doInBackground()方法中执行具体的耗时任务，在onProgressUpdate()方法中进行UI操作，在onPostExecute()方法中执行一些任务的收尾工作。</p><p>如果想要启动这个任务，只需编写以下代码即可：<code>new DownloadTask().execute();</code></p><h1 id="服务的基本用法"><a href="#服务的基本用法" class="headerlink" title="服务的基本用法"></a>服务的基本用法</h1><h2 id="定义一个服务"><a href="#定义一个服务" class="headerlink" title="定义一个服务"></a>定义一个服务</h2><ul><li>新建一个ServiceTest项目</li><li>新建Service：右击com.example.servicetest→New→Service→Service</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicetest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.<span class="type">Service</span>;</span><br><span class="line"><span class="keyword">import</span> android.content.<span class="type">Intent</span>;</span><br><span class="line"><span class="keyword">import</span> android.os.<span class="type">IBinder</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    public <span class="type">MyService</span>() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="type">IBinder</span> onBind(<span class="type">Intent</span> intent) &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">UnsupportedOperationException</span>(<span class="string">"Not yet implemented"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>MyService是继承自Service类的，说明这是一个服务。目前MyService中可以算是空空如也，但有一个onBind()方法特别醒目。这个方法是Service中唯一的一个抽象方法，所以必须要在子类里实现。我们会在后面的小节中使用到onBind()方法，目前可以暂时将它忽略掉。</p></li><li><p>重写服务中的一些方法</p></li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicetest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>onCreate()、onStartCommand()和onDestroy()这3个方法是每个服务中最常用到的3个方法了。其中onCreate()方法会在服务创建的时候调用，onStartCommand()方法会在每次服务启动的时候调用，onDestroy()方法会在服务销毁的时候调用。</p><p>通常情况下，如果我们希望服务一旦启动就立刻去执行某个动作，就可以将逻辑写在onStartCommand()方法里。而当服务销毁时，我们又应该在onDestroy()方法中去回收那些不再使用的资源。</p><p>另外需要注意，每一个服务都需要在AndroidManifest.xml文件中进行注册才能生效，这是Android四大组件共有的特点。</p><p>但是Android Studio已经帮我们添加好了</p><h2 id="启动和停止服务"><a href="#启动和停止服务" class="headerlink" title="启动和停止服务"></a>启动和停止服务</h2><p>启动和停止的方法主要是借助Intent来实现的</p><ul><li>修改activity_main.xml中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/start_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"启动服务"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/stop_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"停止服务"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicetest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.<span class="type">Intent</span>;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.<span class="type">AppCompatActivity</span>;</span><br><span class="line"><span class="keyword">import</span> android.os.<span class="type">Bundle</span>;</span><br><span class="line"><span class="keyword">import</span> android.view.<span class="type">View</span>;</span><br><span class="line"><span class="keyword">import</span> android.widget.<span class="type">Button</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="title">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> startService=findViewById(<span class="type">R</span>.id.start_service);</span><br><span class="line">        <span class="type">Button</span> stopService=findViewById(<span class="type">R</span>.id.stop_service);</span><br><span class="line"></span><br><span class="line">        startService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        stopService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">        switch(v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="type">R</span>.id.start_service:</span><br><span class="line">                <span class="type">Intent</span> startIntent=<span class="keyword">new</span> <span class="type">Intent</span>(<span class="keyword">this</span>, <span class="type">MyService</span>.<span class="keyword">class</span>);</span><br><span class="line">                startService(startIntent);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="type">R</span>.id.stop_service:</span><br><span class="line">                <span class="type">Intent</span> stopIntent=<span class="keyword">new</span> <span class="type">Intent</span>(<span class="keyword">this</span>,<span class="type">MyService</span>.<span class="keyword">class</span>);</span><br><span class="line">                stopService(stopIntent);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有点击Stop Service按钮，服务就会一直处于运行状态。那服务有没有什么办法让自已停止下来呢？当然可以，只需要在MyService的任何一个位置调用stopSelf()方法就能让这个服务停止下来了。</p><p>onCreate()方法是在服务第一次创建的时候调用的，而onStartCommand()方法则在每次启动服务的时候都会调用，由于刚才我们是第一次点击Start Service按钮，服务此时还未创建过，所以两个方法都会执行，之后如果你再连续多点击几次Start Service按钮，你就会发现只有onStartCommand()方法可以得到执行了。</p><h2 id="活动和服务进行通信"><a href="#活动和服务进行通信" class="headerlink" title="活动和服务进行通信"></a>活动和服务进行通信</h2><p>比如说，目前我们希望在MyService里提供一个下载功能，然后在活动中可以决定何时开始下载，以及随时查看下载进度。实现这个功能的思路是创建一个专门的Binder对象来对下载功能进行管理</p><ul><li>修改MyService中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicetest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DownloadBinder mBinder=<span class="keyword">new</span> DownloadBinder();</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DownloadBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDownload</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Log.d(<span class="string">"MyService"</span>, <span class="string">"开始下载！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getProgress</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Log.d(<span class="string">"MyService"</span>, <span class="string">"获取下载进度执行!"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们新建了一个DownloadBinder类，并让它继承自Binder，然后在它的内部提供了开始下载以及查看下载进度的方法。当然这只是两个模拟方法，并没有实现真正的功能，我们在这两个方法中分别打印了一行日志。<br>接着，在MyService中创建了DownloadBinder的实例，然后在onBind()方法里返回了这个实例，这样MyService中的工作就全部完成了。</p><ul><li>在布局中新增两个按钮</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/start_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"启动服务"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/stop_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"停止服务"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/bind_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"绑定服务"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/unbind_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"取消绑定服务"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicetest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.ServiceConnection;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span>&#123;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> MyService.DownloadBinder downloadBinder;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> ServiceConnection connection=<span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> onServiceConnected(ComponentName name, IBinder service) &#123;</span><br><span class="line">            downloadBinder=(MyService.DownloadBinder)service;</span><br><span class="line">            downloadBinder.startDownload();</span><br><span class="line">            downloadBinder.getProgress();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> onServiceDisconnected(ComponentName name) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button startService=findViewById(R.id.start_service);</span><br><span class="line">        Button stopService=findViewById(R.id.stop_service);</span><br><span class="line">        Button bindService=findViewById(R.id.bind_service);</span><br><span class="line">        Button unbindService=findViewById(R.id.unbind_service);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        startService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        stopService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        </span><br><span class="line">        bindService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        unbindService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onClick(View v) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">start_service:</span></span><br><span class="line">                Intent startIntent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.<span class="keyword">class</span>);</span><br><span class="line">                startService(startIntent);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">stop_service:</span></span><br><span class="line">                Intent stopIntent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.<span class="keyword">class</span>);</span><br><span class="line">                stopService(stopIntent);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">bind_service:</span></span><br><span class="line">                Intent bindIntent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.<span class="keyword">class</span>);</span><br><span class="line">                bindService(bindIntent,connection,BIND_AUTO_CREATE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">unbind_service:</span></span><br><span class="line">                unbindService(connection);</span><br><span class="line"><span class="symbol">                default:</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>这里我们首先创建了一个ServiceConnection的匿名类，在里面重写了onServiceConnected()方法和onServiceDisconnected()方法，这两个方法分别会在活动与服务成功绑定以及活动与服务的连接断开的时候调用。在onServiceConnected()方法中，我们又通过向下转型得到了DownloadBinder的实例，有了这个实例，活动和服务之间的关系就变得非常紧密了。</p></li><li><p>现在我们可以在活动中根据具体的场景来调用DownloadBinder中的任何public方法，即实现了指挥服务干什么服务就去干什么的功能。这里仍然只是做了个简单的测试，在onServiceConnected()方法中调用了DownloadBinder的startDownload()和getProgress()方法。</p></li><li>当然，现在活动和服务其实还没进行绑定呢，这个功能是在Bind Service按钮的点击事件里完成的。可以看到，这里我们仍然是构建出了一个Intent对象，然后调用bindService()方法将MainActivity和MyService进行绑定。bindService()方法接收3个参数，第一个参数就是刚刚构建出的Intent对象，第二个参数是前面创建出的ServiceConnection的实例，第三个参数则是一个标志位，这里传入BIND_AUTO_CREATE表示在活动和服务进行绑定后自动创建服务。这会使得MyService中的onCreate()方法得到执行，但onStartCommand()方法不会执行。</li><li>然后如果我们想解除活动和服务之间的绑定该怎么办呢？调用一下unbindService()方法就可以了，这也是Unbind Service按钮的点击事件里实现的功能。</li></ul><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>任何一个服务在整个应用程序范围内都是通用的，即MyService不仅可以和MainActivity绑定，还可以和任何一个其他的活动进行绑定，而且在绑定完成后它们都可以获取到相同的DownloadBinder实例。</p><h1 id="服务的生命周期"><a href="#服务的生命周期" class="headerlink" title="服务的生命周期"></a>服务的生命周期</h1><p>服务也有自己的生命周期，前面我们使用到的onCreate()、onStartCommand()、onBind()和onDestroy()等方法都是在服务的生命周期内可能回调的方法。</p><p>一旦在项目的任何位置调用了Context的startService()方法，相应的服务就会启动起来，并回调onStartCommand()方法。如果这个服务之前还没有创建过，onCreate()方法会先于onStartCommand()方法执行。服务启动了之后会一直保持运行状态，直到stopService()或stopSelf()方法被调用。注意，虽然每调用一次startService()方法，onStartCommand()就会执行一次，但实际上每个服务都只会存在一个实例。所以不管你调用了多少次startService()方法，只需调用一次stopService()或stopSelf()方法，服务就会停止下来了。</p><p>还可以调用Context的bindService()来获取一个服务的持久连接，这时就会回调服务中的onBind()方法。类似地，如果这个服务之前还没有创建过，onCreate()方法会先于onBind()方法执行。之后，调用方可以获取到onBind()方法里返回的IBinder对象的实例，这样就能自由地和服务进行通信了。只要调用方和服务之间的连接没有断开，服务就会一直保持运行状态。</p><p>当调用了startService()方法后，又去调用stopService()方法，这时服务中的onDestroy()方法就会执行，表示服务已经销毁了。类似地，当调用了bindService()方法后，又去调用unbindService()方法，onDestroy()方法也会执行</p><p>需要注意，我们是完全有可能对一个服务既调用了startService()方法，又调用了bindService()方法的，这种情况下该如何才能让服务销毁掉呢？根据Android系统的机制，一个服务只要被启动或者被绑定了之后，就会一直处于运行状态，必须要让以上两种条件同时不满足，服务才能被销毁。所以，这种情况下要同时调用stopService()和unbindService()方法，onDestroy()方法才会执行。</p><h1 id="服务的更多技巧"><a href="#服务的更多技巧" class="headerlink" title="服务的更多技巧"></a>服务的更多技巧</h1><h2 id="使用前台服务"><a href="#使用前台服务" class="headerlink" title="使用前台服务"></a>使用前台服务</h2><p>服务几乎都是在后台运行的，一直以来它都是默默地做着辛苦的工作。但是服务的系统优先级还是比较低的，当系统出现内存不足的情况时，就有可能会回收掉正在后台运行的服务。如果你希望服务可以一直保持运行状态，而不会由于系统内存不足的原因导致被回收，就可以考虑使用前台服务。前台服务和普通服务最大的区别就在于，它会一直有一个正在运行的图标在系统的状态栏显示，下拉状态栏后可以看到更加详细的信息，非常类似于通知的效果。当然有时候你也可能不仅仅是为了防止服务被回收掉才使用前台服务的，有些项目由于特殊的需求会要求必须使用前台服务，比如说彩云天气这款天气预报应用，它的服务在后台更新天气数据的同时，还会在系统状态栏一直显示当前的天气信息.</p><h2 id="创建一个前台服务"><a href="#创建一个前台服务" class="headerlink" title="创建一个前台服务"></a>创建一个前台服务</h2><ul><li>修改MyService中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicetest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Notification;</span><br><span class="line"><span class="keyword">import</span> android.app.PendingIntent;</span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.NotificationCompat;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DownloadBinder mBinder=<span class="keyword">new</span> DownloadBinder();</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DownloadBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDownload</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Log.d(<span class="string">"MyService"</span>, <span class="string">"开始下载！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getProgress</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Log.d(<span class="string">"MyService"</span>, <span class="string">"获取下载进度执行!"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        Log.d(<span class="string">"MyService"</span>, <span class="string">"onCreate函数执行了！"</span>);</span><br><span class="line"></span><br><span class="line">        Intent intent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MainActivity.class);</span><br><span class="line">        PendingIntent pi=PendingIntent.getActivity(<span class="keyword">this</span>,<span class="number">0</span>,intent,<span class="number">0</span>);</span><br><span class="line">        Notification notification=<span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>)</span><br><span class="line">                .setContentTitle(<span class="string">"这是一个标题"</span>)</span><br><span class="line">                .setContentText(<span class="string">"这是内容"</span>)</span><br><span class="line">                .setWhen(System.currentTimeMillis())</span><br><span class="line">                .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class="line">                .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher))</span><br><span class="line">                .setContentIntent(pi)</span><br><span class="line">                .build();</span><br><span class="line">        startForeground(<span class="number">1</span>,notification);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这就是我们在第8章中学习的创建通知的方法。只不过这次在构建出Notification对象后并没有使用NotificationManager来将通知显示出来，而是调用了startForeground()方法。这个方法接收两个参数，第一个参数是通知的id，类似于notify()方法的第一个参数，第二个参数则是构建出的Notification对象。调用startForeground()方法后就会让MyService变成一个前台服务，并在系统状态栏显示出来。</p><ul><li>这段代码在安卓8以上会闪退，原因不明，估计是因为有些写法不一样了，待修改</li></ul><h2 id="使用IntentService"><a href="#使用IntentService" class="headerlink" title="使用IntentService"></a>使用IntentService</h2><p>服务中的代码都是默认运行在主线程当中的，如果直接在服务里去处理一些耗时的逻辑，就很容易出现ANR（Application Not Responding）的情况。</p><p>所以这个时候就需要用到Android多线程编程的技术了，我们应该在服务的每个具体的方法里开启一个子线程，然后在这里去处理那些耗时的逻辑。</p><ul><li>一个比较标准的服务：</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;  </span><br><span class="line"><span class="meta">@Override</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;  </span><br><span class="line"><span class="comment">// 处理具体的逻辑</span></span><br><span class="line">&#125;  </span><br><span class="line">&#125;).start();</span><br><span class="line"><span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种服务一旦启动之后，就会一直处于运行状态，必须调用stopService()或者stopSelf()方法才能让服务停止下来。</p><ul><li>实现让服务完成以后自动停止</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// 处理具体的逻辑</span></span><br><span class="line">stopSelf();</span><br><span class="line">&#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"><span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IntentService类"><a href="#IntentService类" class="headerlink" title="IntentService类"></a>IntentService类</h2><ul><li>为了可以简单地创建一个异步的、会自动停止的服务，Android专门提供了一个IntentService类</li><li>新建一个MyIntentService类继承自IntentService</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicetest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.<span class="type">IntentService</span>;</span><br><span class="line"><span class="keyword">import</span> android.content.<span class="type">Intent</span>;</span><br><span class="line"><span class="keyword">import</span> android.util.<span class="type">Log</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jetbrains.annotations.<span class="type">Nullable</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyIntentService</span> <span class="keyword">extends</span> <span class="title">IntentService</span> </span>&#123;</span><br><span class="line">    public <span class="type">MyIntentService</span>()&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">"MyIntentService"</span>); <span class="comment">//调用父类的有参构造函数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onHandleIntent(<span class="meta">@Nullable</span> <span class="type">Intent</span> intent) &#123;</span><br><span class="line">        <span class="comment">//打印当前线程的id</span></span><br><span class="line">        <span class="type">Log</span>.d(<span class="string">"MyIntentService"</span>, <span class="string">"线程id是"</span>+ <span class="type">Thread</span>.currentThread().getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        <span class="type">Log</span>.d(<span class="string">"MyIntentService"</span>, <span class="string">"onDestory执行了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>这里首先要提供一个无参的构造函数，并且必须在其内部调用父类的有参构造函数。然后要在子类中去实现onHandleIntent()这个抽象方法，在这个方法中可以去处理一些具体的逻辑，而且不用担心ANR的问题，因为这个方法已经是在子线程中运行的了。这里为了证实一下，我们在onHandleIntent()方法中打印了当前线程的id。另外根据IntentService的特性，这个服务在运行结束后应该是会自动停止的，所以我们又重写了onDestroy()方法，在这里也打印了一行日志，以证实服务是不是停止掉了。</p></li><li><p>修改activity_main.xml的代码</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/start_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"启动服务"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/stop_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"停止服务"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/bind_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"绑定服务"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/unbind_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"取消绑定服务"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/start_intent_service"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"启动Intent服务"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity代码</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicetest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.ServiceConnection;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span>&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyService.DownloadBinder downloadBinder;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ServiceConnection connection=<span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> onServiceConnected(ComponentName name, IBinder service) &#123;</span><br><span class="line">            downloadBinder=(MyService.DownloadBinder)service;</span><br><span class="line">            downloadBinder.startDownload();</span><br><span class="line">            downloadBinder.getProgress();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> onServiceDisconnected(ComponentName name) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button startService=findViewById(R.id.start_service);</span><br><span class="line">        Button stopService=findViewById(R.id.stop_service);</span><br><span class="line">        Button bindService=findViewById(R.id.bind_service);</span><br><span class="line">        Button unbindService=findViewById(R.id.unbind_service);</span><br><span class="line">        Button startIntentService=findViewById(R.id.start_intent_service);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        startService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        stopService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        bindService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        unbindService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        startIntentService.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onClick(View v) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">start_service:</span></span><br><span class="line">                Intent startIntent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.<span class="keyword">class</span>);</span><br><span class="line">                startService(startIntent);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">stop_service:</span></span><br><span class="line">                Intent stopIntent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.<span class="keyword">class</span>);</span><br><span class="line">                stopService(stopIntent);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">bind_service:</span></span><br><span class="line">                Intent bindIntent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.<span class="keyword">class</span>);</span><br><span class="line">                bindService(bindIntent,connection,BIND_AUTO_CREATE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">unbind_service:</span></span><br><span class="line">                unbindService(connection);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.<span class="string">start_intent_service:</span></span><br><span class="line">                <span class="comment">//打印主线程id</span></span><br><span class="line">                Log.d(<span class="string">"MainActivity"</span>, <span class="string">"主线程ID: "</span>+Thread.currentThread().getId());</span><br><span class="line">                Intent intentService=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyIntentService.<span class="keyword">class</span>);</span><br><span class="line">                startService(intentService);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"><span class="symbol">                default:</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在AndroidManifest.xml中注册服务</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;service android:<span class="attribute">name</span>=<span class="string">".MyIntentService"</span>/&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/25/第十章：探究服务/IntentService.png" alt=""></p><h1 id="服务实践-完整版下载"><a href="#服务实践-完整版下载" class="headerlink" title="服务实践-完整版下载"></a>服务实践-完整版下载</h1><p>这个实践会用到7/8/9/10章的知识，做一个完整的下载</p><ul><li>创建一个ServicePractice项目</li><li>添加依赖<code>implementation &#39;com.squareup.okhttp3:okhttp:3.12.1&#39;</code></li><li>定义回调接口，对下载过程中的各种状态进行监听和回调，新建DownloadListener接口</li></ul><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">DownloadListener</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onProgress</span>(<span class="params"><span class="keyword">int</span> progress</span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onSuccess</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onFailed</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onPaused</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onCanceled</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用AsyncTask实现下载功能,新建DownloadTask类继承自AsyncTask</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicepractice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.AsyncTask;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownloadTask</span> <span class="keyword">extends</span> <span class="title">AsyncTask</span>&lt;<span class="title">String</span>,<span class="title">Integer</span>,<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_SUCCESS=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_FAILED=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_PAUSED=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TYPE_CANCELED=<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DownloadListener listener;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isCanceled=<span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isPaused=<span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> lastProgress;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DownloadTask</span><span class="params">(DownloadListener listener)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.listener=listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Integer <span class="title">doInBackground</span><span class="params">(String... params)</span> </span>&#123;</span><br><span class="line">        InputStream is=<span class="keyword">null</span>;</span><br><span class="line">        RandomAccessFile saveFile=<span class="keyword">null</span>;</span><br><span class="line">        File file=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">long</span> downloadLength=<span class="number">0</span>; <span class="comment">//记录已经下载的文件长度</span></span><br><span class="line">            String downloadUrl=params[<span class="number">0</span>];</span><br><span class="line">            <span class="comment">//substring：返回该字符串的子字符串。子字符串从指定索引处的字符开始，一直延伸到该字符串的末尾。</span></span><br><span class="line">            <span class="comment">//lastIndexOf：返回该字符串中指定子字符串最后一次出现的索引。空字符串“”的最后一次出现被认为发生在索引值&#123;@code this.length()&#125;处。</span></span><br><span class="line">            String fileName=downloadUrl.substring(downloadUrl.lastIndexOf(<span class="string">"/"</span>));</span><br><span class="line">            String directory=Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getPath();</span><br><span class="line">            file=<span class="keyword">new</span> File(directory+fileName);</span><br><span class="line">            <span class="keyword">if</span>(file.exists())&#123;</span><br><span class="line">                downloadLength=file.length();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> contentLength=getContentLength(downloadUrl);</span><br><span class="line">            <span class="keyword">if</span>(contentLength==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> TYPE_FAILED;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(contentLength==downloadLength)&#123;</span><br><span class="line">                <span class="keyword">return</span> TYPE_SUCCESS;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            OkHttpClient client=<span class="keyword">new</span> OkHttpClient();</span><br><span class="line">            Request request=<span class="keyword">new</span> Request.Builder()</span><br><span class="line">                    <span class="comment">//断点下载，Range: bytes=500- 表示从第 500 字节开始到文件结束部分的内容。</span></span><br><span class="line">                    .addHeader(<span class="string">"RANGE"</span>,<span class="string">"bytes="</span>+downloadLength+<span class="string">"-"</span>)</span><br><span class="line">                    .url(downloadUrl)</span><br><span class="line">                    .build();</span><br><span class="line">            Response response=client.newCall(request).execute();</span><br><span class="line">            <span class="keyword">if</span>(response!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                is=response.body().byteStream();</span><br><span class="line">                saveFile=<span class="keyword">new</span> RandomAccessFile(file,<span class="string">"rw"</span>);</span><br><span class="line">                saveFile.seek(downloadLength); <span class="comment">//跳过已经下载的字节</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">byte</span>[] b=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> total=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">int</span> len;</span><br><span class="line">                <span class="keyword">while</span>((len=is.read(b))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(isCanceled)&#123;</span><br><span class="line">                        <span class="keyword">return</span> TYPE_CANCELED;</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(isPaused)&#123;</span><br><span class="line">                        <span class="keyword">return</span> TYPE_PAUSED;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        total+=len;</span><br><span class="line">                        <span class="comment">//write(byte[] b,int off, int len)：将指定 byte 数组中从偏移量 off 开始的 len 个字节写入此文件输出流。</span></span><br><span class="line">                        saveFile.write(b,<span class="number">0</span>,len);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//计算已经下载的百分比</span></span><br><span class="line">                        <span class="keyword">int</span> progress=(<span class="keyword">int</span>)((total+downloadLength)*<span class="number">100</span>/contentLength);</span><br><span class="line">                        publishProgress(progress);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                response.body().close();</span><br><span class="line">                <span class="keyword">return</span> TYPE_SUCCESS;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(is!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    is.close();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(saveFile!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    saveFile.close();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(isCanceled &amp;&amp; file!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    file.delete();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> TYPE_FAILED;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onProgressUpdate</span><span class="params">(Integer... values)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> progress=values[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(progress&gt;lastProgress)&#123;</span><br><span class="line">            listener.onProgress(progress);</span><br><span class="line">            lastProgress=progress;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPostExecute</span><span class="params">(Integer status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(status)&#123;</span><br><span class="line">            <span class="keyword">case</span> TYPE_SUCCESS:</span><br><span class="line">                listener.onSuccess();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> TYPE_FAILED:</span><br><span class="line">                listener.onFailed();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> TYPE_PAUSED:</span><br><span class="line">                listener.onPaused();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> TYPE_CANCELED:</span><br><span class="line">                listener.onCanceled();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseDownload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        isPaused=<span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelDownload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        isCanceled=<span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">getContentLength</span><span class="params">(String downloadUrl)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        OkHttpClient client=<span class="keyword">new</span> OkHttpClient();</span><br><span class="line">        Request request=<span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(downloadUrl)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        Response response=client.newCall(request).execute();</span><br><span class="line">        <span class="keyword">if</span>(response!=<span class="keyword">null</span> &amp;&amp; response.isSuccessful())&#123;</span><br><span class="line">            <span class="keyword">long</span> contentLength=response.body().contentLength();</span><br><span class="line">            response.body().close();</span><br><span class="line">            <span class="keyword">return</span> contentLength;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>首先看一下AsyncTask中的3个泛型参数：第一个泛型参数指定为String，表示在执行AsyncTask的时候需要传入一个字符串参数给后台任务；第二个泛型参数指定为Integer，表示使用整型数据来作为进度显示单位；第三个泛型参数指定为Integer，则表示使用整型数据来反馈执行结果。</li><li>接下来我们定义了4个整型常量用于表示下载的状态，TYPE_SUCCESS表示下载成功，TYPE_FAILED表示下载失败，TYPE_PAUSED表示暂停下载，TYPE_CANCELED表示取消下载。然后在DownloadTask的构造函数中要求传入一个刚刚定义的DownloadListener参数，我们待会就会将下载的状态通过这个参数进行回调。</li><li>接着就是要重写doInBackground()、onProgressUpdate()和onPostExecute()这3个方法了，我们之前已经学习过这3个方法各自的作用，因此在这里它们各自所负责的任务也是明确的：doInBackground()方法用于在后台执行具体的下载逻辑，onProgressUpdate()方法用于在界面上更新当前的下载进度，onPostExecute()用于通知最终的下载结果。</li><li>看一下doInBackground()方法，首先我们从参数中获取到了下载的URL地址，并根据URL地址解析出了下载的文件名，然后指定将文件下载到Environment.DIRECTORY_DOWNLOADS目录下，也就是SD卡的Download目录。我们还要判断一下Download目录中是不是已经存在要下载的文件了，如果已经存在的话则读取已下载的字节数，这样就可以在后面启用断点续传的功能。</li><li>接下来先是调用了getContentLength()方法来获取待下载文件的总长度，如果文件长度等于0则说明文件有问题，直接返回TYPE_FAILED，如果文件长度等于已下载文件长度，那么就说明文件已经下载完了，直接返回TYPE_SUCCESS即可。</li><li>紧接着使用OkHttp来发送一条网络请求，需要注意的是，这里在请求中添加了一个header，用于告诉服务器我们想要从哪个字节开始下载，因为已下载过的部分就不需要再重新下载了。接下来读取服务器响应的数据，并使用Java的文件流方式，不断从网络上读取数据，不断写入到本地，一直到文件全部下载完成为止。在这个过程中，我们还要判断用户有没有触发暂停或者取消的操作，如果有的话则返回TYPE_PAUSED或TYPE_CANCELED来中断下载，如果没有的话则实时计算当前的下载进度，</li><li>然后调用publishProgress()方法进行通知。暂停和取消操作都是使用一个布尔型的变量来进行控制的，调用pauseDownload()或cancelDownload()方法即可更改变量的值。</li><li>接下来看一下onProgressUpdate()方法，这个方法就简单得多了，它首先从参数中获取到当前的下载进度，然后和上一次的下载进度进行对比，如果有变化的话则调用DownloadListener的onProgress()方法来通知下载进度更新。</li><li>最后是onPostExecute()方法，也非常简单，就是根据参数中传入的下载状态来进行回调。下载成功就调用DownloadListener的onSuccess()方法，下载失败就调用onFailed()方法，暂停下载就调用onPaused()方法，取消下载就调用onCanceled()方法。</li></ul><ul><li>这样我们就把具体的下载功能完成了，下面为了保证DownloadTask可以一直在后台运行，我们还需要创建一个下载的服务。右击com.example.servicebestpractice→New→Service→Service，新建DownloadService，然后修改其中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicepractice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Notification;</span><br><span class="line"><span class="keyword">import</span> android.app.NotificationManager;</span><br><span class="line"><span class="keyword">import</span> android.app.PendingIntent;</span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.os.Binder;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.NotificationCompat;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DownloadService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DownloadTask downloadTask;</span><br><span class="line">    <span class="keyword">private</span> String downloadUrl;</span><br><span class="line">    <span class="keyword">private</span> DownloadListener listener=<span class="keyword">new</span> DownloadListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgress</span><span class="params">(<span class="keyword">int</span> progress)</span> </span>&#123;</span><br><span class="line">            getNotificationManager().notify(<span class="number">1</span>,getNotification(<span class="string">"下载中..."</span>,progress));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            downloadTask=<span class="keyword">null</span>;</span><br><span class="line">            <span class="comment">//下载成功将前台服务通知关闭并创建一个下载成功的通知</span></span><br><span class="line">            stopForeground(<span class="keyword">true</span>);</span><br><span class="line">            getNotificationManager().notify(<span class="number">1</span>,getNotification(<span class="string">"下载成功！"</span>,-<span class="number">1</span>));</span><br><span class="line">            Toast.makeText(DownloadService.<span class="keyword">this</span>, <span class="string">"下载成功！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            downloadTask=<span class="keyword">null</span>;</span><br><span class="line">            stopForeground(<span class="keyword">true</span>);</span><br><span class="line">            getNotificationManager().notify(<span class="number">1</span>,getNotification(<span class="string">"下载失败！"</span>,-<span class="number">1</span>));</span><br><span class="line">            Toast.makeText(DownloadService.<span class="keyword">this</span>, <span class="string">"下载失败！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPaused</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            downloadTask=<span class="keyword">null</span>;</span><br><span class="line">            Toast.makeText(DownloadService.<span class="keyword">this</span>, <span class="string">"下载暂停！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCanceled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            downloadTask=<span class="keyword">null</span>;</span><br><span class="line">            stopForeground(<span class="keyword">true</span>);</span><br><span class="line">            Toast.makeText(DownloadService.<span class="keyword">this</span>, <span class="string">"下载取消！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DownloadBinder mBinder=<span class="keyword">new</span> DownloadBinder();</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DownloadBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDownload</span><span class="params">(String url)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(downloadTask==<span class="keyword">null</span>)&#123;</span><br><span class="line">                downloadUrl=url;</span><br><span class="line">                downloadTask=<span class="keyword">new</span> DownloadTask(listener);</span><br><span class="line">                downloadTask.execute(downloadUrl);</span><br><span class="line">                startForeground(<span class="number">1</span>,getNotification(<span class="string">"下载中..."</span>,<span class="number">0</span>));</span><br><span class="line">                Toast.makeText(DownloadService.<span class="keyword">this</span>, <span class="string">"下载中"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pauseDownload</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(downloadTask!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                downloadTask.pauseDownload();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelDownload</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(downloadTask!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                downloadTask.cancelDownload();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(downloadUrl!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    <span class="comment">//取消下载的时候删除文件关闭通知</span></span><br><span class="line">                    String fileName=downloadUrl.substring(downloadUrl.lastIndexOf(<span class="string">"/"</span>));</span><br><span class="line">                    String directory=Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getPath();</span><br><span class="line">                    File file=<span class="keyword">new</span> File(directory+fileName);</span><br><span class="line">                    <span class="keyword">if</span>(file.exists())&#123;</span><br><span class="line">                        file.delete();</span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                    getNotificationManager().cancel(<span class="number">1</span>);</span><br><span class="line">                    stopForeground(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">                    Toast.makeText(DownloadService.<span class="keyword">this</span>, <span class="string">"下载取消！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DownloadService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> NotificationManager <span class="title">getNotificationManager</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (NotificationManager)getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Notification <span class="title">getNotification</span><span class="params">(String title, <span class="keyword">int</span> progress)</span></span>&#123;</span><br><span class="line">        Intent intent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MainActivity.class);</span><br><span class="line">        PendingIntent pi=PendingIntent.getActivity(<span class="keyword">this</span>,<span class="number">0</span>,intent,<span class="number">0</span>);</span><br><span class="line">        NotificationCompat.Builder builder=<span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>);</span><br><span class="line">        builder.setSmallIcon(R.mipmap.ic_launcher);</span><br><span class="line">        builder.setLargeIcon(BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher));</span><br><span class="line">        builder.setContentIntent(pi);</span><br><span class="line">        builder.setContentTitle(title);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(progress&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//当progress大于或等于0时才需要显示下载进度</span></span><br><span class="line">            builder.setContentText(progress+<span class="string">"%"</span>);</span><br><span class="line">            builder.setProgress(<span class="number">100</span>,progress,<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>首先这里创建了一个DownloadListener的匿名类实例，并在匿名类中实现了onProgress()、onSuccess()、onFailed()、onPaused()和onCanceled()这5个方法。</li><li>在onProgress()方法中，我们调用getNotification()方法构建了一个用于显示下载进度的通知，然后调用NotificationManager的notify()方法去触发这个通知，这样就可以在下拉状态栏中实时看到当前下载的进度了。在</li><li>onSuccess()方法中，我们首先是将正在下载的前台通知关闭，然后了创建一个新的通知用于告诉用户下载成功了。其他几个方法也都是类似的，分别用于告诉用户下载失败、暂停和取消这几个事件。</li><li>接下来为了要让DownloadService可以和活动进行通信，我们又创建了一个DownloadBinder。DownloadBinder中提供了startDownload()、pauseDownload()和cancelDownload()这3个方法，那么顾名思义，它们分别是用于开始下载、暂停下载和取消下载的。</li><li>在startDownload()方法中，我们创建了一个DownloadTask的实例，把刚才的DownloadListener作为参数传入，然后调用execute()方法开启下载，并将下载文件的URL地址传入到execute()方法中。同时，为了让这个下载服务成为一个前台服务，我们还调用了startForeground()方法，这样就会在系统状态栏中创建一个持续运行的通知了。</li><li>接着往下看，pauseDownload()方法中的代码就非常简单了，就是简单地调用了一下DownloadTask中的pauseDownload()方法。cancelDownload()方法中的逻辑也基本类似，但是要注意，取消下载的时候我们需要将正在下载的文件删除掉，这一点和暂停下载是不同的。</li><li><p>另外，DownloadService类中所有使用到的通知都是调用getNotification()方法进行构建的，这个方法中的代码我们之前基本都是学过的，只有一个setProgress()方法没有见过。setProgress()方法接收3个参数，第一个参数传入通知的最大进度，第二个参数传入通知的当前进度，第三个参数表示是否使用模糊进度条，这里传入false。设置完setProgress()方法，通知上就会有进度条显示出来了。</p></li><li><p>修改activity_main.xml中的代码</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/start_download"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"开始下载"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/pause_download"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"暂停下载"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/cancel_download"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"取消下载"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.servicepractice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.ComponentName;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.ServiceConnection;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> DownloadService.DownloadBinder downloadBinder;</span><br><span class="line">    <span class="keyword">private</span> ServiceConnection connection=<span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">            downloadBinder=(DownloadService.DownloadBinder)service;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        Button startDownload=findViewById(R.id.start_download);</span><br><span class="line">        Button pauseDownload=findViewById(R.id.pause_download);</span><br><span class="line">        Button cancelDownload=findViewById(R.id.cancel_download);</span><br><span class="line">        </span><br><span class="line">        startDownload.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        pauseDownload.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        cancelDownload.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        </span><br><span class="line">        Intent intent=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,DownloadService.class);</span><br><span class="line">        startService(intent); <span class="comment">//启动服务</span></span><br><span class="line">        bindService(intent,connection,BIND_AUTO_CREATE); <span class="comment">//绑定服务</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,<span class="keyword">new</span> String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(downloadBinder==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span>(v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.start_download:</span><br><span class="line">                String url=<span class="string">"https://raw.githubusercontent.com/guolindev/eclipse/master/eclipse-inst-win64.exe"</span>;</span><br><span class="line">                downloadBinder.startDownload(url);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.pause_download:</span><br><span class="line">                downloadBinder.pauseDownload();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.cancel_download:</span><br><span class="line">                downloadBinder.cancelDownload();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"拒绝权限将不能使用App"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        unbindService(connection);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这里我们首先创建了一个ServiceConnection的匿名类，然后在onServiceConnected()方法中获取到 DownloadBinder的实例，有了这个实例，我们就可以在活动中调用服务提供的各种方法了。</li><li>接下来看一下onCreate()方法，在这里我们对各个按钮都进行了初始化操作并设置了点击事件，然后分别调用了startService()和bindService()方法来启动和绑定服务。这一点至关重要，因为启动服务可以保证DownloadService一直在后台运行，绑定服务则可以让MainActivity和DownloadService进行通信，因此两个方法调用都必不可少。</li><li>在onCreate()方法的最后，我们还进行了WRITE_EXTERNAL_STORAGE的运行时权限申请，因为下载文件是要下载到SD卡的Download目录下的，如果没有这个权限的话，我们整个程序都无法正常工作。</li><li>接下来的代码就非常简单了，在onClick()方法中我们对点击事件进行判断，如果点击了开始按钮就调用DownloadBinder的startDownload()方法，如果点击了暂停按钮就调用pauseDownload()方法，如果点击了取消按钮就调用cancelDownload()方法。startDownload()方法中你可以传入任意的下载地址，这里我使用了一个Eclipse的下载地址，以此向这个Android平台上曾经最出色的开发工具致敬。</li><li><p>另外还有一点需要注意，如果活动被销毁了，那么一定要记得对服务进行解绑，不然就有可能会造成内存泄漏。这里我们在onDestroy()方法中完成了解绑操作。</p></li><li><p>在AndroidManifest中申明权限</p></li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.INTERNET"</span>/&gt;</span><br><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/25/第十章：探究服务/Download.png" alt=""></p><p>截止到这里我还比较懵圈，因为之前的线程没有记住那几个的用法，所以这个整合起来就有点看不懂，复习是肯定要得，不复习是不可能的，只有回来背下来那些用法才能写写程序这样。还有，为啥不直接调用系统下载程序（偷懒必备）。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;服务（Service）是Android中实现程序后台运行的解决方案，它非常适合去执行那些不需要和用户交互而且还要求长期运行的任务。服务的运行不依赖于任何用户界面，即使程序被切换到后台，或者用户打开了另外一个应用程序，服务仍然能够保持正常运行。&lt;/p&gt;
&lt;p&gt;不过需要注意的是，服务并不是运行在一个独立的进程当中的，而是依赖于创建服务时所在的应用程序进程。当某个应用程序进程被杀掉时，所有依赖于该进程的服务也会停止运行。&lt;/p&gt;
&lt;p&gt;另外，也不要被服务的后台概念所迷惑，实际上服务并不会自动开启线程，所有的代码都是默认运行在主线程当中的。也就是说，我们需要在服务的内部手动创建子线程，并在这里执行具体的任务，否则就有可能出现主线程被阻塞住的情况。&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="服务" scheme="https://zanecode6574.github.io/tags/%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="线程" scheme="https://zanecode6574.github.io/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第九章：使用网络技术</title>
    <link href="https://zanecode6574.github.io/2019/01/24/%E7%AC%AC%E4%B9%9D%E7%AB%A0%EF%BC%9A%E4%BD%BF%E7%94%A8%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    <id>https://zanecode6574.github.io/2019/01/24/第九章：使用网络技术/</id>
    <published>2019-01-24T13:02:35.000Z</published>
    <updated>2019-01-25T07:32:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android手机肯定也是可以上网的，所以作为开发者，我们就需要考虑如何利用网络来编写出更加出色的应用程序，像QQ、微博、微信等常见的应用都会大量使用网络技术。本章主要会讲述如何在手机端使用HTTP协议和服务器端进行网络交互，并对服务器返回的数据进行解析，这也是Android中最常使用到的网络技术</p><a id="more"></a><h1 id="WebView用法"><a href="#WebView用法" class="headerlink" title="WebView用法"></a>WebView用法</h1><p>WebView可以在应用程序内加载网页，不用调用别的浏览器</p><ul><li>新建WebViewTest项目</li><li>修改activity_main.xml，添加一个WebView控件</li><li>修改MainActivity</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.webviewtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.<span class="type">AppCompatActivity</span>;</span><br><span class="line"><span class="keyword">import</span> android.os.<span class="type">Bundle</span>;</span><br><span class="line"><span class="keyword">import</span> android.webkit.<span class="type">WebChromeClient</span>;</span><br><span class="line"><span class="keyword">import</span> android.webkit.<span class="type">WebView</span>;</span><br><span class="line"><span class="keyword">import</span> android.webkit.<span class="type">WebViewClient</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">WebView</span> webView=findViewById(<span class="type">R</span>.id.web_view);</span><br><span class="line"></span><br><span class="line">        webView.getSettings().setJavaScriptEnabled(<span class="literal">true</span>);</span><br><span class="line">        webView.setWebViewClient(<span class="keyword">new</span> <span class="type">WebViewClient</span>());</span><br><span class="line">        webView.loadUrl(<span class="string">"https://zanecode6574.com"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/24/第九章：使用网络技术/WebViewTest.png" alt=""></p><h1 id="使用http协议访问网络"><a href="#使用http协议访问网络" class="headerlink" title="使用http协议访问网络"></a>使用http协议访问网络</h1><h2 id="使用HttpURLConnection"><a href="#使用HttpURLConnection" class="headerlink" title="使用HttpURLConnection"></a>使用HttpURLConnection</h2><p>在过去，Android上发送HTTP请求一般有两种方式：HttpURLConnection和HttpClient。不过由于HttpClient存在API数量过多、扩展困难等缺点，Android团队越来越不建议我们使用这种方式。终于在Android 6.0系统中，HttpClient的功能被完全移除了。</p><h3 id="HttpURLConnection的用法。"><a href="#HttpURLConnection的用法。" class="headerlink" title="HttpURLConnection的用法。"></a>HttpURLConnection的用法。</h3><ul><li>首先需要获取到HttpURLConnection的实例，一般只需new出一个URL对象，并传入目标的网络地址，然后调用一下openConnection()方法即可，如下所示：</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URL url = new URL(<span class="string">"http://www.baidu.com"</span>);</span><br><span class="line">HttpURLConnection<span class="built_in"> connection </span>= (HttpURLConnection) url.openConnection();</span><br></pre></td></tr></table></figure><ul><li>在得到了HttpURLConnection的实例之后，我们可以设置一下HTTP请求所使用的方法。常用的方法主要有两个：GET和POST。GET表示希望从服务器那里获取数据，而POST则表示希望提交数据给服务器。写法如下：</li></ul><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.setRequestMethod(<span class="string">"<span class="keyword">GET</span>"</span>);</span><br></pre></td></tr></table></figure><ul><li>接下来就可以进行一些自由的定制了，比如设置连接超时、读取超时的毫秒数，以及服务器希望得到的一些消息头等。这部分内容根据自己的实际情况进行编写，示例写法如下：</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">connection.setConnectTimeout(<span class="number">8000</span>)<span class="comment">;</span></span><br><span class="line">connection.setReadTimeout(<span class="number">8000</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><ul><li>之后再调用getInputStream()方法就可以获取到服务器返回的输入流了，剩下的任务就是对输入流进行读取，如下所示：</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">InputStream in</span> = connection.getInputStream();</span><br></pre></td></tr></table></figure><ul><li>最后可以调用disconnect()方法将这个HTTP连接关闭掉，如下所示：</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection.disconnect()<span class="comment">;</span></span><br></pre></td></tr></table></figure><h3 id="新建NetworkTest项目"><a href="#新建NetworkTest项目" class="headerlink" title="新建NetworkTest项目"></a>新建NetworkTest项目</h3><ul><li>修改activity_main.xml中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/send_request"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">ScrollView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/response_text"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView responseText;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        Button sendRequest=findViewById(R.id.send_request);</span><br><span class="line">        responseText=findViewById(R.id.response_text);</span><br><span class="line">        </span><br><span class="line">        sendRequest.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//开启线程来发起网络请求</span></span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                HttpURLConnection connection=<span class="keyword">null</span>;</span><br><span class="line">                BufferedReader reader=<span class="keyword">null</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    URL url=<span class="keyword">new</span> URL(<span class="string">"https://zanecode6574.com"</span>);</span><br><span class="line">                    connection=(HttpURLConnection)url.openConnection();</span><br><span class="line">                    connection.setRequestMethod(<span class="string">"GET"</span>);</span><br><span class="line">                    connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">                    InputStream in=connection.getInputStream();</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">//对输入流进行获取</span></span><br><span class="line">                    reader=<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">                    StringBuilder response=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    String line;</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">while</span>((line=reader.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        response.append(line);</span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                    showResponse(response.toString());</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(reader!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        <span class="keyword">try</span>&#123;</span><br><span class="line">                            reader.close();</span><br><span class="line">                        &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span>(connection!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        connection.disconnect();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showResponse</span><span class="params">(<span class="keyword">final</span> String response)</span></span>&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">//在这里进行ui操作将结果显示到界面上</span></span><br><span class="line">                responseText.setText(response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在AndroidManifest中申明网络权限</li></ul><p><img src="/2019/01/24/第九章：使用网络技术/HttpConnection.png" alt=""></p><ul><li>如果要发送POST，只需要将HTTP请求方法改成POST，然后在获取输入流之前把要提交的数据写出即可，每条数据要以键值对的方式存在，数据以数据之间用<code>&amp;</code>隔开,比如向服务器提交用户名密码</li></ul><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connection.setRequestMethod(<span class="string">"<span class="keyword">POST</span>"</span>);</span><br><span class="line">DataOutputStream out = new DataOutputStream(connection.getOutputStream());</span><br><span class="line">out.writeBytes(<span class="string">"username=admin&amp;password=123456"</span>);</span><br></pre></td></tr></table></figure><h1 id="使用OkHttp"><a href="#使用OkHttp" class="headerlink" title="使用OkHttp"></a>使用OkHttp</h1><p>有许多出色的网络通信库都可以替代原生的HttpURLConnection，而其中OkHttp无疑是做得最出色的一个。<br>OkHttp是由鼎鼎大名的Square公司开发的，这个公司在开源事业上面贡献良多，除了OkHttp之外，还开发了像Picasso、Retrofit等著名的开源项目。OkHttp不仅在接口封装上面做得简单易用，就连在底层实现上也是自成一派，比起原生的HttpURLConnection，可以说是有过之而无不及，现在已经成了广大Android开发者首选的网络通信库。(我以为是HttpClient，结果到这里才发现已经被弃用了)</p><p>OkHttp项目地址：<a href="https://github.com/square/okhttp" target="_blank" rel="noopener">https://github.com/square/okhttp</a></p><ul><li>在之前的项目基础上修改即可，添加依赖<code>implementation &quot;com.squareup.okhttp3:okhttp:3.12.1&quot;</code></li></ul><h2 id="OkHttp用法"><a href="#OkHttp用法" class="headerlink" title="OkHttp用法"></a>OkHttp用法</h2><ul><li>首先需要创建一个OkHttpClient的实例，如下所示：</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OkHttpClient<span class="built_in"> client </span>= new OkHttpClient();</span><br></pre></td></tr></table></figure><ul><li>如果想发起一条HTTP请求，就需要创建一个Request对象：</li></ul><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Request</span> <span class="built_in">request</span> = <span class="keyword">new</span> <span class="built_in">Request</span>.Builder().build();</span><br></pre></td></tr></table></figure><ul><li>上述代码只是创建了一个空的Request对象，并没有什么实际作用，我们可以在最终的build()方法之前连缀很多其他方法来丰富这个Request对象。比如可以通过url()方法来设置目标的网络地址，如下所示：</li></ul><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Request</span> <span class="built_in">request</span> = <span class="keyword">new</span> <span class="built_in">Request</span>.Builder()</span><br><span class="line">.url(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">.build();</span><br></pre></td></tr></table></figure><ul><li>之后调用OkHttpClient的newCall()方法来创建一个Call对象，并调用它的execute()方法来发送请求并获取服务器返回的数据，写法如下：</li></ul><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Response</span> <span class="built_in">response</span> = client.newCall(<span class="built_in">request</span>).<span class="keyword">execute</span>();</span><br></pre></td></tr></table></figure><p>其中Response对象就是服务器返回的数据了，我们可以使用如下写法来得到返回的具体内容：</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> responseData = <span class="built_in">response</span>.body().<span class="built_in">string</span>();</span><br></pre></td></tr></table></figure><ul><li>如果是发起一条POST请求会比GET请求稍微复杂一点，我们需要先构建出一个Request Body对象来存放待提交的参数，如下所示：</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RequestBody requestBody = new FormBody.Builder()</span><br><span class="line">.<span class="builtin-name">add</span>(<span class="string">"username"</span>, <span class="string">"admin"</span>)</span><br><span class="line">.<span class="builtin-name">add</span>(<span class="string">"password"</span>, <span class="string">"123456"</span>)</span><br><span class="line">.build();</span><br></pre></td></tr></table></figure><ul><li>然后在Request.Builder中调用一下post()方法，并将RequestBody对象传入：</li></ul><figure class="highlight pony"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Request</span> request = <span class="function"><span class="keyword">new</span> <span class="title">Request</span>.<span class="title">Builder</span>()</span></span><br><span class="line"><span class="function">.<span class="title">url</span>("http://www.baidu.com")</span></span><br><span class="line"><span class="function">.<span class="title">post</span>(requestBody)</span></span><br><span class="line"><span class="function">.<span class="title">build</span>();</span></span><br></pre></td></tr></table></figure><p>接下来的操作就和GET请求一样了，调用execute()方法来发送请求并获取服务器返回的数据即可。</p><h2 id="实践使用OkHttp"><a href="#实践使用OkHttp" class="headerlink" title="实践使用OkHttp"></a>实践使用OkHttp</h2><ul><li>直接在之前的项目上修改即可，修改MainActivity的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Thread.sleep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView responseText;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button sendRequest=findViewById(R.id.send_request);</span><br><span class="line">        responseText=findViewById(R.id.response_text);</span><br><span class="line"></span><br><span class="line">        sendRequest.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(v.getId()==R.id.send_request)&#123;</span><br><span class="line">           sendRequestWithOkHttp();</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendRequestWithOkHttp</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    OkHttpClient client=<span class="keyword">new</span> OkHttpClient();</span><br><span class="line">                    Request request=<span class="keyword">new</span> Request.Builder()</span><br><span class="line">                            .url(<span class="string">"https://zanecode6574.com"</span>)</span><br><span class="line">                            .build();</span><br><span class="line">                    Response response=client.newCall(request).execute();</span><br><span class="line">                    String responseData=response.body().string();</span><br><span class="line">                    showResponse(responseData);</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showResponse</span><span class="params">(<span class="keyword">final</span> String response)</span></span>&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                responseText.setText(response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这个返回的字符串我发现比上面的方法多了很多空行</li></ul><p><img src="/2019/01/24/第九章：使用网络技术/OkHttp.png" alt=""></p><h1 id="解析XML格式数据"><a href="#解析XML格式数据" class="headerlink" title="解析XML格式数据"></a>解析XML格式数据</h1><p>通常情况下，每个需要访问网络的应用程序都会有一个自己的服务器，我们可以向服务器提交数据，也可以从服务器上获取数据。不过这个时候就出现了一个问题，这些数据到底要以什么样的格式在网络上传输呢？随便传递一段文本肯定是不行的，因为另一方根本就不会知道这段文本的用途是什么。因此，一般我们都会在网络上传输一些格式化后的数据，这种数据会有一定的结构规格和语义，当另一方收到数据消息之后就可以按照相同的结构规格进行解析，从而取出他想要的那部分内容。<br>在网络上传输数据时最常用的格式有两种：XML和JSON，下面我们就来一个一个地进行学习，本节首先学习一下如何解析XML格式的数据。</p><p>这里我们使用Apache服务器搭建一个简易的服务器，书上使用的是Windows，我使用的Mac,自带Apache服务,我就只写Mac的操作方式了</p><h2 id="启动Apache服务器"><a href="#启动Apache服务器" class="headerlink" title="启动Apache服务器"></a>启动Apache服务器</h2><ul><li>打开终端，输入<code>sudo -i</code>，这里我是为了避免每次都要输入sudo</li><li>输入<code>apachectl -v</code>查看apache版本</li><li>输入<code>apachectl -k start</code>启动</li><li>在浏览器访问127.0.0.1测试服务是否启动成功<br><img src="/2019/01/24/第九章：使用网络技术/ApacheStart.png" alt=""></li></ul><h3 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h3><ul><li>在当前Mac用户的文件夹下创建自己的Apache服务器文件夹，我这里命名为MyApache</li><li>进入<code>/etc/apache2</code>文件夹，这里我用finder进入的，可以自己用终端直接进入</li><li>配置httpd.conf文件<ul><li>修改<code>DocumentRoot</code>和<code>&lt;Directory ···</code>这里为自己的Apache服务器文件夹路径<br><img src="/2019/01/24/第九章：使用网络技术/ApacheSettings.png" alt=""></li><li>找到<code>Options FollowSymLinks Multiviews</code>,修改为<code>Options Indexes FollowSymLinks Multiviews</code></li><li>把<code>LoadModule php7_module libexec/apache2/libphp7.so</code>前面的<code>#</code>去掉</li></ul></li><li>回到etc目录下，拷贝<code>php.ini.default</code>文件为<code>php.ini</code></li><li>重启Apache服务器，终端输入<code>apachectl -k restart</code></li><li>再次访问127.0.0.1应该是这样了<br><img src="/2019/01/24/第九章：使用网络技术/ApacheDone.png" alt=""></li></ul><h3 id="在浏览器验证XML文件"><a href="#在浏览器验证XML文件" class="headerlink" title="在浏览器验证XML文件"></a>在浏览器验证XML文件</h3><ul><li>在自己的MyApache文件夹下创建文件get_data.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">apps</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">app</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>1<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Google Maps<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">app</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">app</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>2<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Chrome<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">app</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">app</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>3<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Google Play<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">app</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">apps</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>浏览器访问<code>127.0.0.1/get_data.xml</code><br><img src="/2019/01/24/第九章：使用网络技术/XML.png" alt=""></li></ul><h2 id="Pull解析方式"><a href="#Pull解析方式" class="headerlink" title="Pull解析方式"></a>Pull解析方式</h2><p>解析XML格式的数据其实也有挺多种方式的，本节中我们学习比较常用的两种，Pull解析和SAX解析。</p><ul><li>在之前的项目基础上修改即可，修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParser;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.StringReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Thread.sleep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView responseText;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button sendRequest=findViewById(R.id.send_request);</span><br><span class="line">        responseText=findViewById(R.id.response_text);</span><br><span class="line"></span><br><span class="line">        sendRequest.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(v.getId()==R.id.send_request)&#123;</span><br><span class="line">           sendRequestWithOkHttp();</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sendRequestWithOkHttp</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    OkHttpClient client=<span class="keyword">new</span> OkHttpClient();</span><br><span class="line">                    Request request=<span class="keyword">new</span> Request.Builder()</span><br><span class="line">                            .url(<span class="string">"http://10.0.2.2/get_data.xml"</span>)</span><br><span class="line">                            .build();</span><br><span class="line">                    Response response=client.newCall(request).execute();</span><br><span class="line">                    String responseData=response.body().string();</span><br><span class="line">                    parseXMLWithPull(responseData);</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showResponse</span><span class="params">(<span class="keyword">final</span> String response)</span></span>&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                responseText.setText(response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">parseXMLWithPull</span><span class="params">(String xmlData)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            XmlPullParserFactory factory=XmlPullParserFactory.newInstance();</span><br><span class="line">            XmlPullParser xmlPullParser=factory.newPullParser();</span><br><span class="line">            xmlPullParser.setInput(<span class="keyword">new</span> StringReader(xmlData));</span><br><span class="line">            <span class="keyword">int</span> eventType=xmlPullParser.getEventType();</span><br><span class="line"></span><br><span class="line">            String id=<span class="string">""</span>;</span><br><span class="line">            String name=<span class="string">""</span>;</span><br><span class="line">            String version=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(eventType!=XmlPullParser.END_DOCUMENT)&#123;</span><br><span class="line">                String nodeName=xmlPullParser.getName();</span><br><span class="line">                <span class="keyword">switch</span>(eventType)&#123;</span><br><span class="line">                    <span class="comment">//开始解析某个节点</span></span><br><span class="line">                    <span class="keyword">case</span> XmlPullParser.START_TAG:&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">"id"</span>.equals(nodeName))&#123;</span><br><span class="line">                            <span class="comment">//xmlPullParser.nextText()；</span></span><br><span class="line">                            <span class="comment">//如果当前事件是START_TAG，则如果下一个元素是文本，则返回元素内容；如果下一个事件是END_TAG，则返回空字符串，否则抛出异常。成功调用此函数后，解析器将定位在END_TAG上。</span></span><br><span class="line">                            id=xmlPullParser.nextText();</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"name"</span>.equals(nodeName))&#123;</span><br><span class="line">                            name=xmlPullParser.nextText();</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"version"</span>.equals(nodeName))&#123;</span><br><span class="line">                            version=xmlPullParser.nextText();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//完成解析某个节点</span></span><br><span class="line">                    <span class="keyword">case</span> XmlPullParser.END_TAG:&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">"app"</span>.equals(nodeName))&#123;</span><br><span class="line">                            Log.d(<span class="string">"MainActivity"</span>, <span class="string">"Id是:"</span>+id+<span class="string">" "</span>+<span class="string">"名字是:"</span>+name+<span class="string">" "</span>+<span class="string">"版本:"</span>+version);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//xmlPullParser.next()；</span></span><br><span class="line">                <span class="comment">//获取下一个解析事件。</span></span><br><span class="line">                <span class="comment">//空元素(如)将报告两个单独的事件:START_TAG, END_TAG -必须保留空元素对的解析等价性。</span></span><br><span class="line">                <span class="comment">//当在END_TAG调用next()时，要两次才是START_TAG。</span></span><br><span class="line">                eventType=xmlPullParser.next();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>首先是将HTTP请求的地址改成了<a href="http://10.0.2.2/get_data.xml，10.0.2.2对于模拟器来说就是电脑本机的IP地址。在得到了服务器返回的数据后，我们并不再直接将其展示，而是调用了parseXMLWithPull()方法来解析服务器返回的数据。" target="_blank" rel="noopener">http://10.0.2.2/get_data.xml，10.0.2.2对于模拟器来说就是电脑本机的IP地址。在得到了服务器返回的数据后，我们并不再直接将其展示，而是调用了parseXMLWithPull()方法来解析服务器返回的数据。</a></li><li>parseXMLWithPull()方法中的代码:这里首先要获取到一个XmlPullParserFactory的实例，并借助这个实例得到XmlPullParser对象，然后调用XmlPullParser的setInput()方法将服务器返回的XML数据设置进去就可以开始解析了。解析的过程也非常简单，通过getEventType()可以得到当前的解析事件，然后在一个while循环中不断地进行解析，如果当前的解析事件不等于XmlPullParser.END_DOCUMENT，说明解析工作还没完成，调用next()方法后可以获取下一个解析事件。</li><li>在while循环中，我们通过getName()方法得到当前节点的名字，如果发现节点名等于id、name或version，就调用nextText()方法来获取节点内具体的内容，每当解析完一个app节点后就将获取到的内容打印出来。</li></ul><p><img src="/2019/01/24/第九章：使用网络技术/XMLTest.png" alt=""></p><h2 id="SAX解析方式"><a href="#SAX解析方式" class="headerlink" title="SAX解析方式"></a>SAX解析方式</h2><p>Pull解析方式虽然非常好用，但它并不是我们唯一的选择。SAX解析也是一种特别常用的XML解析方式，虽然它的用法比Pull解析要复杂一些，但在语义方面会更加清楚。</p><ul><li>通常情况下会新建一个类继承自DefaultHandler,并重写父类的五个方法</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">public</span> <span class="selector-tag">class</span> <span class="selector-tag">MyHandler</span> <span class="selector-tag">extends</span> <span class="selector-tag">DefaultHandler</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void startDocument() throws SAXException &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void startElement(String uri, String localName, String qName, Attributes</span><br><span class="line">attributes) throws SAXException &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void characters(char[] ch, int start, int length) throws SAXException &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void endElement(String uri, String localName, String qName) throws</span><br><span class="line">SAXException &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void endDocument() throws SAXException &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>startDocument()方法会在开始XML解析的时候调用</li><li>startElement()方法会在开始解析某个节点的时候调用</li><li>characters()方法会在获取节点中内容的时候调用</li><li>endElement()方法会在完成解析某个节点的时候调用</li><li>endDocument()方法会在完成整个XML解析的时候调用</li><li>其中，startElement()、characters()和endElement()这3个方法是有参数的，从XML中解析出的数据就会以参数的形式传入到这些方法中。需要注意的是，在获取节点中的内容时，characters()方法可能会被调用多次，一些换行符也被当作内容解析出来，我们需要针对这种情况在代码中做好控制</li></ul><ul><li>新建类ContentHandler继承自DefaultHandler</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.xml.sax.Attributes;</span><br><span class="line"><span class="keyword">import</span> org.xml.sax.SAXException;</span><br><span class="line"><span class="keyword">import</span> org.xml.sax.helpers.DefaultHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContentHandler</span> <span class="keyword">extends</span> <span class="title">DefaultHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String nodeName;</span><br><span class="line">    <span class="keyword">private</span> StringBuilder id;</span><br><span class="line">    <span class="keyword">private</span> StringBuilder name;</span><br><span class="line">    <span class="keyword">private</span> StringBuilder version;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startDocument</span><span class="params">()</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        id=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">        name=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">        version=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startElement</span><span class="params">(String uri, String localName, String qName, Attributes attributes)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="comment">//记录当前节点名</span></span><br><span class="line">        nodeName=localName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">characters</span><span class="params">(<span class="keyword">char</span>[] ch, <span class="keyword">int</span> start, <span class="keyword">int</span> length)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="comment">//根据节点名字判断将内容添加到哪一个StringBuilder中</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"id"</span>.equals(nodeName))&#123;</span><br><span class="line">            id.append(ch,start,length);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"name"</span>.equals(nodeName))&#123;</span><br><span class="line">            name.append(ch,start,length);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"version"</span>.equals(nodeName))&#123;</span><br><span class="line">            version.append(ch,start,length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endElement</span><span class="params">(String uri, String localName, String qName)</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"app"</span>.equals(localName))&#123;</span><br><span class="line">            Log.d(<span class="string">"ContentHandler"</span>, <span class="string">"Id:"</span>+id.toString().trim()+<span class="string">" "</span>+<span class="string">"名字:"</span>+name.toString().trim()+<span class="string">" "</span>+<span class="string">"版本:"</span>+version.toString().trim());</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//最后要将StringBuilder清空</span></span><br><span class="line">            id.setLength(<span class="number">0</span>);</span><br><span class="line">            name.setLength(<span class="number">0</span>);</span><br><span class="line">            version.setLength(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endDocument</span><span class="params">()</span> <span class="keyword">throws</span> SAXException </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.endDocument();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们首先给id、name和version节点分别定义了一个StringBuilder对象，并在startDocument()方法里对它们进行了初始化。每当开始解析某个节点的时候，startElement()方法就会得到调用，其中localName参数记录着当前节点的名字，这里我们把它记录下来。接着在解析节点中具体内容的时候就会调用characters()方法，我们会根据当前的节点名进行判断，将解析出的内容添加到哪一个StringBuilder对象中。最后在endElement()方法中进行判断，如果app节点已经解析完成，就打印出id、name和version的内容。需要注意的是，目前id、name和version中都可能是包括回车或换行符的，因此在打印之前我们还需要调用一下trim()方法，并且打印完成后还要将StringBuilder的内容清空掉，不然的话会影响下一次内容的读取。</p><ul><li>修改MainActivity代码</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.xml.sax.InputSource;</span><br><span class="line"><span class="keyword">import</span> org.xml.sax.XMLReader;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParser;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.StringReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.SAXParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Thread.sleep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span> <span class="type">AppCompatActivity</span></span> <span class="keyword"><span class="keyword">implements</span> <span class="type">View</span></span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView responseText;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button sendRequest=findViewById(R.id.send_request);</span><br><span class="line">        responseText=findViewById(R.id.response_text);</span><br><span class="line"></span><br><span class="line">        sendRequest.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> void onClick(View v) &#123;</span><br><span class="line">       <span class="keyword">if</span>(v.getId()==R.id.send_request)&#123;</span><br><span class="line">           sendRequestWithOkHttp();</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void sendRequestWithOkHttp()&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="type">Thread</span>(<span class="keyword">new</span> <span class="type">Runnable</span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void run() &#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    OkHttpClient client=<span class="keyword">new</span> <span class="type">OkHttpClient</span>();</span><br><span class="line">                    Request request=<span class="keyword">new</span> <span class="type">Request</span>.Builder()</span><br><span class="line">                            .url(<span class="string">"http://10.0.2.2/get_data.xml"</span>)</span><br><span class="line">                            .build();</span><br><span class="line">                    Response response=client.<span class="keyword">new</span><span class="type">Call</span>(request).execute();</span><br><span class="line">                    <span class="keyword">String</span> responseData=response.body().string();</span><br><span class="line">                    parseXMLWithSAX(responseData);</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void showResponse(final <span class="keyword">String</span> response)&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> <span class="type">Runnable</span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void run() &#123;</span><br><span class="line">                responseText.setText(response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void parseXMLWithPull(<span class="keyword">String</span> xmlData)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            XmlPullParserFactory factory=XmlPullParserFactory.<span class="keyword">new</span><span class="type">Instance</span>();</span><br><span class="line">            XmlPullParser xmlPullParser=factory.<span class="keyword">new</span><span class="type">PullParser</span>();</span><br><span class="line">            xmlPullParser.setInput(<span class="keyword">new</span> <span class="type">StringReader</span>(xmlData));</span><br><span class="line">            int eventType=xmlPullParser.getEventType();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">String</span> id=<span class="string">""</span>;</span><br><span class="line">            <span class="keyword">String</span> name=<span class="string">""</span>;</span><br><span class="line">            <span class="keyword">String</span> version=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(eventType!=XmlPullParser.END_DOCUMENT)&#123;</span><br><span class="line">                <span class="keyword">String</span> nodeName=xmlPullParser.getName();</span><br><span class="line">                <span class="keyword">switch</span>(eventType)&#123;</span><br><span class="line">                    <span class="comment">//开始解析某个节点</span></span><br><span class="line">                    <span class="keyword">case</span> XmlPullParser.START_TAG:<span class="type"></span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">"id"</span>.equals(nodeName))&#123;</span><br><span class="line">                            <span class="comment">//xmlPullParser.nextText()；</span></span><br><span class="line">                            <span class="comment">//如果当前事件是START_TAG，则如果下一个元素是文本，则返回元素内容；如果下一个事件是END_TAG，则返回空字符串，否则抛出异常。成功调用此函数后，解析器将定位在END_TAG上。</span></span><br><span class="line">                            id=xmlPullParser.nextText();</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"name"</span>.equals(nodeName))&#123;</span><br><span class="line">                            name=xmlPullParser.nextText();</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"version"</span>.equals(nodeName))&#123;</span><br><span class="line">                            version=xmlPullParser.nextText();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//完成解析某个节点</span></span><br><span class="line">                    <span class="keyword">case</span> XmlPullParser.END_TAG:<span class="type"></span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">"app"</span>.equals(nodeName))&#123;</span><br><span class="line">                            Log.d(<span class="string">"MainActivity"</span>, <span class="string">"Id是:"</span>+id+<span class="string">" "</span>+<span class="string">"名字是:"</span>+name+<span class="string">" "</span>+<span class="string">"版本:"</span>+version);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">default</span>:<span class="type"></span></span><br><span class="line"><span class="type">                        break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//xmlPullParser.next()；</span></span><br><span class="line">                <span class="comment">//获取下一个解析事件。</span></span><br><span class="line">                <span class="comment">//空元素(如)将报告两个单独的事件:START_TAG, END_TAG -必须保留空元素对的解析等价性。</span></span><br><span class="line">                <span class="comment">//当在END_TAG调用next()时，要两次才是START_TAG。</span></span><br><span class="line">                eventType=xmlPullParser.next();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void parseXMLWithSAX(<span class="keyword">String</span> xmlData)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            SAXParserFactory factory=SAXParserFactory.<span class="keyword">new</span><span class="type">Instance</span>();</span><br><span class="line">            XMLReader xmlReader=factory.<span class="keyword">new</span><span class="type">SAXParser</span>().getXMLReader();</span><br><span class="line">            ContentHandler handler=<span class="keyword">new</span> <span class="type">ContentHandler</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将ContentHandler中的实例设置到XMLReader中</span></span><br><span class="line">            xmlReader.setContentHandler(handler);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//开始解析</span></span><br><span class="line">            xmlReader.parse(<span class="keyword">new</span> <span class="type">InputSource</span>(<span class="keyword">new</span> <span class="type">StringReader</span>(xmlData)));</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到了服务器返回的数据后，我们这次去调用parseXMLWithSAX()方法来解析XML数据。parseXMLWithSAX()方法中先是创建了一个SAXParserFactory的对象，然后再获取到XMLReader对象，接着将我们编写的ContentHandler的实例设置到XMLReader中，最后调用parse()方法开始执行解析就好了。</p><h1 id="解析JSON格式数据"><a href="#解析JSON格式数据" class="headerlink" title="解析JSON格式数据"></a>解析JSON格式数据</h1><p>JSON的主要优势在于它的体积更小，在网络上传输的时候可以更省流量。但缺点在于，它的语义性较差，看起来不如XML直观。</p><ul><li>在自己的Apache服务器根目录创建一个get_data.json文件</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[&#123;<span class="attr">"id"</span>:<span class="string">"5"</span>,<span class="attr">"version"</span>:<span class="string">"5.5"</span>,<span class="attr">"name"</span>:<span class="string">"Clash of Clans"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"id"</span>:<span class="string">"6"</span>,<span class="attr">"version"</span>:<span class="string">"7.0"</span>,<span class="attr">"name"</span>:<span class="string">"Boom Beach"</span>&#125;,</span><br><span class="line">&#123;<span class="attr">"id"</span>:<span class="string">"7"</span>,<span class="attr">"version"</span>:<span class="string">"3.5"</span>,<span class="attr">"name"</span>:<span class="string">"Clash Royale"</span>&#125;]</span><br></pre></td></tr></table></figure><h2 id="使用JSONObject"><a href="#使用JSONObject" class="headerlink" title="使用JSONObject"></a>使用JSONObject</h2><p>解析JSON数据也有很多种方法，可以使用官方提供的JSONObject，也可以使用谷歌的开源库GSON。另外，一些第三方的开源库如Jackson、FastJSON等也非常不错。</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONArray;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.xml.sax.InputSource;</span><br><span class="line"><span class="keyword">import</span> org.xml.sax.XMLReader;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParser;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.StringReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.SAXParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Thread.sleep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span> <span class="type">AppCompatActivity</span></span> <span class="keyword"><span class="keyword">implements</span> <span class="type">View</span></span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView responseText;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button sendRequest=findViewById(R.id.send_request);</span><br><span class="line">        responseText=findViewById(R.id.response_text);</span><br><span class="line"></span><br><span class="line">        sendRequest.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> void onClick(View v) &#123;</span><br><span class="line">       <span class="keyword">if</span>(v.getId()==R.id.send_request)&#123;</span><br><span class="line">           sendRequestWithOkHttp();</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void sendRequestWithOkHttp()&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="type">Thread</span>(<span class="keyword">new</span> <span class="type">Runnable</span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void run() &#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    OkHttpClient client=<span class="keyword">new</span> <span class="type">OkHttpClient</span>();</span><br><span class="line">                    Request request=<span class="keyword">new</span> <span class="type">Request</span>.Builder()</span><br><span class="line">                            .url(<span class="string">"http://10.0.2.2/get_data.json"</span>)</span><br><span class="line">                            .build();</span><br><span class="line">                    Response response=client.<span class="keyword">new</span><span class="type">Call</span>(request).execute();</span><br><span class="line">                    <span class="keyword">String</span> responseData=response.body().string();</span><br><span class="line">                    <span class="comment">//parseXMLWithSAX(responseData);</span></span><br><span class="line"></span><br><span class="line">                    parseJSONWithJSONObject(responseData);</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void showResponse(final <span class="keyword">String</span> response)&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> <span class="type">Runnable</span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void run() &#123;</span><br><span class="line">                responseText.setText(response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void parseXMLWithPull(<span class="keyword">String</span> xmlData)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            XmlPullParserFactory factory=XmlPullParserFactory.<span class="keyword">new</span><span class="type">Instance</span>();</span><br><span class="line">            XmlPullParser xmlPullParser=factory.<span class="keyword">new</span><span class="type">PullParser</span>();</span><br><span class="line">            xmlPullParser.setInput(<span class="keyword">new</span> <span class="type">StringReader</span>(xmlData));</span><br><span class="line">            int eventType=xmlPullParser.getEventType();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">String</span> id=<span class="string">""</span>;</span><br><span class="line">            <span class="keyword">String</span> name=<span class="string">""</span>;</span><br><span class="line">            <span class="keyword">String</span> version=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(eventType!=XmlPullParser.END_DOCUMENT)&#123;</span><br><span class="line">                <span class="keyword">String</span> nodeName=xmlPullParser.getName();</span><br><span class="line">                <span class="keyword">switch</span>(eventType)&#123;</span><br><span class="line">                    <span class="comment">//开始解析某个节点</span></span><br><span class="line">                    <span class="keyword">case</span> XmlPullParser.START_TAG:<span class="type"></span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">"id"</span>.equals(nodeName))&#123;</span><br><span class="line">                            <span class="comment">//xmlPullParser.nextText()；</span></span><br><span class="line">                            <span class="comment">//如果当前事件是START_TAG，则如果下一个元素是文本，则返回元素内容；如果下一个事件是END_TAG，则返回空字符串，否则抛出异常。成功调用此函数后，解析器将定位在END_TAG上。</span></span><br><span class="line">                            id=xmlPullParser.nextText();</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"name"</span>.equals(nodeName))&#123;</span><br><span class="line">                            name=xmlPullParser.nextText();</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"version"</span>.equals(nodeName))&#123;</span><br><span class="line">                            version=xmlPullParser.nextText();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//完成解析某个节点</span></span><br><span class="line">                    <span class="keyword">case</span> XmlPullParser.END_TAG:<span class="type"></span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">"app"</span>.equals(nodeName))&#123;</span><br><span class="line">                            Log.d(<span class="string">"MainActivity"</span>, <span class="string">"Id是:"</span>+id+<span class="string">" "</span>+<span class="string">"名字是:"</span>+name+<span class="string">" "</span>+<span class="string">"版本:"</span>+version);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">default</span>:<span class="type"></span></span><br><span class="line"><span class="type">                        break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//xmlPullParser.next()；</span></span><br><span class="line">                <span class="comment">//获取下一个解析事件。</span></span><br><span class="line">                <span class="comment">//空元素(如)将报告两个单独的事件:START_TAG, END_TAG -必须保留空元素对的解析等价性。</span></span><br><span class="line">                <span class="comment">//当在END_TAG调用next()时，要两次才是START_TAG。</span></span><br><span class="line">                eventType=xmlPullParser.next();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void parseXMLWithSAX(<span class="keyword">String</span> xmlData)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            SAXParserFactory factory=SAXParserFactory.<span class="keyword">new</span><span class="type">Instance</span>();</span><br><span class="line">            XMLReader xmlReader=factory.<span class="keyword">new</span><span class="type">SAXParser</span>().getXMLReader();</span><br><span class="line">            ContentHandler handler=<span class="keyword">new</span> <span class="type">ContentHandler</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将ContentHandler中的实例设置到XMLReader中</span></span><br><span class="line">            xmlReader.setContentHandler(handler);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//开始解析</span></span><br><span class="line">            xmlReader.parse(<span class="keyword">new</span> <span class="type">InputSource</span>(<span class="keyword">new</span> <span class="type">StringReader</span>(xmlData)));</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void parseJSONWithJSONObject(<span class="keyword">String</span> jsonData)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            JSONArray jsonArray=<span class="keyword">new</span> <span class="type">JSONArray</span>(jsonData);</span><br><span class="line">            <span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;jsonArray.length();i++)&#123;</span><br><span class="line">                JSONObject jsonObject=jsonArray.getJSONObject(i);</span><br><span class="line">                <span class="keyword">String</span> id=jsonObject.getString(<span class="string">"id"</span>);</span><br><span class="line">                <span class="keyword">String</span> name=jsonObject.getString(<span class="string">"name"</span>);</span><br><span class="line">                <span class="keyword">String</span> version=jsonObject.getString(<span class="string">"version"</span>);</span><br><span class="line">                Log.d(<span class="string">"MainActivity"</span>, <span class="string">"Id是:"</span>+id+<span class="string">" "</span>+<span class="string">"名字是:"</span>+name+<span class="string">" "</span>+<span class="string">"版本:"</span>+version);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在得到了服务器返回的数据后调用parseJSONWithJSONObject()方法来解析数据。可以看到，解析JSON的代码真的非常简单，由于我们在服务器中定义的是一个JSON数组，因此这里首先是将服务器返回的数据传入到了一个JSONArray对象中。然后循环遍历这个JSONArray，从中取出的每一个元素都是一个JSONObject对象，每个JSONObject对象中又会包含id、name和version这些数据。接下来只需要调用getString()方法将这些数据取出，并打印出来即可。</p><p><strong>个人感觉这个要简单得多，由于初学，暂时不知道两种方法实际运用的优缺点</strong></p><h2 id="使用GSON"><a href="#使用GSON" class="headerlink" title="使用GSON"></a>使用GSON</h2><h3 id="GSON简介"><a href="#GSON简介" class="headerlink" title="GSON简介"></a>GSON简介</h3><p>谷歌提供的GSON开源库可以让解析JSON数据的工作简单到让你不敢想象的地步</p><p>项目地址:<a href="https://github.com/google/gson" target="_blank" rel="noopener">https://github.com/google/gson</a></p><ul><li>添加依赖库</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">implementation</span> <span class="string">'com.google.code.gson:gson:2.8.5'</span></span><br></pre></td></tr></table></figure><p>书上最新的是2.7，这里我去看到是2.8.5</p><ul><li>它主要就是可以将一段JSON格式的字符串自动映射成一个对象，从而不需要我们再手动去编写代码进行解析了。比如说一段JSON格式的数据如下所示：<code>{&quot;name&quot;:&quot;Tom&quot;,&quot;age&quot;:20}</code>,那我们就可以定义一个Person类，并加入name和age这两个字段，然后只需简单地调用如下代码就可以将JSON数据自动解析成一个Person对象了：</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Gson gson</span> = new Gson();</span><br><span class="line"><span class="attribute">Person person</span> = gson.fromJson(jsonData, Person.class);</span><br></pre></td></tr></table></figure><ul><li>如果需要解析的是一段JSON数组会稍微麻烦一点，我们需要借助TypeToken将期望解析成的数据类型传入到fromJson()方法中，如下所示：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;Person&gt; people = gson.fromJson(jsonData, <span class="keyword">new</span> TypeToken&lt;<span class="built_in">List</span>&lt;Person&gt;&gt;() &#123;&#125;.getType());</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li>新建一个App类</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class App &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> version;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> getId() &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setId(<span class="keyword">String</span> id) &#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setName(<span class="keyword">String</span> name) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> getVersion() &#123;</span><br><span class="line">        <span class="keyword">return</span> version;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setVersion(<span class="keyword">String</span> version) &#123;</span><br><span class="line">        <span class="keyword">this</span>.version = version;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改MainActivity的代码</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.reflect.TypeToken;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONArray;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.xml.sax.InputSource;</span><br><span class="line"><span class="keyword">import</span> org.xml.sax.XMLReader;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParser;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.StringReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.SAXParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> okhttp3.OkHttpClient;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Request;</span><br><span class="line"><span class="keyword">import</span> okhttp3.Response;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Thread.sleep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span> <span class="type">AppCompatActivity</span></span> <span class="keyword"><span class="keyword">implements</span> <span class="type">View</span></span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView responseText;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button sendRequest=findViewById(R.id.send_request);</span><br><span class="line">        responseText=findViewById(R.id.response_text);</span><br><span class="line"></span><br><span class="line">        sendRequest.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> void onClick(View v) &#123;</span><br><span class="line">       <span class="keyword">if</span>(v.getId()==R.id.send_request)&#123;</span><br><span class="line">           sendRequestWithOkHttp();</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void sendRequestWithOkHttp()&#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="type">Thread</span>(<span class="keyword">new</span> <span class="type">Runnable</span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void run() &#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    OkHttpClient client=<span class="keyword">new</span> <span class="type">OkHttpClient</span>();</span><br><span class="line">                    Request request=<span class="keyword">new</span> <span class="type">Request</span>.Builder()</span><br><span class="line">                            .url(<span class="string">"http://10.0.2.2/get_data.json"</span>)</span><br><span class="line">                            .build();</span><br><span class="line">                    Response response=client.<span class="keyword">new</span><span class="type">Call</span>(request).execute();</span><br><span class="line">                    <span class="keyword">String</span> responseData=response.body().string();</span><br><span class="line">                    <span class="comment">//parseXMLWithSAX(responseData);</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">//parseJSONWithJSONObject(responseData);</span></span><br><span class="line">                    parseJSONWithGSON(responseData);</span><br><span class="line">                &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void showResponse(final <span class="keyword">String</span> response)&#123;</span><br><span class="line">        runOnUiThread(<span class="keyword">new</span> <span class="type">Runnable</span>() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void run() &#123;</span><br><span class="line">                responseText.setText(response);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void parseXMLWithPull(<span class="keyword">String</span> xmlData)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            XmlPullParserFactory factory=XmlPullParserFactory.<span class="keyword">new</span><span class="type">Instance</span>();</span><br><span class="line">            XmlPullParser xmlPullParser=factory.<span class="keyword">new</span><span class="type">PullParser</span>();</span><br><span class="line">            xmlPullParser.setInput(<span class="keyword">new</span> <span class="type">StringReader</span>(xmlData));</span><br><span class="line">            int eventType=xmlPullParser.getEventType();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">String</span> id=<span class="string">""</span>;</span><br><span class="line">            <span class="keyword">String</span> name=<span class="string">""</span>;</span><br><span class="line">            <span class="keyword">String</span> version=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(eventType!=XmlPullParser.END_DOCUMENT)&#123;</span><br><span class="line">                <span class="keyword">String</span> nodeName=xmlPullParser.getName();</span><br><span class="line">                <span class="keyword">switch</span>(eventType)&#123;</span><br><span class="line">                    <span class="comment">//开始解析某个节点</span></span><br><span class="line">                    <span class="keyword">case</span> XmlPullParser.START_TAG:<span class="type"></span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">"id"</span>.equals(nodeName))&#123;</span><br><span class="line">                            <span class="comment">//xmlPullParser.nextText()；</span></span><br><span class="line">                            <span class="comment">//如果当前事件是START_TAG，则如果下一个元素是文本，则返回元素内容；如果下一个事件是END_TAG，则返回空字符串，否则抛出异常。成功调用此函数后，解析器将定位在END_TAG上。</span></span><br><span class="line">                            id=xmlPullParser.nextText();</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"name"</span>.equals(nodeName))&#123;</span><br><span class="line">                            name=xmlPullParser.nextText();</span><br><span class="line">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"version"</span>.equals(nodeName))&#123;</span><br><span class="line">                            version=xmlPullParser.nextText();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//完成解析某个节点</span></span><br><span class="line">                    <span class="keyword">case</span> XmlPullParser.END_TAG:<span class="type"></span>&#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="string">"app"</span>.equals(nodeName))&#123;</span><br><span class="line">                            Log.d(<span class="string">"MainActivity"</span>, <span class="string">"Id是:"</span>+id+<span class="string">" "</span>+<span class="string">"名字是:"</span>+name+<span class="string">" "</span>+<span class="string">"版本:"</span>+version);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">default</span>:<span class="type"></span></span><br><span class="line"><span class="type">                        break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//xmlPullParser.next()；</span></span><br><span class="line">                <span class="comment">//获取下一个解析事件。</span></span><br><span class="line">                <span class="comment">//空元素(如)将报告两个单独的事件:START_TAG, END_TAG -必须保留空元素对的解析等价性。</span></span><br><span class="line">                <span class="comment">//当在END_TAG调用next()时，要两次才是START_TAG。</span></span><br><span class="line">                eventType=xmlPullParser.next();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void parseXMLWithSAX(<span class="keyword">String</span> xmlData)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            SAXParserFactory factory=SAXParserFactory.<span class="keyword">new</span><span class="type">Instance</span>();</span><br><span class="line">            XMLReader xmlReader=factory.<span class="keyword">new</span><span class="type">SAXParser</span>().getXMLReader();</span><br><span class="line">            ContentHandler handler=<span class="keyword">new</span> <span class="type">ContentHandler</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//将ContentHandler中的实例设置到XMLReader中</span></span><br><span class="line">            xmlReader.setContentHandler(handler);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//开始解析</span></span><br><span class="line">            xmlReader.parse(<span class="keyword">new</span> <span class="type">InputSource</span>(<span class="keyword">new</span> <span class="type">StringReader</span>(xmlData)));</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void parseJSONWithJSONObject(<span class="keyword">String</span> jsonData)&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            JSONArray jsonArray=<span class="keyword">new</span> <span class="type">JSONArray</span>(jsonData);</span><br><span class="line">            <span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;jsonArray.length();i++)&#123;</span><br><span class="line">                JSONObject jsonObject=jsonArray.getJSONObject(i);</span><br><span class="line">                <span class="keyword">String</span> id=jsonObject.getString(<span class="string">"id"</span>);</span><br><span class="line">                <span class="keyword">String</span> name=jsonObject.getString(<span class="string">"name"</span>);</span><br><span class="line">                <span class="keyword">String</span> version=jsonObject.getString(<span class="string">"version"</span>);</span><br><span class="line">                Log.d(<span class="string">"MainActivity"</span>, <span class="string">"Id是:"</span>+id+<span class="string">" "</span>+<span class="string">"名字是:"</span>+name+<span class="string">" "</span>+<span class="string">"版本:"</span>+version);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void parseJSONWithGSON(<span class="keyword">String</span> jsonData)&#123;</span><br><span class="line">        Gson gson=<span class="keyword">new</span> <span class="type">Gson</span>();</span><br><span class="line"></span><br><span class="line">        List&lt;App&gt; appList=gson.fromJson(jsonData, <span class="keyword">new</span> <span class="type">TypeToken</span>&lt;List&lt;App&gt;&gt;()&#123;&#125;.getType());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(App app:<span class="type">appList</span>)&#123;</span><br><span class="line">            Log.d(<span class="string">"MainActivity"</span>, <span class="string">"Id是:"</span>+app.getId()+<span class="string">" "</span>+<span class="string">"名字是:"</span>+app.getName()+<span class="string">" "</span>+<span class="string">"版本:"</span>+app.getVersion());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="网络编程实践"><a href="#网络编程实践" class="headerlink" title="网络编程实践"></a>网络编程实践</h1><p>一个应用程序很可能会在许多地方都使用到网络功能，而发送HTTP请求的代码基本都是相同的，如果我们每次都去编写一遍发送HTTP请求的代码，这显然是非常差劲的做法。</p><p>通常情况下我们都应该将这些通用的网络操作提取到一个公共的类里，并提供一个静态方法，当想要发起网络请求的时候，只需简单地调用一下这个方法即可。</p><h2 id="HttpURLConnection写法"><a href="#HttpURLConnection写法" class="headerlink" title="HttpURLConnection写法"></a>HttpURLConnection写法</h2><ul><li>HttpUtil类</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> sendHttpRequest(<span class="keyword">String</span> address) &#123;</span><br><span class="line">        HttpURLConnection connection = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URL url = <span class="keyword">new</span> <span class="type">URL</span>(address);</span><br><span class="line">            connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            connection.setRequestMethod(<span class="string">"GET"</span>);</span><br><span class="line">            connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">            connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">            connection.setDoInput(<span class="literal">true</span>);</span><br><span class="line">            connection.setDoOutput(<span class="literal">true</span>);</span><br><span class="line">            InputStream <span class="keyword">in</span> = connection.getInputStream();</span><br><span class="line">            BufferedReader reader = <span class="keyword">new</span> <span class="type">BufferedReader</span>(<span class="keyword">new</span> <span class="type">InputStreamReader</span>(<span class="keyword">in</span>));</span><br><span class="line">            StringBuilder response = <span class="keyword">new</span> <span class="type">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">String</span> line;</span><br><span class="line">            <span class="keyword">while</span> ((line = reader.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                response.append(line);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> response.toString();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> e.getMessage();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="literal">null</span>) &#123;</span><br><span class="line">                connection.disconnect();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>要发起HTTP请求的时候</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String<span class="built_in"> address </span>= <span class="string">"http://www.baidu.com"</span>;</span><br><span class="line">String response = HttpUtil.sendHttpRequest(address);</span><br></pre></td></tr></table></figure><ul><li><p>缺点：网络请求通常都是耗时操作，但是sendHttpRequest()方法的内部并没有开启线程，这样就有可能导致在调用sendHttpRequest()方法的时候使得主线程被阻塞住。但是如果我们在sendHttpRequest()方法中开启了一个线程来发起HTTP请求，那么服务器响应的数据是无法进行返回的，所有的耗时逻辑都是在子线程里进行的，sendHttpRequest()方法会在服务器还没来得及响应的时候就执行结束了，当然也就无法返回响应的数据了。</p></li><li><p>解决办法：使用Java回调机制</p><ul><li><p>定义一个接口，比如命名为HttpCallbackListener</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public<span class="built_in"> interface </span>HttpCallbackListener &#123;</span><br><span class="line">void onFinish(String response);</span><br><span class="line">void onError(Exception e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>onFinish()方法表示当服务器成功响应我们请求的时候调用，onError()表示当进行网络操作出现错误的时候调用。这两个方法都带有参数，onFinish()方法中的参数代表着服务器返回的数据，而onError()方法中的参数记录着错误的详细信息。    </p></li></ul></li></ul><ul><li>修改HttpUtil代码</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.networktest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.<span class="keyword">BufferedReader</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class HttpUtil &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> sendHttpRequest(<span class="keyword">final</span> <span class="keyword">String</span> address, <span class="keyword">final</span></span><br><span class="line">    HttpCallbackListener listener) &#123;</span><br><span class="line">        <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</span><br><span class="line">                HttpURLConnection connection = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    URL url = <span class="keyword">new</span> URL(address);</span><br><span class="line">                    connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">                    connection.setRequestMethod(<span class="string">"GET"</span>);</span><br><span class="line">                    connection.setConnectTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setReadTimeout(<span class="number">8000</span>);</span><br><span class="line">                    connection.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">                    connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">                    InputStream in = connection.getInputStream();</span><br><span class="line">                    <span class="keyword">BufferedReader</span> reader = <span class="keyword">new</span> <span class="keyword">BufferedReader</span>(<span class="keyword">new</span> InputStreamReader</span><br><span class="line">                            (in));</span><br><span class="line">                    StringBuilder response = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                    <span class="keyword">String</span> <span class="built_in">line</span>;</span><br><span class="line">                    <span class="keyword">while</span> ((<span class="built_in">line</span> = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        response.<span class="built_in">append</span>(<span class="built_in">line</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 回调onFinish()方法</span></span><br><span class="line">                        listener.onFinish(response.toString());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (listener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 回调onError()方法</span></span><br><span class="line">                        listener.onError(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        connection.disconnect();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> interface HttpCallbackListener &#123;</span><br><span class="line">        <span class="keyword">void</span> onFinish(<span class="keyword">String</span> response);</span><br><span class="line">        <span class="keyword">void</span> onError(Exception e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>首先给sendHttpRequest()方法添加了一个HttpCallbackListener参数，并在方法的内部开启了一个子线程，然后在子线程里去执行具体的网络操作。注意，子线程中是无法通过return语句来返回数据的，因此这里我们将服务器响应的数据传入了HttpCallbackListener的onFinish()方法中，如果出现了异常就将异常原因传入到onError()方法中。</li><li>现在sendHttpRequest()方法接收两个参数了，因此我们在调用它的时候还需要将HttpCallbackListener的实例传入，如下所示：</li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">HttpUtil</span><span class="selector-class">.sendHttpRequest</span>(address, new HttpCallbackListener() &#123;</span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void onFinish(String response) &#123;</span><br><span class="line"><span class="comment">// 在这里根据返回内容执行具体的逻辑</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">@Override</span></span><br><span class="line">public void onError(Exception e) &#123;</span><br><span class="line"><span class="comment">// 在这里对异常情况进行处理</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样的话，当服务器成功响应的时候，我们就可以在onFinish()方法里对响应数据进行处理了。类似地，如果出现了异常，就可以在onError()方法里对异常情况进行处理。如此一来，我们就巧妙地利用回调机制将响应数据成功返回给调用方了。</p><h2 id="OkHttp写法"><a href="#OkHttp写法" class="headerlink" title="OkHttp写法"></a>OkHttp写法</h2><ul><li>在HttpUtil中加入一个sendOkHttpRequest()方法</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public static void sendOkHttpRequest(String address, okhttp3.Callback callback) &#123;</span><br><span class="line">    OkHttpClient<span class="built_in"> client </span>= new OkHttpClient();</span><br><span class="line">    Request request = new Request.Builder()</span><br><span class="line">            .url(address)</span><br><span class="line">            .build();</span><br><span class="line">    client.newCall(request).enqueue(callback);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sendOkHttpRequest()方法中有一个okhttp3．Callback参数，这个是OkHttp库中自带的一个回调接口，类似于我们刚才自己编写的HttpCallbackListener。然后在client.newCall()之后没有像之前那样一直调用execute()方法，而是调用了一个enqueue()方法，并把okhttp3．Callback参数传入。相信聪明的你已经猜到了，OkHttp在enqueue()方法的内部已经帮我们开好子线程了，然后会在子线程中去执行HTTP请求，并将最终的请求结果回调到okhttp3．Callback当中。</p><ul><li>调用方法</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HttpUtil.sendOkHttpRequest(<span class="string">"http://www.baidu.com"</span>, <span class="keyword">new</span> okhttp3．Callback() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(Call call, Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">// 得到服务器返回的具体内容</span></span><br><span class="line">String responseData = response.body().string();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(Call call, IOException e)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 在这里对异常情况进行处理</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>OkHttp的接口设计得确实非常人性化，它将一些常用的功能进行了很好的封装，使得我们只需编写少量的代码就能完成较为复杂的网络操作。</p><ul><li>不管是HttpURLConnection还是OkHttp，最终的回调接口都是在子线程中运行的，因此我们不能在这里执行任何的UI操作，除非借助runOnUiThread()来进行线程转换</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android手机肯定也是可以上网的，所以作为开发者，我们就需要考虑如何利用网络来编写出更加出色的应用程序，像QQ、微博、微信等常见的应用都会大量使用网络技术。本章主要会讲述如何在手机端使用HTTP协议和服务器端进行网络交互，并对服务器返回的数据进行解析，这也是Android中最常使用到的网络技术&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="网络" scheme="https://zanecode6574.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="WebView" scheme="https://zanecode6574.github.io/tags/WebView/"/>
    
      <category term="HttpURLConnection" scheme="https://zanecode6574.github.io/tags/HttpURLConnection/"/>
    
      <category term="OkHttp" scheme="https://zanecode6574.github.io/tags/OkHttp/"/>
    
      <category term="XML" scheme="https://zanecode6574.github.io/tags/XML/"/>
    
      <category term="JSON" scheme="https://zanecode6574.github.io/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title>第八章：丰富你的程序-运用手机多媒体</title>
    <link href="https://zanecode6574.github.io/2019/01/21/%E7%AC%AC%E5%85%AB%E7%AB%A0%EF%BC%9A%E4%B8%B0%E5%AF%8C%E4%BD%A0%E7%9A%84%E7%A8%8B%E5%BA%8F-%E8%BF%90%E7%94%A8%E6%89%8B%E6%9C%BA%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
    <id>https://zanecode6574.github.io/2019/01/21/第八章：丰富你的程序-运用手机多媒体/</id>
    <published>2019-01-21T15:02:48.000Z</published>
    <updated>2019-01-24T09:24:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>这章用的是实体安卓机器，打开开发者调试选项</li><li>包含了通知的用法、调用摄像头拍照、调用相册选择照片、播放音频、播放视频</li></ul><h1 id="使用通知"><a href="#使用通知" class="headerlink" title="使用通知"></a>使用通知</h1><p>通知（Notification）是Android系统中比较有特色的一个功能，当某个应用程序希望向用户发出一些提示信息，而该应用程序又不在前台运行时，就可以借助通知来实现。发出一条通知后，手机最上方的状态栏中会显示一个通知的图标，下拉状态栏后可以看到通知的详细内容。Android的通知功能获得了大量用户的认可和喜爱，就连iOS系统也在5.0版本之后加入了类似的功能。</p><h2 id="通知的基本用法"><a href="#通知的基本用法" class="headerlink" title="通知的基本用法"></a>通知的基本用法</h2><p>通知的用法还是比较灵活的，既可以在活动里创建，也可以在广播接收器里创建，当然还可以在下一章中即将学习的服务里创建。相比于广播接收器和服务，在活动里创建通知的场景还是比较少的，因为一般只有当程序进入到后台的时候我们才需要使用通知。</p><p>通知的用法还是比较灵活的，既可以在活动里创建，也可以在广播接收器里创建，当然还可以在下一章中我们即将学习的服务里创建。相比于广播接收器和服务，在活动里创建通知的场景还是比较少的，因为一般只有当程序进入到后台的时候我们才需要使用通知。</p><a id="more"></a><ul><li>获取NotificationManager的实例</li></ul><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NotificationManager manager = (<span class="name">NotificationManager</span>)getSystemService(<span class="name">Context</span>.NOTIFICATION_SERVICE)<span class="comment">;</span></span><br></pre></td></tr></table></figure><ul><li>使用一个Builder构造器来创建Notification对象（但问题在于，几乎Android系统的每一个版本都会对通知这部分功能进行或多或少的修改，API不稳定性问题在通知上面突显得尤其严重。那么该如何解决这个问题呢？其实解决方案我们之前已经见过好几回了，就是使用support库中提供的兼容API。support-v4库中提供了一个NotificationCompat类，使用这个类的构造器来创建Notification对象，就可以保证我们的程序在所有Android系统版本上都能正常工作了）</li></ul><figure class="highlight pony"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Notification</span> notification = <span class="function"><span class="keyword">new</span> <span class="title">NotificationCompat</span>.<span class="title">Builder</span>(context).<span class="title">build</span>();</span></span><br></pre></td></tr></table></figure><ul><li>我们可以在最终的build()方法之前连缀任意多的设置方法来创建一个丰富的Notification对象，先来看一些最基本的设置</li></ul><figure class="highlight pony"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Notification</span> notification = <span class="function"><span class="keyword">new</span> <span class="title">NotificationCompat</span>.<span class="title">Builder</span>(context)</span></span><br><span class="line"><span class="function">.<span class="title">setContentTitle</span>("<span class="type">This</span> is content title")</span></span><br><span class="line"><span class="function">.<span class="title">setContentText</span>("<span class="type">This</span> is content text")</span></span><br><span class="line"><span class="function">.<span class="title">setWhen</span>(<span class="type">System</span>.currentTimeMillis())</span></span><br><span class="line"><span class="function">.<span class="title">setSmallIcon</span>(<span class="type">R</span>.drawable.small_icon)</span></span><br><span class="line"><span class="function">.<span class="title">setLargeIcon</span>(<span class="type">BitmapFactory</span>.decodeResource(getResources(),</span></span><br><span class="line"><span class="function"><span class="title">R</span>.<span class="title">drawable</span>.<span class="title">large_icon</span>))</span></span><br><span class="line"><span class="function">.<span class="title">build</span>();</span></span><br></pre></td></tr></table></figure><ul><li><p>这里一共五个设置方法</p><ul><li><code>setContentTitle()</code>方法用于指定通知的标题内容，下拉系统状态栏就可以看到这部分内容。</li><li><code>setContentText()</code>方法用于指定通知的正文内容，同样下拉系统状态栏就可以看到这部分内容。</li><li><code>setWhen()</code>方法用于指定通知被创建的时间，以毫秒为单位，当下拉系统状态栏时，这里指定的时间会显示在相应的通知上。</li><li><code>setSmallIcon()</code>方法用于设置通知的小图标，注意只能使用纯alpha图层的图片进行设置，小图标会显示在系统状态栏上。</li><li><code>setLargeIcon()</code>方法用于设置通知的大图标，当下拉系统状态栏时，就可以看到设置的大图标了。</li></ul></li><li><p>以上工作都完成之后，只需要调用NotificationManager的notify()方法就可以让通知显示出来了。notify()方法接收两个参数，第一个参数是id，要保证为每个通知所指定的id都是不同的。第二个参数则是Notification对象，这里直接将我们刚刚创建好的Notification对象传入即可。因此，显示一个通知就可以写成：<br><code>manager.notify(1, notification);</code></p></li></ul><h2 id="新建NotificationTest项目"><a href="#新建NotificationTest项目" class="headerlink" title="新建NotificationTest项目"></a>新建NotificationTest项目</h2><ul><li>添加一个发送通知的按钮</li><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button sendNotice=findViewById(R.id.send_notice);</span><br><span class="line"></span><br><span class="line">        sendNotice.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.send_notice:</span><br><span class="line">                NotificationManager manager=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line">                Notification notification=<span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>)</span><br><span class="line">                        .setContentTitle(<span class="string">"这是通知标题"</span>)</span><br><span class="line">                        .setContentText(<span class="string">"这是通知内容"</span>)</span><br><span class="line">                        .setWhen(System.currentTimeMillis())</span><br><span class="line">                        .setSmallIcon(R.mipmap.ic_launcher)</span><br><span class="line">                        .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.mipmap.ic_launcher))</span><br><span class="line">                        .build();</span><br><span class="line">                manager.notify(<span class="number">1</span>,notification);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里设置按钮点击事件的代码用的另外一种，跟之前的不一样，但是好像NotificationCompat在高版本的安卓中已经弃用了，这里留起来等学完了回来更新,书上说这种写法是通用的。</p><h2 id="给通知添加点击事件"><a href="#给通知添加点击事件" class="headerlink" title="给通知添加点击事件"></a>给通知添加点击事件</h2><p>上面创建的通知是无法点击的，要实现点击事件，涉及到新的概念：PendingIntent</p><p>PendingIntent从名字上看起来就和Intent有些类似，它们之间也确实存在着不少共同点。比如它们都可以去指明某一个“意图”，都可以用于启动活动、启动服务以及发送广播等。不同的是，Intent更加倾向于去立即执行某个动作，而PendingIntent更加倾向于在某个合适的时机去执行某个动作。所以，也可以把PendingIntent简单地理解为延迟执行的Intent。</p><p>PendingIntent的用法同样很简单，它主要提供了几个静态方法用于获取PendingIntent的实例，可以根据需求来选择是使用<code>getActivity()</code>方法、<code>getBroadcast()</code>方法，还是<code>getService()</code>方法。这几个方法所接收的参数都是相同的，第一个参数依旧是Context，不用多做解释。第二个参数一般用不到，通常都是传入0即可。第三个参数是一个Intent对象，我们可以通过这个对象构建出PendingIntent的“意图”。第四个参数用于确定PendingIntent的行为，有FLAG_ONE_SHOT、FLAG_NO_CREATE、FLAG_CANCEL_CURRENT和FLAG_UPDATE_CURRENT这4种值可选，每种值的具体含义可以查看文档，通常情况下这个参数传入0就可以了。</p><p>对PendingIntent有了一定的了解后，我们再回过头来看一下NotificationCompat.Builder。这个构造器还可以再连缀一个setContentIntent()方法，接收的参数正是一个PendingIntent对象。因此，这里就可以通过PendingIntent构建出一个延迟执行的“意图”，当用户点击这条通知时就会执行相应的逻辑。</p><h3 id="添加活动NotificationActivity"><a href="#添加活动NotificationActivity" class="headerlink" title="添加活动NotificationActivity"></a>添加活动NotificationActivity</h3><ul><li>修改activity_notification.xml的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".NotificationActivity"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"24sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"这是通知的布局!"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="title">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> sendNotice=findViewById(<span class="type">R</span>.id.send_notice);</span><br><span class="line"></span><br><span class="line">        sendNotice.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">        switch(v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="type">R</span>.id.send_notice:</span><br><span class="line">                <span class="type">Intent</span> intent=<span class="keyword">new</span> <span class="type">Intent</span>(<span class="keyword">this</span>,<span class="type">NotificationActivity</span>.<span class="keyword">class</span>);</span><br><span class="line">                <span class="type">PendingIntent</span> pi=<span class="type">PendingIntent</span>.getActivity(<span class="keyword">this</span>,<span class="number">0</span>,intent,<span class="number">0</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="type">NotificationManager</span> manager=(<span class="type">NotificationManager</span>)getSystemService(<span class="type">NOTIFICATION_SERVICE</span>);</span><br><span class="line">                <span class="type">Notification</span> notification=<span class="keyword">new</span> <span class="type">NotificationCompat</span>.<span class="type">Builder</span>(<span class="keyword">this</span>)</span><br><span class="line">                        .setContentTitle(<span class="string">"这是通知标题"</span>)</span><br><span class="line">                        .setContentText(<span class="string">"这是通知内容"</span>)</span><br><span class="line">                        .setWhen(<span class="type">System</span>.currentTimeMillis())</span><br><span class="line">                        .setSmallIcon(<span class="type">R</span>.mipmap.ic_launcher)</span><br><span class="line">                        .setLargeIcon(<span class="type">BitmapFactory</span>.decodeResource(getResources(),<span class="type">R</span>.mipmap.ic_launcher))</span><br><span class="line">                        .setContentIntent(pi)</span><br><span class="line">                        .build();</span><br><span class="line">                manager.notify(<span class="number">1</span>,notification);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先是使用Intent表达出我们想要启动NotificationActivity的“意图”，然后将构建好的Intent对象传入到PendingIntent的getActivity()方法里，以得到PendingIntent的实例，接着在NotificationCompat.Builder中调用setContentIntent()方法，把它作为参数传入即可。</p><ul><li><p>此时，点击通知就会启动刚才创建的活动，但是通知不会消失，解决方法</p><ul><li><p>方法1:</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Notification notification = <span class="keyword">new</span> <span class="type">NotificationCompat</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">...</span><br><span class="line">.setAutoCancel(<span class="literal">true</span>)</span><br><span class="line">.build();</span><br></pre></td></tr></table></figure></li><li><p>方法2    :</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">NotificationActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(<span class="type">R</span>.layout.notification_layout);</span><br><span class="line"><span class="type">NotificationManager</span> manager = (<span class="type">NotificationManager</span>) getSystemService(<span class="type">NOTIFICATION_SERVICE</span>);</span><br><span class="line">manager.cancel(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这种方法中，calcel()方法中传入1意思是这条通知的id，是我们发送通知的时候传入的，取消哪条就传入哪条就行了</p></li></ul></li></ul><h2 id="通知进阶技巧"><a href="#通知进阶技巧" class="headerlink" title="通知进阶技巧"></a>通知进阶技巧</h2><h3 id="让通知播放音乐"><a href="#让通知播放音乐" class="headerlink" title="让通知播放音乐"></a>让通知播放音乐</h3><ul><li>setSound()方法:setSound()方法接收一个Uri参数，所以在指定音频文件的时候还需要先获取到音频文件对应的URI。比如说，每个手机的/system/media/audio/ringtones目录下都有很多的音频文件，我们可以从中随便选一个音频文件.</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Notification notification = <span class="keyword">new</span> <span class="type">NotificationCompat</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">...</span><br><span class="line">.setSound(Uri.fromFile(<span class="keyword">new</span> <span class="type">File</span>(<span class="string">"/system/media/audio/ringtones/Luna.ogg"</span>)))</span><br><span class="line">.build();</span><br></pre></td></tr></table></figure><h3 id="让通知控制手机震动"><a href="#让通知控制手机震动" class="headerlink" title="让通知控制手机震动"></a>让通知控制手机震动</h3><ul><li>setVibrate()方法:使用的是vibrate这个属性。它是一个长整型的数组，用于设置手机静止和振动的时长，以毫秒为单位。下标为0的值表示手机静止的时长，下标为1的值表示手机振动的时长，下标为2的值又表示手机静止的时长，以此类推。</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Notification notification = <span class="keyword">new</span> <span class="type">NotificationCompat</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">...</span><br><span class="line">.setVibrate(<span class="keyword">new</span> <span class="type">long</span>[] &#123;<span class="number">0</span>, <span class="number">1000</span>, <span class="number">1000</span>, <span class="number">1000</span> &#125;)</span><br><span class="line">.build();</span><br></pre></td></tr></table></figure><p>手机在通知到来的时候立刻振动1秒，然后静止1秒，再振动1秒</p><p>让手机震动得申明权限<code>&lt;uses-permission android:name=&quot;android.permission.VIBRATE&quot; /&gt;</code></p><h3 id="让通知控制LED灯闪烁"><a href="#让通知控制LED灯闪烁" class="headerlink" title="让通知控制LED灯闪烁"></a>让通知控制LED灯闪烁</h3><ul><li>setLights()方法:控制手机LED灯的显示，setLights()方法接收3个参数，第一个参数用于指定LED灯的颜色，第二个参数用于指定LED灯亮起的时长，以毫秒为单位，第三个参数用于指定LED灯暗去的时长，也是以毫秒为单位</li></ul><figure class="highlight pony"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Notification</span> notification = <span class="function"><span class="keyword">new</span> <span class="title">NotificationCompat</span>.<span class="title">Builder</span>(this)</span></span><br><span class="line"><span class="function">...</span></span><br><span class="line"><span class="function">.<span class="title">setLights</span>(<span class="type">Color</span>.<span class="type">GREEN</span>, <span class="number">1000</span>, <span class="number">1000</span>)</span></span><br><span class="line"><span class="function">.<span class="title">build</span>();</span></span><br></pre></td></tr></table></figure><p>实现LED灯以绿色的灯光一闪一闪的效果</p><h3 id="使用默认效果通知"><a href="#使用默认效果通知" class="headerlink" title="使用默认效果通知"></a>使用默认效果通知</h3><ul><li>使用通知的默认效果，它会根据手机当前的环境来决定播放什么铃声</li></ul><figure class="highlight pony"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Notification</span> notification = <span class="function"><span class="keyword">new</span> <span class="title">NotificationCompat</span>.<span class="title">Builder</span>(this)</span></span><br><span class="line"><span class="function">...</span></span><br><span class="line"><span class="function">.<span class="title">setDefaults</span>(<span class="type">NotificationCompat</span>.<span class="type">DEFAULT_ALL</span>)</span></span><br><span class="line"><span class="function">.<span class="title">build</span>();</span></span><br></pre></td></tr></table></figure><h2 id="通知的高级功能"><a href="#通知的高级功能" class="headerlink" title="通知的高级功能"></a>通知的高级功能</h2><p>NotificationCompat.Builder这个类中还有很多高级API还没使用过</p><h3 id="setStyle-方法"><a href="#setStyle-方法" class="headerlink" title="setStyle()方法"></a>setStyle()方法</h3><h4 id="让通知显示更多文字"><a href="#让通知显示更多文字" class="headerlink" title="让通知显示更多文字"></a>让通知显示更多文字</h4><ul><li>setStyle()方法：构建出更丰富的通知，除了文字和图标以外的东西.setStyle()方法接收一个NotificationCompat.Style参数，这个参数就是用来构建具体的富文本信息的，如长文字、图片等。</li></ul><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Notification</span> notification = new NotificationCompat.<span class="keyword">Builder(this)</span></span><br><span class="line"><span class="keyword">...</span></span><br><span class="line"><span class="keyword">.setStyle(new </span>NotificationCompat.<span class="keyword">BigTextStyle().bigText("Learn </span>how to <span class="keyword">build</span></span><br><span class="line"><span class="keyword">notifications, </span>send <span class="keyword">and </span>sync <span class="meta">data</span>, <span class="keyword">and </span>use voice actions. <span class="meta">Get</span> the official</span><br><span class="line"><span class="keyword">Android </span>IDE <span class="keyword">and </span>developer tools to <span class="keyword">build </span>apps for <span class="keyword">Android."))</span></span><br><span class="line"><span class="keyword">.build();</span></span><br></pre></td></tr></table></figure><p>让通知显示更多的字而不被省略，在setStyle()方法中创建了一个NotificationCompat.BigTextStyle对象，这个对象就是用于封装长文字信息的，我们调用它的bigText()方法并将文字内容传入就可以了。</p><h4 id="通知添加大图"><a href="#通知添加大图" class="headerlink" title="通知添加大图"></a>通知添加大图</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Notification notification = <span class="keyword">new</span> <span class="type">NotificationCompat</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">...</span><br><span class="line">.setStyle(<span class="keyword">new</span> <span class="type">NotificationCompat</span>.BigPictureStyle().bigPicture</span><br><span class="line">(BitmapFactory.decodeResource(getResources(), R.drawable.big_image)))</span><br><span class="line">.build();</span><br></pre></td></tr></table></figure><p>在参数中创建了一个NotificationCompat.BigPictureStyle对象，这个对象就是用于设置大图片的，然后调用它的bigPicture()方法并将图片传入。这里我事先准备好了一张图片，通过BitmapFactory的decodeResource()方法将图片解析成Bitmap对象，再传入到bigPicture()方法中就可以了。</p><p>经测试，如果同时设置很多文字和图片，只会有后面的那个生效</p><p><img src="/2019/01/21/第八章：丰富你的程序-运用手机多媒体/NotificationPicture.png" alt=""></p><h3 id="setPriority-方法"><a href="#setPriority-方法" class="headerlink" title="setPriority()方法"></a>setPriority()方法</h3><ul><li><p>setPriority()方法接收一个整型参数用于设置这条通知的重要程度，一共有5个常量值可选：<code>PRIORITY_DEFAULT</code>表示默认的重要程度，和不设置效果是一样的；<code>PRIORITY_MIN</code>表示最低的重要程度，系统可能只会在特定的场景才显示这条通知，比如用户下拉状态栏的时候；<code>PRIORITY_LOW</code>表示较低的重要程度，系统可能会将这类通知缩小，或改变其显示的顺序，将其排在更重要的通知之后；<code>PRIORITY_HIGH</code>表示较高的重要程度，系统可能会将这类通知放大，或改变其显示的顺序，将其排在比较靠前的位置；<code>PRIORITY_MAX</code>表示最高的重要程度，这类通知消息必须要让用户立刻看到，甚至需要用户做出响应操作。</p></li><li><p>书上设置为Max会出现通知横幅，但是我测试没有出现，可能是代码哪里错了，并且在安卓9上面无法发出通知，应该是方法比较旧了，留着后来更新</p></li></ul><h1 id="调用摄像头和相册"><a href="#调用摄像头和相册" class="headerlink" title="调用摄像头和相册"></a>调用摄像头和相册</h1><h2 id="调用摄像头拍照"><a href="#调用摄像头拍照" class="headerlink" title="调用摄像头拍照"></a>调用摄像头拍照</h2><ul><li>新建CameraAlbumTest项目</li><li>编辑activity_main.xml文件，添加一个按钮和一个ImageView控件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/take_photo"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"拍照"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/picture"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TAKE_PHOTO=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> ImageView picture;</span><br><span class="line">    <span class="keyword">private</span> Uri imageUri;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button takePhoto=findViewById(R.id.take_photo);</span><br><span class="line"></span><br><span class="line">        picture=findViewById(R.id.picture);</span><br><span class="line"></span><br><span class="line">        takePhoto.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//创建FIle对象用于储存拍照后的照片</span></span><br><span class="line">                File outputImage=<span class="keyword">new</span> File(getExternalCacheDir(),<span class="string">"output_image.jpg"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(outputImage.exists())&#123;</span><br><span class="line">                        outputImage.delete();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    outputImage.createNewFile();</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(Build.VERSION.SDK_INT&gt;=<span class="number">24</span>)&#123;</span><br><span class="line">                    imageUri=FileProvider.getUriForFile(MainActivity.<span class="keyword">this</span>,<span class="string">"com.zanecode6574.cameraalbumtest.fileprovider"</span>,outputImage);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    imageUri=Uri.fromFile(outputImage);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">//启动相机</span></span><br><span class="line">                Intent intent=<span class="keyword">new</span> Intent(<span class="string">"android.media.action.IMAGE_CAPTURE"</span>);</span><br><span class="line">                intent.putExtra(MediaStore.EXTRA_OUTPUT,imageUri);</span><br><span class="line">                startActivityForResult(intent,TAKE_PHOTO);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将照片显示出来</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, @Nullable Intent data)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> TAKE_PHOTO:</span><br><span class="line">                <span class="keyword">if</span>(resultCode==RESULT_OK)&#123;</span><br><span class="line">                    <span class="keyword">try</span>&#123;</span><br><span class="line">                        Bitmap bitmap=BitmapFactory.decodeStream(getContentResolver().openInputStream(imageUri));</span><br><span class="line">                        picture.setImageBitmap(bitmap);</span><br><span class="line">                    &#125;<span class="keyword">catch</span>(FileNotFoundException e)&#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>MainActivity中要做的第一件事自然是分别获取到Button和ImageView的实例，并给Button注册上点击事件，然后在Button的点击事件里开始处理调用摄像头的逻辑，我们重点看一下这部分代码。</li><li>首先这里创建了一个File对象，用于存放摄像头拍下的图片，这里我们把图片命名为output_image.jpg，并将它存放在手机SD卡的应用关联缓存目录下。什么叫作应用关联缓存目录呢？就是指SD卡中专门用于存放当前应用缓存数据的位置，调用getExternalCacheDir()方法可以得到这个目录，具体的路径是/sdcard/Android/data/<package name="">/cache。那么为什么要使用应用关联缓目录来存放图片呢？因为从Android 6.0系统开始，读写SD卡被列为了危险权限，如果将图片存放在SD卡的任何其他目录，都要进行运行时权限处理才行，而使用应用关联目录则可以跳过这一步。</package></li><li>接着会进行一个判断，如果运行设备的系统版本低于Android 7.0，就调用Uri的fromFile()方法将File对象转换成Uri对象，这个Uri对象标识着output_image.jpg这张图片的本地真实路径。否则，就调用FileProvider的getUriForFile()方法将File对象转换成一个封装过的Uri对象。getUriForFile()方法接收3个参数，第一个参数要求传入Context对象，第二个参数可以是任意唯一的字符串，第三个参数则是我们刚刚创建的File对象。之所以要进行这样一层转换，是因为从Android 7.0系统开始，直接使用本地真实路径的Uri被认为是不安全的，会抛出一个FileUriExposedException异常。而FileProvider则是一种特殊的内容提供器，它使用了和内容提供器类似的机制来对数据进行保护，可以选择性地将封装过的Uri共享给外部，从而提高了应用的安全性。</li><li>接下来构建出了一个Intent对象，并将这个Intent的action指定为android.media.action.IMAGE_CAPTURE，再调用Intent的putExtra()方法指定图片的输出地址，这里填入刚刚得到的Uri对象，最后调用startActivityForResult()来启动活动。由于我们使用的是一个隐式Intent，系统会找出能够响应这个Intent的活动去启动，这样照相机程序就会被打开，拍下的照片将会输出到output_image.jpg中。</li><li>刚才我们是使用startActivityForResult()来启动活动的，因此拍完照后会有结果返回到onActivityResult()方法中。如果发现拍照成功，就可以调用BitmapFactory的decodeStream()方法将output_image.jpg这张照片解析成Bitmap对象，然后把它设置到ImageView中显示出来。</li></ul><ul><li>右击res目录→New→Directory，创建一个xml目录，接着右击xml目录→New→File，创建一个file_paths.xml文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">paths</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">external-path</span> <span class="attr">name</span>=<span class="string">"my_images"</span> <span class="attr">path</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">paths</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改AndroidManifest.xml注册内容提供器</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.zanecode6574.cameraalbumtest"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">provider</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"android.support.v4.content.FileProvider"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:authorities</span>=<span class="string">"com.zanecode6574.cameraalbumtest.fileprovider"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:grantUriPermissions</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:name</span>=<span class="string">"android.support.FILE_PROVIDER_PATHS"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:resource</span>=<span class="string">"@xml/file_paths"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里发现Android Studio的模拟器十分好用，相机的问题也有解决会直接给你一个场景，避免了虚拟机没有相机的尴尬情况<br><img src="/2019/01/21/第八章：丰富你的程序-运用手机多媒体/TakePhoto.png" alt=""></p><h2 id="从相册选择照片"><a href="#从相册选择照片" class="headerlink" title="从相册选择照片"></a>从相册选择照片</h2><ul><li>添加一个选择照片的按钮</li><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.cameraalbumtest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.annotation.TargetApi;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.ContentUris;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.provider.DocumentsContract;</span><br><span class="line"><span class="keyword">import</span> android.provider.MediaStore;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.FileProvider;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TAKE_PHOTO=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CHOOSE_PHOTO=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> ImageView picture;</span><br><span class="line">    <span class="keyword">private</span> Uri imageUri;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button takePhoto=findViewById(R.id.take_photo);</span><br><span class="line"></span><br><span class="line">        picture=findViewById(R.id.picture);</span><br><span class="line"></span><br><span class="line">        takePhoto.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//创建FIle对象用于储存拍照后的照片</span></span><br><span class="line">                File outputImage=<span class="keyword">new</span> File(getExternalCacheDir(),<span class="string">"output_image.jpg"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(outputImage.exists())&#123;</span><br><span class="line">                        outputImage.delete();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    outputImage.createNewFile();</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(Build.VERSION.SDK_INT&gt;=<span class="number">24</span>)&#123;</span><br><span class="line">                    imageUri=FileProvider.getUriForFile(MainActivity.<span class="keyword">this</span>,<span class="string">"com.zanecode6574.cameraalbumtest.fileprovider"</span>,outputImage);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    imageUri=Uri.fromFile(outputImage);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//启动相机</span></span><br><span class="line">                Intent intent=<span class="keyword">new</span> Intent(<span class="string">"android.media.action.IMAGE_CAPTURE"</span>);</span><br><span class="line">                intent.putExtra(MediaStore.EXTRA_OUTPUT,imageUri);</span><br><span class="line">                startActivityForResult(intent,TAKE_PHOTO);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button chooseFromAlbum=findViewById(R.id.choose_from_album);</span><br><span class="line">        chooseFromAlbum.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,<span class="keyword">new</span> String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,<span class="number">1</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    openAlbum();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, @Nullable Intent data)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> TAKE_PHOTO:</span><br><span class="line">                <span class="keyword">if</span>(resultCode==RESULT_OK)&#123;</span><br><span class="line">                    <span class="keyword">try</span>&#123;</span><br><span class="line">                        Bitmap bitmap=BitmapFactory.decodeStream(getContentResolver().openInputStream(imageUri));</span><br><span class="line">                        picture.setImageBitmap(bitmap);</span><br><span class="line">                    &#125;<span class="keyword">catch</span>(FileNotFoundException e)&#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CHOOSE_PHOTO:</span><br><span class="line">                <span class="keyword">if</span>(resultCode==RESULT_OK)&#123;</span><br><span class="line">                    <span class="comment">//判断手机系统版本号</span></span><br><span class="line">                    <span class="keyword">if</span>(Build.VERSION.SDK_INT&gt;=<span class="number">19</span>)&#123;</span><br><span class="line">                        <span class="comment">//4.4及以上系统用这个方法处理</span></span><br><span class="line">                        handleImageOnKitKat(data);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        handleImageBeforeKitKat(data);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TargetApi</span>(<span class="number">19</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleImageOnKitKat</span><span class="params">(Intent data)</span></span>&#123;</span><br><span class="line">        String imagePath=<span class="keyword">null</span>;</span><br><span class="line">        Uri uri=data.getData();</span><br><span class="line">        <span class="keyword">if</span>(DocumentsContract.isDocumentUri(<span class="keyword">this</span>,uri))&#123;</span><br><span class="line">            <span class="comment">//如果是document类型的Uri，则通过document id处理</span></span><br><span class="line">            String docId=DocumentsContract.getDocumentId(uri);</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">"com.android.providers.media.documents"</span>.equals(uri.getAuthority()))&#123;</span><br><span class="line">                String id=docId.split(<span class="string">":"</span>)[<span class="number">1</span>]; <span class="comment">//解析出数字格式的id</span></span><br><span class="line">                String selection=MediaStore.Images.Media._ID+<span class="string">"="</span>+id;</span><br><span class="line">                imagePath=getImagePath(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,selection);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"com.android.providers.downloads.documents"</span>.equals(uri.getAuthority()))&#123;</span><br><span class="line">                Uri contentUri=ContentUris.withAppendedId(Uri.parse(<span class="string">"content://downloads/public_downloads"</span>),Long.valueOf(docId));</span><br><span class="line">                imagePath=getImagePath(contentUri,<span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"content"</span>.equalsIgnoreCase(uri.getScheme()))&#123;</span><br><span class="line">            <span class="comment">//如果是content类型的Uri</span></span><br><span class="line">            imagePath=getImagePath(uri,<span class="keyword">null</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"file"</span>.equalsIgnoreCase(uri.getScheme()))&#123;</span><br><span class="line">            imagePath=uri.getPath();</span><br><span class="line">        &#125;</span><br><span class="line">        displayImage(imagePath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleImageBeforeKitKat</span><span class="params">(Intent data)</span></span>&#123;</span><br><span class="line">        Uri uri=data.getData();</span><br><span class="line">        String imagePath=getImagePath(uri,<span class="keyword">null</span>);</span><br><span class="line">        displayImage(imagePath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getImagePath</span><span class="params">(Uri uri,String selection)</span></span>&#123;</span><br><span class="line">        String path=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过Uri和selection来获取真实的图片路径</span></span><br><span class="line">        Cursor cursor=getContentResolver().query(uri,<span class="keyword">null</span>,selection,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span>(cursor!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(cursor.moveToFirst())&#123;</span><br><span class="line">                path=cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cursor.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">displayImage</span><span class="params">(String imagePath)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(imagePath!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            Bitmap bitmap=BitmapFactory.decodeFile(imagePath);</span><br><span class="line">            picture.setImageBitmap(bitmap);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">"获取图片失败"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">openAlbum</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Intent intent=<span class="keyword">new</span> Intent(<span class="string">"android.intent.action.GET_CONTENT"</span>);</span><br><span class="line">        intent.setType(<span class="string">"image/*"</span>);</span><br><span class="line">        startActivityForResult(intent,CHOOSE_PHOTO); <span class="comment">//打开相册</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]==PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    openAlbum();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"权限被拒绝"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在Choose From Album按钮的点击事件里我们先是进行了一个运行时权限处理，动态申请WRITE_EXTERNAL_STORAGE这个危险权限。为什么需要申请这个权限呢？因为相册中的照片都是存储在SD卡上的，我们要从SD卡中读取照片就需要申请这个权限。WRITE_EXTERNAL_STORAGE表示同时授予程序对SD卡读和写的能力。</li><li>当用户授权了权限申请之后会调用openAlbum()方法，这里我们先是构建出了一个Intent对象，并将它的action指定为android.intent.action.GET_CONTENT。接着给这个Intent对象设置一些必要的参数，然后调用startActivityForResult()方法就可以打开相册程序选择照片了。注意在调用startActivityForResult()方法的时候，我们给第二个参数传入的值变成了CHOOSE_PHOTO，这样当从相册选择完图片回到onActivityResult()方法时，就会进入CHOOSE_PHOTO的case来处理图片。</li><li>接下来的逻辑就比较复杂了，首先为了兼容新老版本的手机，我们做了一个判断，如果是4.4及以上系统的手机就调用handleImageOnKitKat()方法来处理图片，否则就调用handleImageBeforeKitKat()方法来处理图片。之所以要这样做，是因为Android系统从4.4版本开始，选取相册中的图片不再返回图片真实的Uri了，而是一个封装过的Uri，因此如果是4.4版本以上的手机就需要对这个Uri进行解析才行。</li><li>handleImageOnKitKat()方法中的逻辑就基本是如何解析这个封装过的Uri了。这里有好几种判断情况，如果返回的Uri是document类型的话，那就取出document id进行处理，如果不是的话，那就使用普通的方式处理。另外，如果Uri的authority是media格式的话，document id还需要再进行一次解析，要通过字符串分割的方式取出后半部分才能得到真正的数字id。取出的id用于构建新的Uri和条件语句，然后把这些值作为参数传入到getImagePath()方法当中，就可以获取到图片的真实路径了。拿到图片的路径之后，再调用displayImage()方法将图片显示到界面上。</li><li>相比于handleImageOnKitKat()方法，handleImageBeforeKitKat()方法中的逻辑就要简单得多了，因为它的Uri是没有封装过的，不需要任何解析，直接将Uri传入到getImagePath()方法当中就能获取到图片的真实路径了，最后同样是调用displayImage()方法来让图片显示到界面上。</li></ul><p><img src="/2019/01/21/第八章：丰富你的程序-运用手机多媒体/ChoosePhoto.png" alt=""></p><ul><li>缺点：目前的方式，即使照片经过裁剪，但是还是会很大，直接加载到内存中可能会导致崩溃，更好的办法是先对照片进行适当的压缩再加载到内存中。</li></ul><h1 id="播放音频"><a href="#播放音频" class="headerlink" title="播放音频"></a>播放音频</h1><p>在Android中播放音频文件一般都是使用MediaPlayer类来实现的，它对多种格式的音频文件提供了非常全面的控制方法，从而使得播放音乐的工作变得十分简单。下表列出了MediaPlayer类中一些较为常用的控制方法。</p><p><img src="/2019/01/21/第八章：丰富你的程序-运用手机多媒体/MediaPlayer.png" alt=""></p><p>首先需要创建出一个MediaPlayer对象，然后调用setDataSource()方法来设置音频文件的路径，再调用prepare()方法使MediaPlayer进入到准备状态，接下来调用start()方法就可以开始播放音频，调用pause()方法就会暂停播放，调用reset()方法就会停止播放。</p><ul><li>新建一个PlayAudioTest项目</li><li>修改activity_main.xml中的代码，添加三个按钮，播放、暂停、停止</li><li>在模拟器的SD卡更目录放一个名字为music.mp3的音乐文件</li><li>修改MainActivity的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.playaudiotest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.media.MediaPlayer;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MediaPlayer mediaPlayer=<span class="keyword">new</span> MediaPlayer();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button play=findViewById(R.id.play);</span><br><span class="line">        Button pause=findViewById(R.id.pause);</span><br><span class="line">        Button stop=findViewById(R.id.stop);</span><br><span class="line"></span><br><span class="line">        play.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        pause.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        stop.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,<span class="keyword">new</span> String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            initMediaPlayer(); <span class="comment">//初始化MediaPlayer</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initMediaPlayer</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            File file=<span class="keyword">new</span> File(Environment.getExternalStorageDirectory(),<span class="string">"music.mp3"</span>);</span><br><span class="line">            mediaPlayer.setDataSource(file.getPath());</span><br><span class="line">            mediaPlayer.prepare();</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]==PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    initMediaPlayer();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"拒绝权限将无法使用程序"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.play:</span><br><span class="line">                <span class="keyword">if</span>(!mediaPlayer.isPlaying())&#123;</span><br><span class="line">                    mediaPlayer.start();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.pause:</span><br><span class="line">                <span class="keyword">if</span>(mediaPlayer.isPlaying())&#123;</span><br><span class="line">                    mediaPlayer.pause();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.stop:</span><br><span class="line">                <span class="keyword">if</span>(mediaPlayer.isPlaying())&#123;</span><br><span class="line">                    mediaPlayer.stop();</span><br><span class="line">                    initMediaPlayer();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        <span class="keyword">if</span>(mediaPlayer!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            mediaPlayer.stop();</span><br><span class="line">            mediaPlayer.release();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在类初始化的时候我们就先创建了一个MediaPlayer的实例，然后在onCreate()方法中进行了运行时权限处理，动态申请WRITE_EXTERNAL_STORAGE权限。这是由于待会我们会在SD卡中放置一个音频文件，程序为了播放这个音频文件必须拥有访问SD卡的权限才行。注意，在onRequestPermissionsResult()方法中，如果用户拒绝了权限申请，那么就调用finish()方法将程序直接关掉，因为如果没有SD卡的访问权限，我们这个程序将什么都干不了。</li><li>用户同意授权之后就会调用initMediaPlayer()方法为MediaPlayer对象进行初始化操作。在initMediaPlayer()方法中，首先是通过创建一个File对象来指定音频文件的路径，从这里可以看出，我们需要事先在SD卡的根目录下放置一个名为music.mp3的音频文件。后面依次调用了setDataSource()方法和prepare()方法，为MediaPlayer做好了播放前的准备。</li><li>当点击Play按钮时会进行判断，如果当前MediaPlayer没有正在播放音频，则调用start()方法开始播放。当点击Pause按钮时会判断，如果当前MediaPlayer正在播放音频，则调用pause()方法暂停播放。当点击Stop按钮时会判断，如果当前MediaPlayer正在播放音频，则调用reset()方法将MediaPlayer重置为刚刚创建的状态，然后重新调用一遍initMediaPlayer()方法。</li><li>最后在onDestroy()方法中，我们还需要分别调用stop()方法和release()方法，将与MediaPlayer相关的资源释放掉。</li></ul><ul><li>在AndroidManifest.xml中申明权限</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span><br></pre></td></tr></table></figure><h1 id="播放视频"><a href="#播放视频" class="headerlink" title="播放视频"></a>播放视频</h1><p>播放视频文件其实并不比播放音频文件复杂，主要是使用VideoView类来实现的。这个类将视频的显示和控制集于一身，使得我们仅仅借助它就可以完成一个简易的视频播放器。VideoView的用法和MediaPlayer也比较类似，主要有以下常用方法</p><p><img src="/2019/01/21/第八章：丰富你的程序-运用手机多媒体/VideoPlayer.png" alt=""></p><ul><li>新建PlayVideo项目</li><li>修改activity_main.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/play"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"播放"</span>/&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/pause"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"暂停"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/replay"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> </span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"恢复"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">VideoView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/video_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.videoplayer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> android.widget.VideoView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> VideoView videoView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button play=findViewById(R.id.play);</span><br><span class="line">        Button pause=findViewById(R.id.pause);</span><br><span class="line">        Button replay=findViewById(R.id.replay);</span><br><span class="line">        videoView=findViewById(R.id.video_view);</span><br><span class="line">        </span><br><span class="line">        play.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        pause.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        replay.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,<span class="keyword">new</span> String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            initVideoPath(); <span class="comment">//初始化VideoView</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initVideoPath</span><span class="params">()</span></span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(Environment.getExternalStorageDirectory(),<span class="string">"movie.mp4"</span>);</span><br><span class="line">        videoView.setVideoPath(file.getPath());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span>(requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]==PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    initVideoPath();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"拒绝将无法使用应用!"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    finish();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.play:</span><br><span class="line">                <span class="keyword">if</span>(!videoView.isPlaying())&#123;</span><br><span class="line">                    videoView.start();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.pause:</span><br><span class="line">                <span class="keyword">if</span>(videoView.isPlaying())&#123;</span><br><span class="line">                    videoView.pause();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.replay:</span><br><span class="line">                <span class="keyword">if</span>(videoView.isPlaying())&#123;</span><br><span class="line">                    videoView.resume();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        <span class="keyword">if</span>(videoView!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            videoView.suspend();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在SD卡根目录放一个名字为movie.mp4的视频文件</li><li>在AndroidManifest.xml中申明权限</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;这章用的是实体安卓机器，打开开发者调试选项&lt;/li&gt;
&lt;li&gt;包含了通知的用法、调用摄像头拍照、调用相册选择照片、播放音频、播放视频&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;使用通知&quot;&gt;&lt;a href=&quot;#使用通知&quot; class=&quot;headerlink&quot; title=&quot;使用通知&quot;&gt;&lt;/a&gt;使用通知&lt;/h1&gt;&lt;p&gt;通知（Notification）是Android系统中比较有特色的一个功能，当某个应用程序希望向用户发出一些提示信息，而该应用程序又不在前台运行时，就可以借助通知来实现。发出一条通知后，手机最上方的状态栏中会显示一个通知的图标，下拉状态栏后可以看到通知的详细内容。Android的通知功能获得了大量用户的认可和喜爱，就连iOS系统也在5.0版本之后加入了类似的功能。&lt;/p&gt;
&lt;h2 id=&quot;通知的基本用法&quot;&gt;&lt;a href=&quot;#通知的基本用法&quot; class=&quot;headerlink&quot; title=&quot;通知的基本用法&quot;&gt;&lt;/a&gt;通知的基本用法&lt;/h2&gt;&lt;p&gt;通知的用法还是比较灵活的，既可以在活动里创建，也可以在广播接收器里创建，当然还可以在下一章中即将学习的服务里创建。相比于广播接收器和服务，在活动里创建通知的场景还是比较少的，因为一般只有当程序进入到后台的时候我们才需要使用通知。&lt;/p&gt;
&lt;p&gt;通知的用法还是比较灵活的，既可以在活动里创建，也可以在广播接收器里创建，当然还可以在下一章中我们即将学习的服务里创建。相比于广播接收器和服务，在活动里创建通知的场景还是比较少的，因为一般只有当程序进入到后台的时候我们才需要使用通知。&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="多媒体" scheme="https://zanecode6574.github.io/tags/%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>第七章：跨程序共享数据-探究内容提供器</title>
    <link href="https://zanecode6574.github.io/2019/01/20/%E7%AC%AC%E4%B8%83%E7%AB%A0%EF%BC%9A%E8%B7%A8%E7%A8%8B%E5%BA%8F%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE-%E6%8E%A2%E7%A9%B6%E5%86%85%E5%AE%B9%E6%8F%90%E4%BE%9B%E5%99%A8/"/>
    <id>https://zanecode6574.github.io/2019/01/20/第七章：跨程序共享数据-探究内容提供器/</id>
    <published>2019-01-20T06:17:03.000Z</published>
    <updated>2019-01-21T09:32:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容提供器简介"><a href="#内容提供器简介" class="headerlink" title="内容提供器简介"></a>内容提供器简介</h1><p>Android数据持久化的技术，包括文件存储、SharedPreferences存储以及数据库存储。但是使用这些持久化技术所保存的数据都只能在当前应用程序中访问。虽然文件和SharedPreferences存储中提供了MODE_WORLD_READABLE和MODE_WORLD_WRITEABLE这两种操作模式，用于供给其他的应用程序访问当前应用的数据，但这两种模式在Android 4.2版本中都已被废弃了，Android官方已经不再推荐使用这种方式来实现跨程序数据共享的功能，而是应该使用更加安全可靠的内容提供器技术。</p><p>内容提供器（Content Provider）主要用于在不同的应用程序之间实现数据共享的功能，它提供了一套完整的机制，允许一个程序访问另一个程序中的数据，同时还能保证被访数据的安全性。目前，使用内容提供器是Android实现跨程序共享数据的标准方式。</p><p>内容提供器（Content Provider）主要用于在不同的应用程序之间实现数据共享的功能，它提供了一套完整的机制，允许一个程序访问另一个程序中的数据，同时还能保证被访数据的安全性。目前，使用内容提供器是Android实现跨程序共享数据的标准方式。</p><a id="more"></a><h1 id="运行时权限简介"><a href="#运行时权限简介" class="headerlink" title="运行时权限简介"></a>运行时权限简介</h1><p>Android的权限机制并不是什么新鲜事物，从系统的第一个版本开始就已经存在了。但其实之前Android的权限机制在保护用户安全和隐私等方面起到的作用比较有限，尤其是一些大家都离不开的常用软件，非常容易“店大欺客”。为此，Android开发团队在Android 6.0系统中引用了运行时权限这个功能，从而更好地保护了用户的安全和隐私。</p><h2 id="Android权限机制详解"><a href="#Android权限机制详解" class="headerlink" title="Android权限机制详解"></a>Android权限机制详解</h2><p>安卓程序在AndroidManifest.xml中加入权限申明，在安装程序时相应的权限就会在安装界面显示出来，用户接受就安装，不接受就不安装（但是国内好像不存在这种情况，多数大应用都是管它的，申请了再说）。</p><p>Android开发团队当然也意识到了这个问题，于是在6.0系统中加入了运行时权限功能。也就是说，用户不需要在安装软件的时候一次性授权所有申请的权限，而是可以在软件的使用过程中再对某一项权限申请进行授权。比如说一款相机应用在运行时申请了地理位置定位权限，就算我拒绝了这个权限，但是我应该仍然可以使用这个应用的其他功能，而不是像之前那样直接无法安装它。</p><p>当然，并不是所有权限都需要在运行时申请，对于用户来说，不停地授权也很烦琐。Android现在将所有的权限归成了两类，一类是普通权限，一类是危险权限。准确地讲，其实还有第三类特殊权限，不过这种权限使用得很少，因此不在本书的讨论范围之内。普通权限指的是那些不会直接威胁到用户的安全和隐私的权限，对于这部分权限申请，系统会自动帮我们进行授权，而不需要用户再去手动操作了，比如在BroadcastTest项目中申请的两个权限就是普通权限。危险权限则表示那些可能会触及用户隐私或者对设备安全性造成影响的权限，如获取设备联系人信息、定位设备的地理位置等，对于这部分权限申请，必须要由用户手动点击授权才可以，否则程序就无法使用相应的功能。</p><p>但是Android中有一共有上百种权限，其实危险权限总共就那么几个，除了危险权限之外，剩余的就都是普通权限了。下表列出了Android中所有的危险权限，一共是9组24个权限。</p><p><img src="/2019/01/20/第七章：跨程序共享数据-探究内容提供器/AndroidPermission.png" alt=""></p><p>你并不需要了解表格中每个权限的作用，只要把它当成一个参照表来查看就行了。每当要使用一个权限时，可以先到这张表中来查一下，如果是<strong>属于这张表中的权限</strong>，那么就需要进行<strong>运行时权限处理</strong>，如果<strong>不在这张表中</strong>，那么只需要在AndroidManifest.xml文件中添加一下<strong>权限声明</strong>就可以了。</p><p>另外注意一下，表格中每个危险权限都属于一个权限组，我们在进行运行时权限处理时使用的是权限名，但是用户一旦同意授权了，那么该权限所对应的权限组中所有的其他权限也会同时被授权。</p><h2 id="在程序运行时申请权限"><a href="#在程序运行时申请权限" class="headerlink" title="在程序运行时申请权限"></a>在程序运行时申请权限</h2><ul><li>新建一个RuntimePermissionTest项目,使用CALL_PHONE这个权限进行测试</li><li>在activity_main.xml布局中添加一个拨打电话的按钮</li><li>修改MainActivity的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Button</span> makeCall=findViewById(<span class="type">R</span>.id.make_call);</span><br><span class="line">        </span><br><span class="line">        makeCall.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="type">Intent</span> intent=<span class="keyword">new</span> <span class="type">Intent</span>(<span class="type">Intent</span>.<span class="type">ACTION_CALL</span>);</span><br><span class="line">                    intent.setData(<span class="type">Uri</span>.parse(<span class="string">"tel:10086"</span>));</span><br><span class="line">                    startActivity(intent);</span><br><span class="line">                &#125;<span class="keyword">catch</span>(<span class="type">SecurityException</span> e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在按钮的点击事件中，我们构建了一个隐式Intent，Intent的action指定为Intent.ACTION_CALL，这是一个系统内置的打电话的动作，然后在data部分指定了协议是tel，号码是10086。其实这部分代码我们在2.3.3小节中就已经见过了，只不过当时指定的action是Intent.ACTION_DIAL，表示打开拨号界面，这个是不需要声明权限的，而Intent.ACTION_CALL则可以直接拨打电话，因此必须声明权限。另外为了防止程序崩溃，我们将所有操作都放在了异常捕获代码块当中。</p><ul><li>修改AndroidManifest.xml文件,添加权限申明</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.CALL_PHONE"</span>/&gt;</span><br></pre></td></tr></table></figure><ul><li><p>以上代码在Android6.0以下的系统是没有问题的，但是在6.0以上，就会被禁止这个权限而无法正常工作，因为6.0以上的危险权限都要进行<strong>运行时权限处理</strong></p></li><li><p>修改MainActivity代码</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button makeCall=findViewById(R.id.make_call);</span><br><span class="line"></span><br><span class="line">        makeCall.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>, Manifest.permission.CALL_PHONE)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>,<span class="keyword">new</span> String[]&#123;</span><br><span class="line">                            Manifest.permission.CALL_PHONE</span><br><span class="line">                    &#125;,<span class="number">1</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    call();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/*</span></span><br><span class="line"><span class="comment">                try&#123;</span></span><br><span class="line"><span class="comment">                    Intent intent=new Intent(Intent.ACTION_CALL);</span></span><br><span class="line"><span class="comment">                    intent.setData(Uri.parse("tel:10086"));</span></span><br><span class="line"><span class="comment">                    startActivity(intent);</span></span><br><span class="line"><span class="comment">                &#125;catch(SecurityException e)&#123;</span></span><br><span class="line"><span class="comment">                    e.printStackTrace();</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">call</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Intent intent=<span class="keyword">new</span> Intent(Intent.ACTION_CALL);</span><br><span class="line">            intent.setData(Uri.parse(<span class="string">"tel:10086"</span>));</span><br><span class="line">            startActivity(intent);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(SecurityException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        <span class="keyword">switch</span>(requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]==PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    call();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"权限被拒绝"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里点击拨打电话就会弹出权限申请的对话框，同意以后即可调用系统拨打电话</p><ul><li>步骤解释<ul><li>运行时权限的核心就是在程序运行过程中由用户授权我们去执行某些危险操作，程序是不可以擅自做主去执行这些危险操作的。因此，第一步就是要先判断用户是不是已经给过我们授权了，借助的是ContextCompat.checkSelfPermission()方法。checkSelfPermission()方法接收两个参数，第一个参数是Context，这个没什么好说的，第二个参数是具体的权限名，比如打电话的权限名就是Manifest.permission.CALL_PHONE，然后我们使用方法的返回值和PackageManager.PERMISSION_GRANTED做比较，相等就说明用户已经授权，不等就表示用户没有授权。</li><li>如果已经授权的话就简单了，直接去执行拨打电话的逻辑操作就可以了，这里我们把拨打电话的逻辑封装到了call()方法当中。如果没有授权的话，则需要调用ActivityCompat.requestPermissions()方法来向用户申请授权，requestPermissions()方法接收3个参数，第一个参数要求是Activity的实例，第二个参数是一个String数组，我们把要申请的权限名放在数组中即可，第三个参数是请求码，只要是唯一值就可以了，这里传入了1。</li><li>调用完了requestPermissions()方法之后，系统会弹出一个权限申请的对话框，然后用户可以选择同意或拒绝我们的权限申请，不论是哪种结果，最终都会回调到onRequestPermissionsResult()方法中，而授权的结果则会封装在grantResults参数当中。这里我们只需要判断一下最后的授权结果，如果用户同意的话就调用call()方法来拨打电话，如果用户拒绝的话我们只能放弃操作，并且弹出一条失败提示。</li></ul></li></ul><h1 id="访问其他程序中的数据"><a href="#访问其他程序中的数据" class="headerlink" title="访问其他程序中的数据"></a>访问其他程序中的数据</h1><p>内容提供器的用法一般有两种，一种是使用现有的内容提供器来读取和操作相应程序中的数据，另一种是创建自己的内容提供器给我们程序的数据提供外部访问接口。</p><p>首先从使用现有的内容提供器开始,如果一个应用程序通过内容提供器对其数据提供了外部访问接口，那么任何其他的应用程序就都可以对这部分数据进行访问。Android系统中自带的电话簿、短信、媒体库等程序都提供了类似的访问接口，这就使得第三方应用程序可以充分地利用这部分数据来实现更好的功能。</p><h2 id="ContentResolver的基本用法"><a href="#ContentResolver的基本用法" class="headerlink" title="ContentResolver的基本用法"></a>ContentResolver的基本用法</h2><ul><li>对于每一个应用程序来说，如果想要访问内容提供器中共享的数据，就一定要借助ContentResolver类，可以通过Context中的getContentResolver()方法获取到该类的实例。ContentResolver中提供了一系列的方法用于对数据进行CRUD操作，其中insert()方法用于添加数据，update()方法用于更新数据，delete()方法用于删除数据，query()方法用于查询数据。SQLiteDatabase中也是使用这几个方法来进行CRUD操作的，只不过它们在方法参数上稍微有一些区别。</li><li>不同于SQLiteDatabase，ContentResolver中的增删改查方法都是不接收表名参数的，而是使用一个Uri参数代替，这个参数被称为<strong>内容URI</strong>。内容URI给内容提供器中的数据建立了唯一标识符，它主要由两部分组成：authority和path。</li><li><strong>authority</strong>是用于对不同的应用程序做区分的，一般为了避免冲突，都会采用程序包名的方式来进行命名。比如某个程序的包名是com.example.app，那么该程序对应的authority就可以命名为com.example.app.provider。</li><li><strong>path</strong>则是用于对同一应用程序中不同的表做区分的，通常都会添加到authority的后面。比如某个程序的数据库里存在两张表：table1和table2，这时就可以将path分别命名为/table1和/table2，然后把authority和path进行组合，内容URI就变成了com.example.app.provider/table1和com.example.app.provider/table2。不过，目前还很难辨认出这两个字符串就是两个内容URI，我们还需要在字符串的头部加上协议声明。</li><li>内容URI标准格式写法：</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">content:</span>//<span class="keyword">com</span>.example.app.provider/table1</span><br><span class="line"><span class="symbol">content:</span>//<span class="keyword">com</span>.example.app.provider/table2</span><br></pre></td></tr></table></figure><ul><li>得到了内容URI字符串之后，我们还需要将它解析成Uri对象才可以作为参数传入，解析方法如下</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Uri</span> uri = <span class="built_in">Uri</span>.parse(<span class="string">"content://com.example.app.provider/table1"</span>)</span><br></pre></td></tr></table></figure><p>只需要调用Uri.parse()方法，就可以将内容URI字符串解析成Uri对象了。</p><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><ul><li>使用这个Uri对象来查询table1表中的数据，代码如下</li></ul><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Cursor cursor = getContentResolver().query(</span><br><span class="line"><span class="built_in">uri,</span></span><br><span class="line"><span class="built_in">projection,</span></span><br><span class="line"><span class="built_in">selection,</span></span><br><span class="line"><span class="built_in">selectionArgs,</span></span><br><span class="line">sortOrder)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>此处的参数和SQLiteDatabase中query()的参数很像，总体来说简单一些，参考表</p><p><img src="/2019/01/20/第七章：跨程序共享数据-探究内容提供器/query参数.png" alt=""></p><ul><li>查询返回的是一个Cursor对象，将数据从Cursor对象中逐个读取出来。读取的思路仍然是通过移动游标的位置来遍历Cursor的所有行，然后再取出每一行中相应列的数据，代码如下</li></ul><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">if</span> (<span class="built_in">cursor</span> != null) &#123;</span><br><span class="line"><span class="built_in">while</span> (<span class="built_in">cursor</span>.moveToNext()) &#123;</span><br><span class="line"><span class="keyword">String</span> column1 = <span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"column1"</span>));</span><br><span class="line"><span class="keyword">int</span> column2 = <span class="built_in">cursor</span>.getInt(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"column2"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cursor</span>.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ContentValues <span class="built_in">values</span> = <span class="built_in">new</span> ContentValues();</span><br><span class="line"><span class="built_in">values</span>.<span class="built_in">put</span>(<span class="string">"column1"</span>, <span class="string">"text"</span>);</span><br><span class="line"><span class="built_in">values</span>.<span class="built_in">put</span>(<span class="string">"column2"</span>, <span class="number">1</span>);</span><br><span class="line">getContentResolver().insert(uri, <span class="built_in">values</span>);</span><br></pre></td></tr></table></figure><p>将待添加的数据组装到ContentValues中，然后调用ContentResolver的insert()方法，将Uri和ContentValues作为参数传入即可。</p><h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ContentValues <span class="built_in">values</span> = <span class="built_in">new</span> ContentValues();</span><br><span class="line"><span class="built_in">values</span>.<span class="built_in">put</span>(<span class="string">"column1"</span>, <span class="string">""</span>);</span><br><span class="line">getContentResolver().update(uri, <span class="built_in">values</span>, <span class="string">"column1 = ? and column2 = ?"</span>, <span class="built_in">new</span></span><br><span class="line">String[] &#123;<span class="string">"text"</span>, <span class="string">"1"</span>&#125;);</span><br></pre></td></tr></table></figure><p>使用了selection和selectionArgs参数来对想要更新的数据进行约束，以防止所有的行都会受影响。</p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getContentResolver().<span class="keyword">delete</span>(uri, <span class="string">"column2 = ?"</span>, <span class="keyword">new</span> <span class="keyword">String</span>[] &#123; <span class="string">"1"</span> &#125;);</span><br></pre></td></tr></table></figure><p>调用ContentResolver的delete()方法将这条数据删除掉</p><h1 id="读取联系人练习"><a href="#读取联系人练习" class="headerlink" title="读取联系人练习"></a>读取联系人练习</h1><ul><li>先给自己的虚拟机添加一些联系人，实体机请忽略</li><li>新建ContactsTest项目</li><li>修改activity_main.xml文件，添加一个ListView控件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_horizontal|center_vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/contacts_view"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span><span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity代码</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    ArrayAdapter&lt;<span class="keyword">String</span>&gt; adapter;</span><br><span class="line">    List&lt;<span class="keyword">String</span>&gt; contactsList=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        ListView contactsView=findViewById(R.id.contacts_view);</span><br><span class="line">        </span><br><span class="line">        adapter=<span class="keyword">new</span> ArrayAdapter&lt;<span class="keyword">String</span>&gt;(<span class="keyword">this</span>,android.R.layout.simple_list_item_1,contactsList);</span><br><span class="line">        </span><br><span class="line">        contactsView.setAdapter(adapter);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ContextCompat.checkSelfPermission(<span class="keyword">this</span>,Manifest.permission.READ_CONTACTS)!=PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            ActivityCompat.requestPermissions(<span class="keyword">this</span>,<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;Manifest.permission.READ_CONTACTS&#125;,<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            readContacts();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> readContacts()&#123;</span><br><span class="line">        Cursor <span class="built_in">cursor</span>=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="built_in">cursor</span>=getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">cursor</span>!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">while</span>(<span class="built_in">cursor</span>.moveToNext())&#123;</span><br><span class="line">                    <span class="keyword">String</span> displayName=<span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));</span><br><span class="line">                    <span class="keyword">String</span> Number=<span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));</span><br><span class="line">                    contactsList.<span class="built_in">add</span>(displayName+<span class="string">"\n"</span>+Number);</span><br><span class="line">                &#125;</span><br><span class="line">                adapter.notifyDataSetChanged();</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">cursor</span>!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="built_in">cursor</span>.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onRequestPermissionsResult(<span class="built_in">int</span> requestCode, @NonNull <span class="keyword">String</span>[] permissions, @NonNull <span class="built_in">int</span>[] grantResults) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        <span class="keyword">switch</span> (requestCode)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(grantResults.length&gt;<span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>]==PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                    readContacts();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">"权限被拒绝"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在onCreate()方法中，我们首先获取了ListView控件的实例，并给它设置好了适配器，然后开始调用运行时权限的处理逻辑，因为READ_CONTACTS权限是属于危险权限的。关于运行时权限的处理流程相信你已经熟练掌握了，这里我们在用户授权之后调用readContacts()方法来读取系统联系人信息。</p><p>readContacts()方法，可以看到，这里使用了ContentResolver的query()方法来查询系统的联系人数据。不过传入的Uri参数直接使用ContactsContract.CommonDataKinds.Phone，该类已经帮我们做好了封装，提供了一个CONTENT_URI常量，而这个常量就是使用Uri.parse()方法解析出来的结果。</p><p>接着我们对Cursor对象进行遍历，将联系人姓名和手机号这些数据逐个取出，联系人姓名这一列对应的常量是ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME，联系人手机号这一列对应的常量是ContactsContract.CommonDataKinds.Phone.NUMBER。两个数据都取出之后，将它们进行拼接，并且在中间加上换行符，然后将拼接后的数据添加到ListView的数据源里，并通知刷新一下ListView。</p><p>最后千万不要忘记将Cursor对象关闭掉。</p><ul><li>在AndroidManifest.xml中申明权限</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.READ_CONTACTS"</span>/&gt;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/20/第七章：跨程序共享数据-探究内容提供器/ContactsRead.png" alt=""></p><h1 id="创建自己的内容提供器"><a href="#创建自己的内容提供器" class="headerlink" title="创建自己的内容提供器"></a>创建自己的内容提供器</h1><h2 id="新建一个类去继承ContentProvider来创建一个自己的内容提供器"><a href="#新建一个类去继承ContentProvider来创建一个自己的内容提供器" class="headerlink" title="新建一个类去继承ContentProvider来创建一个自己的内容提供器"></a>新建一个类去继承ContentProvider来创建一个自己的内容提供器</h2><ul><li>新建MyProvider类继承自ContentProvider</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public boolean onCreate() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public Cursor query(<span class="built_in">Uri</span> uri, <span class="built_in">String</span>[] projection, <span class="built_in">String</span> selection, <span class="built_in">String</span>[] selectionArgs, <span class="built_in">String</span> sortOrder) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">Uri</span> insert(<span class="built_in">Uri</span> uri,ContentValues values) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">int</span> update(<span class="built_in">Uri</span> uri, ContentValues values, <span class="built_in">String</span> selection, <span class="built_in">String</span>[] selectionArgs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">int</span> delete(<span class="built_in">Uri</span> uri, <span class="built_in">String</span> selection, <span class="built_in">String</span>[] selectionArgs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">String</span> getType(<span class="built_in">Uri</span> uri) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这里用control+o重写函数可能会出现<a href="mailto:`@androidx.annotation.Nullable" target="_blank" rel="noopener">`@androidx.annotation.Nullable</a>`,查了一下应该是androidx库里面的东西，报错的解决办法就是在gradle.properties添加</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android.<span class="attribute">useAndroidX</span>=<span class="literal">true</span></span><br><span class="line">android.<span class="attribute">enableJetifier</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li><p>方法介绍</p><ul><li>onCreate()：初始化内容提供器的时候调用。通常会在这里完成对数据库的创建和升级等操作，返回true表示内容提供器初始化成功，返回false则表示失败。</li><li>query()：从内容提供器中查询数据。使用uri参数来确定查询哪张表，projection参数用于确定查询哪些列，selection和selectionArgs参数用于约束查询哪些行，sortOrder参数用于对结果进行排序，查询的结果存放在Cursor对象中返回。</li><li>insert()：向内容提供器中添加一条数据。使用uri参数来确定要添加到的表，待添加的数据保存在values参数中。添加完成后，返回一个用于表示这条新记录的URI。</li><li>update()：更新内容提供器中已有的数据。使用uri参数来确定更新哪一张表中的数据，新数据保存在values参数中，selection和selectionArgs参数用于约束更新哪些行，受影响的行数将作为返回值返回。</li><li>delete()：从内容提供器中删除数据。使用uri参数来确定删除哪一张表中的数据，selection和selectionArgs参数用于约束删除哪些行，被删除的行数将作为返回值返回。</li><li>getType()：根据传入的内容URI来返回相应的MIME类型。</li></ul></li><li><p>几乎每一个方法都会带有Uri这个参数，这个参数也正是调用ContentResolver的增删改查方法时传递过来的。而现在，我们需要对传入的Uri参数进行解析，从中分析出调用方期望访问的表和数据。</p></li><li>一个标准的内容URI写法是这样的：</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">content:</span>//<span class="keyword">com</span>.example.app.provider/table1</span><br></pre></td></tr></table></figure><p>这就表示调用方期望访问的是com.example.app这个应用的table1表中的数据。除此之外，我们还可以在这个内容URI的后面加上一个id，如下所示</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">content:</span>//<span class="keyword">com</span>.example.app.provider/table1/<span class="number">1</span></span><br></pre></td></tr></table></figure><p>这就表示调用方期望访问的是com.example.app这个应用的table1表中id为1的数据</p><ul><li>内容URI的格式主要就只有以上两种，以路径结尾就表示期望访问该表中所有的数据，以id结尾就表示期望访问该表中拥有相应id的数据。我们可以使用通配符的方式来分别匹配这两种格式的内容URI，规则如下。</li><li>*：表示匹配任意长度的任意字符。</li><li>#：表示匹配任意长度的数字。</li><li>所以，一个能够匹配任意表的内容URI格式就可以写成</li></ul><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">content:</span>//<span class="keyword">com</span>.example.app.provider<span class="comment">/*</span></span><br></pre></td></tr></table></figure><p>而一个能够匹配table1表中任意一行数据的内容URI格式就可以写成</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">content:</span>//<span class="keyword">com</span>.example.app.provider/table1/<span class="meta">#</span></span><br></pre></td></tr></table></figure><p>接着，我们再借助UriMatcher这个类就可以轻松地实现匹配内容URI的功能。</p><ul><li><p>UriMatcher中提供了一个addURI()方法，这个方法接收3个参数，可以分别把authority、path和一个自定义代码传进去。这样，当调用UriMatcher的match()方法时，就可以将一个Uri对象传入，返回值是某个能够匹配这个Uri对象所对应的自定义代码，利用这个代码，我们就可以判断出调用方期望访问的是哪张表中的数据了。</p></li><li><p>修改MyProvider中的代码</p></li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TABLE1_DIR= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TABLE1_ITEM= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TABLE2_DIR = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TABLE2_ITEM = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> UriMatcher uriMatcher;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        uriMatcher=<span class="keyword">new</span> UriMatcher(UriMatcher.NO_MATCH);</span><br><span class="line">        uriMatcher.addURI(<span class="string">"com.zanecode6574.app.provider"</span>,<span class="string">"table1"</span>,TABLE1_DIR);</span><br><span class="line">        uriMatcher.addURI(<span class="string">"com.zanecoed6574.app.provider"</span>,<span class="string">"table1/#"</span>,TABLE1_ITEM);</span><br><span class="line">        uriMatcher.addURI(<span class="string">"com.zanecode6574.app.provider"</span>,<span class="string">"table2"</span>,TABLE2_DIR);</span><br><span class="line">        uriMatcher.addURI(<span class="string">"com.zanecoed6574.app.provider"</span>,<span class="string">"table2/#"</span>,TABLE2_ITEM);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> onCreate() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Cursor query(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String[] projection, <span class="meta">@Nullable</span> String selection, <span class="meta">@Nullable</span> String[] selectionArgs, <span class="meta">@Nullable</span> String sortOrder) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.match(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE1_DIR:</span></span><br><span class="line">                <span class="comment">//查询表1中的所有数据</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE1_ITEM:</span></span><br><span class="line">                <span class="comment">//查询table1表中的单条数据</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE2_DIR:</span></span><br><span class="line">                <span class="comment">//同上可得</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE2_ITEM:</span></span><br><span class="line">                <span class="comment">//同上可得</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"><span class="symbol">                default:</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Uri insert(Uri uri,ContentValues values) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> update(Uri uri, ContentValues values, String selection, String[] selectionArgs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> delete(Uri uri, String selection, String[] selectionArgs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String getType(Uri uri) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyProvider中新增了4个整型常量，其中TABLE1_DIR表示访问table1表中的所有数据，TABLE1_ITEM表示访问table1表中的单条数据，TABLE2_DIR表示访问table2表中的所有数据，TABLE2_ITEM表示访问table2表中的单条数据。</p><p>在静态代码块里我们创建了UriMatcher的实例，并调用addURI()方法，将期望匹配的内容URI格式传递进去，注意这里传入的路径参数是可以使用通配符的。然后当query()方法被调用的时候，就会通过UriMatcher的match()方法对传入的Uri对象进行匹配，如果发现UriMatcher中某个内容URI格式成功匹配了该Uri对象，则会返回相应的自定义代码，然后我们就可以判断出调用方期望访问的到底是什么数据了。</p><p>上述代码只是以query()方法为例做了个示范，其实insert()、update()、delete()这几个方法的实现也是差不多的，它们都会携带Uri这个参数，然后同样利用UriMatcher的match()方法判断出调用方期望访问的是哪张表，再对该表中的数据进行相应的操作就可以了。</p><ul><li><p>getType()方法是所有的内容提供器都必须提供的一个方法，用于获取Uri对象所对应的MIME类型。一个内容URI所对应的MIME字符串主要由3部分组成，Android对这3个部分做了如下格式规定。</p><ul><li>必须以vnd开头。</li><li>如果内容URI以路径结尾，则后接<code>android.cursor.dir/</code>，如果内容URI以id结尾，则后接<code>android.cursor.item/</code></li><li>最后接上<code>vnd.&lt;authority&gt;.&lt;path&gt;</code></li></ul></li><li><p>所以，对于<code>content://com.example.app.provider/table1</code>这个内容URI，它所对应的MIME类型就可以写成<code>vnd.android.cursor.dir/vnd.com.example.app.provider.table1</code>,<br>对于<code>content://com.example.app.provider/table1/1</code>这个内容URI，它所对应的MIME类型就可以写成：<br><code>vnd.android.cursor.item/vnd.com.example.app.provider.table1</code></p></li><li><p>继续完善MyProvider</p></li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TABLE1_DIR= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TABLE1_ITEM= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TABLE2_DIR = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TABLE2_ITEM = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> UriMatcher uriMatcher;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        uriMatcher=<span class="keyword">new</span> UriMatcher(UriMatcher.NO_MATCH);</span><br><span class="line">        uriMatcher.addURI(<span class="string">"com.zanecode6574.app.provider"</span>,<span class="string">"table1"</span>,TABLE1_DIR);</span><br><span class="line">        uriMatcher.addURI(<span class="string">"com.zanecoed6574.app.provider"</span>,<span class="string">"table1/#"</span>,TABLE1_ITEM);</span><br><span class="line">        uriMatcher.addURI(<span class="string">"com.zanecode6574.app.provider"</span>,<span class="string">"table2"</span>,TABLE2_DIR);</span><br><span class="line">        uriMatcher.addURI(<span class="string">"com.zanecoed6574.app.provider"</span>,<span class="string">"table2/#"</span>,TABLE2_ITEM);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">boolean</span> onCreate() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Cursor query(<span class="meta">@NonNull</span> Uri uri, <span class="meta">@Nullable</span> String[] projection, <span class="meta">@Nullable</span> String selection, <span class="meta">@Nullable</span> String[] selectionArgs, <span class="meta">@Nullable</span> String sortOrder) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.match(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE1_DIR:</span></span><br><span class="line">                <span class="comment">//查询表1中的所有数据</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE1_ITEM:</span></span><br><span class="line">                <span class="comment">//查询table1表中的单条数据</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE2_DIR:</span></span><br><span class="line">                <span class="comment">//同上可得</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE2_ITEM:</span></span><br><span class="line">                <span class="comment">//同上可得</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"><span class="symbol">                default:</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Uri insert(Uri uri,ContentValues values) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> update(Uri uri, ContentValues values, String selection, String[] selectionArgs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> delete(Uri uri, String selection, String[] selectionArgs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String getType(Uri uri) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.match(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE1_DIR:</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">"vnd.android.cursor.dir/vnd.com.zanecode6574.app.provider.table1"</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE1_ITEM:</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">"vnd.android.cursor.item/vnd.com.zanecode6574.app.provider.table1"</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE2_DIR:</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">"vnd.android.cursor.dir/vnd.com.zanecode6574.app.provider.table2"</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">TABLE2_ITEM:</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">"vnd.android.cursor.item/vnd.com.zanecode6574.app.provider.table2"</span>;</span><br><span class="line"><span class="symbol">                default:</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如何才能保证隐私数据不会泄漏出去呢？其实多亏了内容提供器的良好机制，这个问题在不知不觉中已经被解决了。因为所有的CRUD操作都一定要匹配到相应的内容URI格式才能进行的，而我们当然不可能向UriMatcher中添加隐私数据的URI，所以这部分数据根本无法被外部程序访问到，安全问题也就不存在了。</li></ul><h1 id="实现跨程序数据共享"><a href="#实现跨程序数据共享" class="headerlink" title="实现跨程序数据共享"></a>实现跨程序数据共享</h1><h2 id="创建内容提供器"><a href="#创建内容提供器" class="headerlink" title="创建内容提供器"></a>创建内容提供器</h2><ul><li>为了简单，在上一章中DatabaseTest项目的基础上做，通过内容提供器给它加入外部访问接口，打开DatabaseTest项目</li><li>首先将项目内的Toast去掉，因为跨程序访问时不能直接使用Toast</li><li>创建一个内容提供器右击com.example.databasetest包→New→Other→Content Provider，这里我们将内容提供器命名为DatabaseProvider，authority指定为com.example.databasetest.provider，Exported属性表示是否允许外部程序访问我们的内容提供器，Enabled属性表示是否启用这个内容提供器。将两个属性都勾中，点击Finish完成创建</li><li>修改DatabaseProvider的代码</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class DatabaseProvider extends ContentProvider &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> BOOK_DIR= <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> BOOK_ITEM= <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> CATEGORY_DIR = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> CATEGORY_ITEM = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> AUTHORITY=<span class="string">"com.zanecode6574.databasetest.provider"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> UriMatcher uriMatcher;</span><br><span class="line">    <span class="keyword">private</span> MyDatabaseHelper dbHelper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">//创建一个URI树的根结点，因为根结点没有匹配路径，所以不需要返回码，所以这里初始化传参为UriMatcher.NO_MATCH来表示根结点不需要匹配路径的返回码</span></span><br><span class="line">        uriMatcher=<span class="keyword">new</span> UriMatcher(UriMatcher.NO_MATCH);</span><br><span class="line"></span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"book"</span>,BOOK_DIR);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"book/#"</span>,BOOK_ITEM);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"category"</span>,CATEGORY_DIR);</span><br><span class="line">        uriMatcher.addURI(AUTHORITY,<span class="string">"category/#"</span>,CATEGORY_ITEM);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> DatabaseProvider() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> delete(Uri uri, <span class="keyword">String</span> selection, <span class="keyword">String</span>[] selectionArgs) &#123;</span><br><span class="line">        <span class="comment">// Implement this to handle requests to delete one or more rows.</span></span><br><span class="line">        SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">        <span class="built_in">int</span> deleteRows=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.<span class="built_in">match</span>(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">                deleteRows=db.delete(<span class="string">"Book"</span>,selection,selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                <span class="keyword">String</span> bookId=uri.getPathSegments().<span class="built_in">get</span>(<span class="number">1</span>);</span><br><span class="line">                deleteRows=db.delete(<span class="string">"Book"</span>,<span class="string">"id=?"</span>,<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;bookId&#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                deleteRows=db.delete(<span class="string">"Category"</span>,selection,selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">String</span> categoryId=uri.getPathSegments().<span class="built_in">get</span>(<span class="number">1</span>);</span><br><span class="line">                deleteRows=db.delete(<span class="string">"Category"</span>,<span class="string">"id=?"</span>,<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;categoryId&#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deleteRows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> getType(Uri uri) &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests for the MIME type of the data</span></span><br><span class="line">        <span class="comment">// at the given URI.</span></span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.<span class="built_in">match</span>(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"vnd.android.cursor.dir/vnd.com.zanecode6574.databasetest.provider.book"</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"vnd.android.cursor.item/vnd.com.zanecode6574.databasetest.provider.book"</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"vnd.android.cursor.dir/vnd.com.zanecode6574.databasetest.provider.category"</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"vnd.android.cursor.item/vnd.com.zanecode6574.databasetest.provider.category"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Uri insert(Uri uri, ContentValues values) &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests to insert a new row.</span></span><br><span class="line">        SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">        Uri uriReturn=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (uriMatcher.<span class="built_in">match</span>(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newBookId=db.insert(<span class="string">"Book"</span>,<span class="keyword">null</span>,values);</span><br><span class="line">                uriReturn=Uri.parse(<span class="string">"content://"</span>+AUTHORITY+<span class="string">""</span> +<span class="string">"/book/"</span>+newBookId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">long</span> newCategoryId=db.insert(<span class="string">"Category"</span>,<span class="keyword">null</span>,values);</span><br><span class="line">                uriReturn=Uri.parse(<span class="string">"content://"</span>+AUTHORITY+<span class="string">"/category"</span>+newCategoryId);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> uriReturn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">boolean</span> onCreate() &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to initialize your content provider on startup.</span></span><br><span class="line">        dbHelper=<span class="keyword">new</span> MyDatabaseHelper(getContext(),<span class="string">"BookStore.db"</span>,<span class="keyword">null</span>,<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> Cursor query(Uri uri, <span class="keyword">String</span>[] projection, <span class="keyword">String</span> selection,</span><br><span class="line">                        <span class="keyword">String</span>[] selectionArgs, <span class="keyword">String</span> sortOrder) &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle query requests from clients.</span></span><br><span class="line">        SQLiteDatabase db=dbHelper.getReadableDatabase();</span><br><span class="line">        Cursor <span class="built_in">cursor</span>=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.<span class="built_in">match</span>(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">                <span class="built_in">cursor</span>=db.query(<span class="string">"Book"</span>,projection,selection,selectionArgs,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                <span class="keyword">String</span> bookId=uri.getPathSegments().<span class="built_in">get</span>(<span class="number">1</span>);</span><br><span class="line">                <span class="built_in">cursor</span>=db.query(<span class="string">"Book"</span>,projection,<span class="string">"id=?"</span>,<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;bookId&#125;,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                <span class="built_in">cursor</span>=db.query(<span class="string">"Category"</span>,projection,selection,selectionArgs,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">String</span> categoryId=uri.getPathSegments().<span class="built_in">get</span>(<span class="number">1</span>);</span><br><span class="line">                <span class="built_in">cursor</span>=db.query(<span class="string">"Category"</span>,projection,<span class="string">"id=?"</span>,<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;categoryId&#125;,<span class="keyword">null</span>,<span class="keyword">null</span>,sortOrder);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">cursor</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> update(Uri uri, ContentValues values, <span class="keyword">String</span> selection,</span><br><span class="line">                      <span class="keyword">String</span>[] selectionArgs) &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Implement this to handle requests to update one or more rows.</span></span><br><span class="line">        SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">        <span class="built_in">int</span> updateRows=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">switch</span>(uriMatcher.<span class="built_in">match</span>(uri))&#123;</span><br><span class="line">            <span class="keyword">case</span> BOOK_DIR:</span><br><span class="line">                updateRows=db.update(<span class="string">"Book"</span>,values,selection,selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BOOK_ITEM:</span><br><span class="line">                <span class="keyword">String</span> bookId=uri.getPathSegments().<span class="built_in">get</span>(<span class="number">1</span>);</span><br><span class="line">                updateRows=db.update(<span class="string">"Book"</span>,values,<span class="string">"id=?"</span>,<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;bookId&#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_DIR:</span><br><span class="line">                updateRows=db.update(<span class="string">"Category"</span>,values,selection,selectionArgs);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ITEM:</span><br><span class="line">                <span class="keyword">String</span> categoryId=uri.getPathSegments().<span class="built_in">get</span>(<span class="number">1</span>);</span><br><span class="line">                updateRows=db.update(<span class="string">"Category"</span>,values,<span class="string">"id=?"</span>,<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;categoryId&#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> updateRows;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>这些内容都非常容易理解，因为使用到的全部都是上一小节中我们学到的知识。首先在类的一开始，同样是定义了4个常量，分别用于表示访问Book表中的所有数据、访问Book表中的单条数据、访问Category表中的所有数据和访问Category表中的单条数据。然后在静态代码块里对UriMatcher进行了初始化操作，将期望匹配的几种URI格式添加了进去。<br>接下来就是每个抽象方法的具体实现了。</p><ul><li>onCreate()方法，创建了一个MyDatabaseHelper的实例，然后返回true表示内容提供器初始化成功，这时数据库就已经完成了创建或升级操作。</li><li>query()方法，在这个方法中先获取到了SQLiteDatabase的实例，然后根据传入的Uri参数判断出用户想要访问哪张表，再调用SQLiteDatabase的query()进行查询，并将Cursor对象返回就好了。注意当访问单条数据的时候有一个细节，这里调用了Uri对象的getPathSegments()方法，它会将内容URI权限之后的部分以“/”符号进行分割，并把分割后的结果放入到一个字符串列表中，那这个列表的第0个位置存放的就是路径，第1个位置存放的就是id了。得到了id之后，再通过selection和selectionArgs参数进行约束，就实现了查询单条数据的功能。</li><li>insert()方法，先获取到了SQLiteDatabase的实例，然后根据传入的Uri参数判断出用户想要往哪张表里添加数据，再调用SQLiteDatabase的insert()方法进行添加就可以了。注意insert()方法要求返回一个能够表示这条新增数据的URI，所以我们还需要调用Uri.parse()方法来将一个内容URI解析成Uri对象，当然这个内容URI是以新增数据的id结尾的。</li><li>update()方法了，先获取SQLiteDatabase的实例，然后根据传入的Uri参数判断出用户想要更新哪张表里的数据，再调用SQLiteDatabase的update()方法进行更新就好了，受影响的行数将作为返回值返回。</li><li>delete()方法，先获取到SQLiteDatabase的实例，然后根据传入的Uri参数判断出用户想要删除哪张表里的数据，再调用SQLiteDatabase的delete()方法进行删除就好了，被删除的行数将作为返回值返回。</li><li>getType()方法，这个方法中的代码完全是按照上一节中介绍的格式规则编写的。</li></ul></li><li><p>在AndroidManifest中注册内容提供器(这一步Android Studio已经帮我们添加好了)</p></li><li>删除原模拟器中的DatabaseTest程序防止之前的数据干扰</li><li>运行一次项目，将其安装至模拟器</li></ul><h2 id="创建PrividerTest项目进行测试"><a href="#创建PrividerTest项目进行测试" class="headerlink" title="创建PrividerTest项目进行测试"></a>创建PrividerTest项目进行测试</h2><ul><li>新建ProviderTest项目</li><li>修改activity_main.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/add_data"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"添加数据"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/query_data"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"查询数据"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/update_data"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"更新数据"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/delete_data"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"删除数据"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span> <span class="type">AppCompatActivity</span></span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> <span class="keyword">new</span><span class="type">Id</span>;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button addData=findViewById(R.id.add_data);</span><br><span class="line">        Button queryData=findViewById(R.id.query_data);</span><br><span class="line">        Button updateData=findViewById(R.id.update_data);</span><br><span class="line">        Button deleteData=findViewById(R.id.delete_data);</span><br><span class="line"></span><br><span class="line">        addData.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void onClick(View v) &#123;</span><br><span class="line">                Uri uri=Uri.parse(<span class="string">"content://com.zanecode6574.databasetest.provider/book"</span>);</span><br><span class="line">                ContentValues values=<span class="keyword">new</span> <span class="type">ContentValues</span>();</span><br><span class="line">                values.put(<span class="string">"name"</span>,<span class="string">"Provider测试"</span>);</span><br><span class="line">                values.put(<span class="string">"author"</span>,<span class="string">"Provider"</span>);</span><br><span class="line">                values.put(<span class="string">"pages"</span>,<span class="number">300</span>);</span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">29.99</span>);</span><br><span class="line">                Uri <span class="keyword">new</span><span class="type">Uri</span>=getContentResolver().insert(uri,values);</span><br><span class="line">                <span class="keyword">new</span><span class="type">Id</span>=<span class="keyword">new</span><span class="type">Uri</span>.getPathSegments().<span class="keyword">get</span>(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        queryData.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void onClick(View v) &#123;</span><br><span class="line">                Uri uri=Uri.parse(<span class="string">"content://com.zanecode6574.databasetest.provider/book"</span>);</span><br><span class="line">                Cursor cursor=getContentResolver().query(uri,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">                <span class="keyword">if</span> (cursor != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>(cursor.moveToNext())&#123;</span><br><span class="line">                        <span class="keyword">String</span> name=cursor.getString(cursor.getColumnIndex(<span class="string">"name"</span>));</span><br><span class="line">                        <span class="keyword">String</span> author=cursor.getString(cursor.getColumnIndex(<span class="string">"author"</span>));</span><br><span class="line">                        int pages=cursor.getInt(cursor.getColumnIndex(<span class="string">"pages"</span>));</span><br><span class="line">                        double price=cursor.getDouble(cursor.getColumnIndex(<span class="string">"price"</span>));</span><br><span class="line">                        Log.d(<span class="string">"MainActivity"</span>,<span class="string">"Name:"</span>+name+<span class="string">" "</span>+<span class="string">"Author:"</span>+author+<span class="string">" "</span>+<span class="string">"Pages:"</span>+pages+<span class="string">" "</span>+<span class="string">"Price:"</span>+price);</span><br><span class="line">                    &#125;</span><br><span class="line">                    cursor.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        updateData.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void onClick(View v) &#123;</span><br><span class="line">                Uri uri=Uri.parse(<span class="string">"content://com.zanecode6574.databasetest.provider/book/"</span>+<span class="keyword">new</span><span class="type">Id</span>);</span><br><span class="line">                ContentValues values=<span class="keyword">new</span> <span class="type">ContentValues</span>();</span><br><span class="line">                values.put(<span class="string">"name"</span>,<span class="string">"Provider再次测试"</span>);</span><br><span class="line">                values.put(<span class="string">"pages"</span>,<span class="number">899</span>);</span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">19.99</span>);</span><br><span class="line">                getContentResolver().update(uri,values,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        deleteData.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> void onClick(View v) &#123;</span><br><span class="line">                Uri uri=Uri.parse(<span class="string">"content://com.zanecode6574.databasetest.provider/book/"</span>+<span class="keyword">new</span><span class="type">Id</span>);</span><br><span class="line">                getContentResolver().delete(uri,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>添加数据的时候，首先调用了Uri.parse()方法将一个内容URI解析成Uri对象，然后把要添加的数据都存放到ContentValues对象中，接着调用ContentResolver的insert()方法执行添加操作就可以了。注意insert()方法会返回一个Uri对象，这个对象中包含了新增数据的id，我们通过getPathSegments()方法将这个id取出，稍后会用到它。</li><li>查询数据的时候，同样是调用了Uri.parse()方法将一个内容URI解析成Uri对象，然后调用ContentResolver的query()方法去查询数据，查询的结果当然还是存放在Cursor对象中的。之后对Cursor进行遍历，从中取出查询结果，并一一打印出来。</li><li>更新数据的时候，也是先将内容URI解析成Uri对象，然后把想要更新的数据存放到ContentValues对象中，再调用ContentResolver的update()方法执行更新操作就可以了。注意这里我们为了不想让Book表中的其他行受到影响，在调用Uri.parse()方法时，给内容URI的尾部增加了一个id，而这个id正是添加数据时所返回的。这就表示我们只希望更新刚刚添加的那条数据，Book表中的其他行都不会受影响。</li><li>删除数据的时候，也是使用同样的方法解析了一个以id结尾的内容URI，然后调用ContentResolver的delete()方法执行删除操作就可以了。由于我们在内容URI里指定了一个id，因此只会删掉拥有相应id的那行数据，Book表中的其他数据都不会受影响。</li></ul><p><img src="/2019/01/20/第七章：跨程序共享数据-探究内容提供器/ProviderTestQuery.png" alt=""></p><p><img src="/2019/01/20/第七章：跨程序共享数据-探究内容提供器/ProviderTestUpdate.png" alt=""></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>暂时没感觉到多少程序需要用到这个内容提供器，这节先水水，要用到的时候回来翻步骤就行了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内容提供器简介&quot;&gt;&lt;a href=&quot;#内容提供器简介&quot; class=&quot;headerlink&quot; title=&quot;内容提供器简介&quot;&gt;&lt;/a&gt;内容提供器简介&lt;/h1&gt;&lt;p&gt;Android数据持久化的技术，包括文件存储、SharedPreferences存储以及数据库存储。但是使用这些持久化技术所保存的数据都只能在当前应用程序中访问。虽然文件和SharedPreferences存储中提供了MODE_WORLD_READABLE和MODE_WORLD_WRITEABLE这两种操作模式，用于供给其他的应用程序访问当前应用的数据，但这两种模式在Android 4.2版本中都已被废弃了，Android官方已经不再推荐使用这种方式来实现跨程序数据共享的功能，而是应该使用更加安全可靠的内容提供器技术。&lt;/p&gt;
&lt;p&gt;内容提供器（Content Provider）主要用于在不同的应用程序之间实现数据共享的功能，它提供了一套完整的机制，允许一个程序访问另一个程序中的数据，同时还能保证被访数据的安全性。目前，使用内容提供器是Android实现跨程序共享数据的标准方式。&lt;/p&gt;
&lt;p&gt;内容提供器（Content Provider）主要用于在不同的应用程序之间实现数据共享的功能，它提供了一套完整的机制，允许一个程序访问另一个程序中的数据，同时还能保证被访数据的安全性。目前，使用内容提供器是Android实现跨程序共享数据的标准方式。&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="跨程序" scheme="https://zanecode6574.github.io/tags/%E8%B7%A8%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="内容提供器" scheme="https://zanecode6574.github.io/tags/%E5%86%85%E5%AE%B9%E6%8F%90%E4%BE%9B%E5%99%A8/"/>
    
      <category term="共享" scheme="https://zanecode6574.github.io/tags/%E5%85%B1%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>第六章：数据储存全方案-详解持久化技术</title>
    <link href="https://zanecode6574.github.io/2019/01/19/%E7%AC%AC%E5%85%AD%E7%AB%A0%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%82%A8%E5%AD%98%E5%85%A8%E6%96%B9%E6%A1%88-%E8%AF%A6%E8%A7%A3%E6%8C%81%E4%B9%85%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    <id>https://zanecode6574.github.io/2019/01/19/第六章：数据储存全方案-详解持久化技术/</id>
    <published>2019-01-19T06:41:41.000Z</published>
    <updated>2019-01-19T17:08:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="持久化技术介绍"><a href="#持久化技术介绍" class="headerlink" title="持久化技术介绍"></a>持久化技术介绍</h1><p>数据持久化就是指将那些内存中的瞬时数据保存到存储设备中，保证即使在手机或电脑关机的情况下，这些数据仍然不会丢失。保存在内存中的数据是处于瞬时状态的，而保存在存储设备中的数据是处于持久状态的，持久化技术则提供了一种机制可以让数据在瞬时状态和持久状态之间进行转换。</p><p>Android系统中主要提供了三种方式用于简单实现数据持久化功能，除了这3种方式之外，你还可以将数据保存在手机的SD卡中，不过使用文件、SharedPreferences或数据库来保存数据会相对更简单一些，而且比起将数据保存在SD卡中会更加地安全。</p><a id="more"></a><h1 id="文件储存"><a href="#文件储存" class="headerlink" title="文件储存"></a>文件储存</h1><p>文件存储是Android中最基本的一种数据存储方式，它不对存储的内容进行任何的格式化处理，所有数据都是原封不动地保存到文件当中的，因而它比较适合用于存储一些简单的文本数据或二进制数据。如果你想使用文件存储的方式来保存一些较为复杂的文本数据，就需要定义一套自己的格式规范，这样可以方便之后将数据从文件中重新解析出来。</p><h2 id="将数据储存到文件中"><a href="#将数据储存到文件中" class="headerlink" title="将数据储存到文件中"></a>将数据储存到文件中</h2><p>Context类中提供了一个openFileOutput()方法，可以用于将数据存储到指定的文件中，这个方法接收两个参数。</p><p>第一个参数是文件名，在文件创建的时候使用的就是这个名称，注意这里指定的文件名不可以包含路径，因为所有的文件都是默认存储到/data/data/<package name="">/files/目录下的。</package></p><p>第二个参数是文件的操作模式，主要有两种模式可选，MODE_PRIVATE和MODE_APPEND。其中MODE_PRIVATE是默认的操作模式，表示当指定同样文件名的时候，所写入的内容将会覆盖原文件中的内容，而MODE_APPEND则表示如果该文件已存在，就往文件里面追加内容，不存在就创建新文件。</p><p>其实文件的操作模式本来还有另外两种：MODE_WORLD_READABLE和MODE_WORLD_WRITEABLE，这两种模式表示允许其他的应用程序对我们程序中的文件进行读写操作，不过由于这两种模式过于危险，很容易引起应用的安全性漏洞，已在Android 4.2版本中被废弃。</p><ul><li>openFileOutput ()方法返回的是一个FileOutputStream对象，得到了这个对象之后就可以使用Java流的方式将数据写入到文件中了。</li></ul><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">String data = <span class="string">"Data to save"</span>;</span><br><span class="line">FileOutputStream <span class="keyword">out</span> = <span class="literal">null</span>;</span><br><span class="line">BufferedWriter writer = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">out</span> = openFileOutput(<span class="string">"data"</span>, Context.MODE_PRIVATE);</span><br><span class="line">writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(<span class="keyword">out</span>));</span><br><span class="line">writer.write(data);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (writer != <span class="literal">null</span>) &#123;</span><br><span class="line">writer.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里通过openFileOutput()方法能够得到一个FileOutputStream对象，然后再借助它构建出一个OutputStreamWriter对象，接着再使用OutputStreamWriter构建出一个BufferedWriter对象，这样你就可以通过BufferedWriter来将文本内容写入到文件中了。</p><ul><li>编写FilePersistenceTest项目进行测试<ul><li>在MainActivity布局中添加一个文本输入框</li><li>编辑MainActivity中的代码</li></ul></li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EditText</span> editText;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        editText=findViewById(<span class="type">R</span>.id.edit);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> inputText=editText.getText().toString();</span><br><span class="line">        save(inputText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void save(<span class="type">String</span> inputText)&#123;</span><br><span class="line">        <span class="type">FileOutputStream</span> out=<span class="literal">null</span>;</span><br><span class="line">        <span class="type">BufferedWriter</span> writer=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            out=openFileOutput(<span class="string">"data"</span>,<span class="type">Context</span>.<span class="type">MODE_PRIVATE</span>);</span><br><span class="line">            writer=<span class="keyword">new</span> <span class="type">BufferedWriter</span>(<span class="keyword">new</span> <span class="type">OutputStreamWriter</span>(out));</span><br><span class="line">            writer.write(inputText);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(<span class="type">IOException</span> e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(writer!=<span class="literal">null</span>)&#123;</span><br><span class="line">                    writer.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span>(<span class="type">IOException</span> e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里在输入框中输入一些字符串，按下返回键，在活动被销毁时将文字存入data文件中</p><ul><li>在新版本的Android Studio中已经弃用了书上使用的Android Device Monitor，因此这里查看文件直接用Android Studio右下角的文件管理器即可，非常方便<br><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/fileManagerLocation.png" alt=""><br><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/FileWrite.png" alt=""></li></ul><h2 id="从文件中读取数据"><a href="#从文件中读取数据" class="headerlink" title="从文件中读取数据"></a>从文件中读取数据</h2><p>Context类中还提供了一个openFileInput()方法，用于从文件中读取数据。这个方法要比openFileOutput()简单一些，它只接收一个参数，即要读取的文件名，然后系统会自动到/data/data/<package name="">/files/目录下去加载这个文件，并返回一个FileInputStream对象，得到了这个对象之后再通过Java流的方式就可以将数据读取出来了。</package></p><ul><li>代码示例</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> load() &#123;</span><br><span class="line">FileInputStream in = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">BufferedReader</span> reader = <span class="keyword">null</span>;</span><br><span class="line">StringBuilder content = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">in = openFileInput(<span class="string">"data"</span>);</span><br><span class="line">reader = <span class="keyword">new</span> <span class="keyword">BufferedReader</span>(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line"><span class="keyword">String</span> <span class="built_in">line</span> = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">while</span> ((<span class="built_in">line</span> = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">content.<span class="built_in">append</span>(<span class="built_in">line</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (reader != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">reader.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> content.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先通过openFileInput()方法获取到了一个FileInputStream对象，然后借助它又构建出了一个InputStreamReader对象，接着再使用InputStreamReader构建出一个BufferedReader对象，这样我们就可以通过BufferedReader进行一行行地读取，把文件中所有的文本内容全部读取出来，并存放在一个StringBuilder对象中，最后将读取到的内容返回就可以了。</p><ul><li>修改MainActivity实现启动程序读取文件中的内容至输入框中</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class MainActivity extends AppCompatActivity &#123;</span><br><span class="line">    <span class="keyword">private</span> EditText editText;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        editText=findViewById(R.id.edit);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">String</span> inputText=load();</span><br><span class="line">        <span class="keyword">if</span>(!TextUtils.isEmpty(inputText))&#123;</span><br><span class="line">            editText.setText(inputText);</span><br><span class="line">            editText.setSelection(inputText.length());</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">"恢复成功"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> load()&#123;</span><br><span class="line">        FileInputStream in=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">BufferedReader</span> reader=<span class="keyword">null</span>;</span><br><span class="line">        StringBuilder content=<span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            in=openFileInput(<span class="string">"data"</span>);</span><br><span class="line">            reader=<span class="keyword">new</span> <span class="keyword">BufferedReader</span>(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">            <span class="keyword">String</span> <span class="built_in">line</span>=<span class="string">""</span>;</span><br><span class="line">            <span class="keyword">while</span>((<span class="built_in">line</span>=reader.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                content.<span class="built_in">append</span>(<span class="built_in">line</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(reader!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    reader.close();</span><br><span class="line">                &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> content.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">String</span> inputText=editText.getText().toString();</span><br><span class="line">        <span class="built_in">save</span>(inputText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="built_in">save</span>(<span class="keyword">String</span> inputText)&#123;</span><br><span class="line">        FileOutputStream out=<span class="keyword">null</span>;</span><br><span class="line">        BufferedWriter writer=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            out=openFileOutput(<span class="string">"data"</span>,Context.MODE_PRIVATE);</span><br><span class="line">            writer=<span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(out));</span><br><span class="line">            writer.write(inputText);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(writer!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    writer.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在onCreate()方法中调用load()方法来读取文件中存储的文本内容，如果读到的内容不为null，就调用EditText的setText()方法将内容填充到EditText里，并调用setSelection()方法将输入光标移动到文本的末尾位置以便于继续输入，然后弹出一句还原成功的提示。</p><p>上述代码在对字符串进行非空判断的时候使用了TextUtils.isEmpty()方法，这是一个非常好用的方法，它可以一次性进行两种空值的判断。当传入的字符串等于null或者等于空字符串的时候，这个方法都会返回true，从而使得我们不需要先单独判断这两种空值再使用逻辑运算符连接起来了。</p><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/FileRead.png" alt=""></p><ul><li>文件的储存并不适用于一些比较复杂的文本数据</li></ul><h1 id="SharedPreferences储存"><a href="#SharedPreferences储存" class="headerlink" title="SharedPreferences储存"></a>SharedPreferences储存</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>不同于文件的存储方式，SharedPreferences是使用键值对的方式来存储数据的。也就是说，当保存一条数据的时候，需要给这条数据提供一个对应的键，这样在读取数据的时候就可以通过这个键把相应的值取出来。而且SharedPreferences还支持多种不同的数据类型存储，如果存储的数据类型是整型，那么读取出来的数据也是整型的；如果存储的数据是一个字符串，那么读取出来的数据仍然是字符串。</p><p>要使用SharedPreferences需要先获取SharedPreferences对象，Android中主要提供了三种方法用于获取SharedPreferences对象。</p><ul><li>Context类中的getSharedPreferences()方法：此方法接收两个参数，第一个参数用于指定SharedPreferences文件的名称，如果指定的文件不存在则会创建一个，SharedPreferences文件都是存放在/data/data/<package name="">/shared_prefs/目录下的。第二个参数用于指定操作模式，目前只有MODE_PRIVATE这一种模式可选，它是默认的操作模式，和直接传入0效果是相同的，表示只有当前的应用程序才可以对这个SharedPreferences文件进行读写。其他几种操作模式均已被废弃，MODE_WORLD_READABLE和MODE_WORLD_WRITEABLE这两种模式是在Android 4.2版本中被废弃的，MODE_MULTI_PROCESS模式是在Android 6.0版本中被废弃的。</package></li><li>Activity类中的getPreferences()方法：这个方法和Context中的getSharedPreferences()方法很相似，不过它只接收一个操作模式参数，因为使用这个方法时会自动将当前活动的类名作为SharedPreferences的文件名。</li><li>PreferenceManager类中的getDefaultSharedPreferences()方法：这是一个静态方法，它接收一个Context参数，并自动使用当前应用程序的包名作为前缀来命名SharedPreferences文件。得到了SharedPreferences对象之后，就可以开始向SharedPreferences文件中存储数据了，主要可以分为3步实现。<ul><li>调用SharedPreferences对象的edit()方法来获取一个SharedPreferences.Editor对象。</li><li>向SharedPreferences.Editor对象中添加数据，比如添加一个布尔型数据就使用putBoolean()方法，添加一个字符串则使用putString()方法，以此类推。</li><li>调用apply()方法将添加的数据提交，从而完成数据存储操作。</li></ul></li></ul><h2 id="新建SharedPreferencesTest项目"><a href="#新建SharedPreferencesTest项目" class="headerlink" title="新建SharedPreferencesTest项目"></a>新建SharedPreferencesTest项目</h2><h3 id="写入数据"><a href="#写入数据" class="headerlink" title="写入数据"></a>写入数据</h3><ul><li>修改activity_main.xml中的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_horizontal|center_vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/button"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"储存"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加了一个按钮</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Button</span> button;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        button=findViewById(<span class="type">R</span>.id.button);</span><br><span class="line"></span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                <span class="type">SharedPreferences</span>.<span class="type">Editor</span> editor=getSharedPreferences(<span class="string">"data"</span>,<span class="type">MODE_PRIVATE</span>).edit();</span><br><span class="line">                editor.putString(<span class="string">"name"</span>,<span class="string">"Zanecode6574"</span>);</span><br><span class="line">                editor.putInt(<span class="string">"age"</span>,<span class="number">99</span>);</span><br><span class="line">                editor.putBoolean(<span class="string">"married"</span>,<span class="literal">false</span>);</span><br><span class="line">                editor.apply();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里首先给按钮注册了一个点击事件，然后在点击事件中通过getSharedPreferences()方法指定SharedPreferences的文件名为data，并得到了SharedPreferences.Editor对象。接着向这个对象中添加了3条不同类型的数据，最后调用apply()方法进行提交，从而完成了数据存储的操作。</p><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/SharedPreferencesWrite.png" alt=""></p><h3 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h3><p>从SharedPreferences文件中读取数据会更加地简单。SharedPreferences对象中提供了一系列的get方法，用于对存储的数据进行读取，每种get方法都对应了SharedPreferences.Editor中的一种put方法，比如读取一个布尔型数据就使用getBoolean()方法，读取一个字符串就使用getString()方法。这些get方法都接收两个参数，第一个参数是键，传入存储数据时使用的键就可以得到相应的值了；第二个参数是默认值，即表示当传入的键找不到对应的值时会以什么样的默认值进行返回。</p><ul><li>修改activity_main.xml的代码，添加一个读取数据用的按钮</li><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Button button;</span><br><span class="line">    <span class="keyword">private</span> Button button2;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        button=findViewById(R.id.button);</span><br><span class="line">        button2=findViewById(R.id.button2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SharedPreferences.Editor editor=getSharedPreferences(<span class="string">"data"</span>,MODE_PRIVATE).edit();</span><br><span class="line">                editor.putString(<span class="string">"name"</span>,<span class="string">"Zanecode6574"</span>);</span><br><span class="line">                editor.putInt(<span class="string">"age"</span>,<span class="number">99</span>);</span><br><span class="line">                editor.putBoolean(<span class="string">"married"</span>,<span class="keyword">false</span>);</span><br><span class="line">                editor.apply();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        button2.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SharedPreferences pref=getSharedPreferences(<span class="string">"data"</span>,MODE_PRIVATE);</span><br><span class="line">                String name=pref.getString(<span class="string">"name"</span>,<span class="string">""</span>);</span><br><span class="line">                <span class="keyword">int</span> age=pref.getInt(<span class="string">"age"</span>,<span class="number">999</span>);</span><br><span class="line">                <span class="keyword">boolean</span> married=pref.getBoolean(<span class="string">"married"</span>,<span class="keyword">false</span>);</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, name+<span class="string">" "</span>+age+<span class="string">" "</span>+married, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在还原数据按钮的点击事件中首先通过getSharedPreferences()方法得到了SharedPreferences对象，然后分别调用它的getString()、getInt()和getBoolean()方法，去获取前面所存储的姓名、年龄和是否已婚，如果没有找到相应的值，就会使用方法中传入的默认值来代替</p><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/SharedPreferencesRead.png" alt=""></p><h2 id="实现记住密码功能"><a href="#实现记住密码功能" class="headerlink" title="实现记住密码功能"></a>实现记住密码功能</h2><p>这里使用之前强制下线的项目代码即可，打开BroadcastPractice项目</p><ul><li>修改activity_login.xml中的代码，添加一个选择框</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".LoginActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"30dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"账号"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/EditText_UserName"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"输入账号"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">"30dp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"30dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"密码"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/EditText_Password"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"输入密码"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">"30dp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">CheckBox</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/remember_pass"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"记住密码"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/Button_Login"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"登陆"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改LoginActivity中的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">LoginActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EditText</span> userNameEdit;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EditText</span> passwordEdit;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">CheckBox</span> checkBox;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">SharedPreferences</span> pref;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">SharedPreferences</span>.<span class="type">Editor</span> editor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_login);</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> loginButton=findViewById(<span class="type">R</span>.id.<span class="type">Button_Login</span>);</span><br><span class="line">        checkBox=findViewById(<span class="type">R</span>.id.remember_pass);</span><br><span class="line">        userNameEdit=findViewById(<span class="type">R</span>.id.<span class="type">EditText_UserName</span>);</span><br><span class="line">        passwordEdit=findViewById(<span class="type">R</span>.id.<span class="type">EditText_Password</span>);</span><br><span class="line"></span><br><span class="line">        pref=<span class="type">PreferenceManager</span>.getDefaultSharedPreferences(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        boolean isRemember=pref.getBoolean(<span class="string">"isRemember"</span>,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(isRemember)&#123;</span><br><span class="line">            <span class="type">String</span> userName=pref.getString(<span class="string">"userName"</span>,<span class="string">""</span>);</span><br><span class="line">            <span class="type">String</span> password=pref.getString(<span class="string">"password"</span>,<span class="string">""</span>);</span><br><span class="line">            userNameEdit.setText(userName);</span><br><span class="line">            passwordEdit.setText(password);</span><br><span class="line">            checkBox.setChecked(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        loginButton.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                <span class="type">String</span> userName=userNameEdit.getText().toString();</span><br><span class="line">                <span class="type">String</span> password=passwordEdit.getText().toString();</span><br><span class="line">                <span class="keyword">if</span>(userName.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(password.toString().equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">                        editor=pref.edit();</span><br><span class="line">                        <span class="keyword">if</span>(checkBox.isChecked())&#123;</span><br><span class="line">                            editor.putBoolean(<span class="string">"isRemember"</span>,<span class="literal">true</span>);</span><br><span class="line">                            editor.putString(<span class="string">"userName"</span>,userName);</span><br><span class="line">                            editor.putString(<span class="string">"password"</span>,password);</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            editor.clear();</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        editor.apply();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        <span class="type">Intent</span> intent=<span class="keyword">new</span> <span class="type">Intent</span>(<span class="type">LoginActivity</span>.<span class="keyword">this</span>,<span class="type">MainActivity</span>.<span class="keyword">class</span>);</span><br><span class="line">                        startActivity(intent);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="type">Toast</span>.makeText(<span class="type">LoginActivity</span>.<span class="keyword">this</span>, <span class="string">"输入有误！"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里首先在onCreate()方法中获取到了SharedPreferences对象，然后调用它的getBoolean()方法去获取remember_password这个键对应的值。一开始当然不存在对应的值了，所以会使用默认值false，这样就什么都不会发生。接着在登录成功之后，会调用CheckBox的isChecked()方法来检查复选框是否被选中，如果被选中了，则表示用户想要记住密码，这时将remember_password设置为true，然后把account和password对应的值都存入到SharedPreferences文件当中并提交。如果没有被选中，就简单地调用一下clear()方法，将SharedPreferences文件中的数据全部清除掉。<br>当用户选中了记住密码复选框，并成功登录一次之后，remember_password键对应的值就是true了，这个时候如果再重新启动登录界面，就会从SharedPreferences文件中将保存的账号和密码都读取出来，并填充到文本输入框中，然后把记住密码复选框选中，这样就完成记住密码的功能了。</p><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/rememberPass.png" alt=""></p><h1 id="SQLite数据库储存"><a href="#SQLite数据库储存" class="headerlink" title="SQLite数据库储存"></a>SQLite数据库储存</h1><p>SQLite是一款轻量级的关系型数据库，它的运算速度非常快，占用资源很少，通常只需要几百KB的内存就足够了，因而特别适合在移动设备上使用。SQLite不仅支持标准的SQL语法，还遵循了数据库的ACID事务，所以只要你以前使用过其他的关系型数据库，就可以很快地上手SQLite。而SQLite又比一般的数据库要简单得多，它甚至不用设置用户名和密码就可以使用。Android正是把这个功能极为强大的数据库嵌入到了系统当中，使得本地持久化的功能有了一次质的飞跃。</p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>Android为了让我们能够更加方便地管理数据库，专门提供了一个SQLiteOpenHelper帮助类，借助这个类就可以非常简单地对数据库进行创建和升级。</p><p>SQLiteOpenHelper是一个抽象类，这意味着如果我们想要使用它的话，就需要创建一个自己的帮助类去继承它。</p><p>SQLiteOpenHelper中有两个抽象方法，分别是onCreate()和onUpgrade()，我们必须在自己的帮助类里面重写这两个方法，然后分别在这两个方法中去实现创建、升级数据库的逻辑。</p><p>SQLiteOpenHelper中还有两个非常重要的实例方法：getReadableDatabase()和getWritableDatabase()。这两个方法都可以创建或打开一个现有的数据库（如果数据库已存在则直接打开，否则创建一个新的数据库），并返回一个可对数据库进行读写操作的对象。不同的是，当数据库不可写入的时候（如磁盘空间已满），getReadableDatabase()方法返回的对象将以只读的方式去打开数据库，而getWritableDatabase()方法则将出现异常。</p><p>SQLiteOpenHelper中有两个构造方法可供重写，一般使用参数少一点的那个构造方法即可。这个构造方法中接收4个参数，第一个参数是Context，这个没什么好说的，必须要有它才能对数据库进行操作。第二个参数是数据库名，创建数据库时使用的就是这里指定的名称。第三个参数允许我们在查询数据的时候返回一个自定义的Cursor，一般都是传入null。第四个参数表示当前数据库的版本号，可用于对数据库进行升级操作。构建出SQLiteOpenHelper的实例之后，再调用它的getReadableDatabase()或getWritableDatabase()方法就能够创建数据库了，数据库文件会存放在/data/data/<package name="">/databases/目录下。此时，重写的onCreate()方法也会得到执行，所以通常会在这里去处理一些创建表的逻辑。</package></p><ul><li>创建一个DatabaseTest项目</li><li>新建一个MyDatabaseHelper类继承自SQLiteOpenHelper</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_BOOK=<span class="string">"create table Book("</span>+<span class="string">"id integer primary key autoincrement,"</span>+<span class="string">"author text"</span>+<span class="string">"price real,"</span>+<span class="string">"pages integer,"</span>+<span class="string">"name text)"</span>;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDatabaseHelper</span><span class="params">(Context context, String name, SQLiteDatabase.CursorFactory factory,<span class="keyword">int</span> version)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context,name,factory,version);</span><br><span class="line">        mContext=context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class="line">        db.execSQL(CREATE_BOOK);</span><br><span class="line">        Toast.makeText(mContext, <span class="string">"创建数据库成功"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123; &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把建表语句定义成了一个字符串常量，然后在onCreate()方法中又调用了SQLiteDatabase的execSQL()方法去执行这条建表语句，并弹出一个Toast提示创建成功，这样就可以保证在数据库创建完成的同时还能成功创建Book表。</p><ul><li>修改activity_main.xml中的代码添加一个创建数据库的按钮</li><li>修改MainActivity中的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Button</span> crerateDatabase;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">MyDatabaseHelper</span> dbHelper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        dbHelper=<span class="keyword">new</span> <span class="type">MyDatabaseHelper</span>(<span class="keyword">this</span>,<span class="string">"BookStore"</span>,<span class="literal">null</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        crerateDatabase=findViewById(<span class="type">R</span>.id.create_database);</span><br><span class="line"></span><br><span class="line">        crerateDatabase.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                dbHelper.getWritableDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="升级数据库"><a href="#升级数据库" class="headerlink" title="升级数据库"></a>升级数据库</h2><p>MyDatabaseHelper中还有一个空方法,onUpgrade()方法是用于对数据库进行升级的，它在整个数据库的管理工作当中起着非常重要的作用.</p><p>目前DatabaseTest项目中已经有一张Book表用于存放书的各种详细数据，如果我们想再添加一张Category表用于记录图书的分类，比如Category表中有id（主键）、分类名和分类代码这几个列，那么建表语句就可以写成</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">Category</span> (</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">integer</span> primary <span class="keyword">key</span> autoincrement,</span><br><span class="line">category_name <span class="built_in">text</span>,</span><br><span class="line">category_code <span class="built_in">integer</span>)</span><br></pre></td></tr></table></figure><ul><li>修改MydatabaseHelper</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_BOOK=<span class="string">"create table Book("</span>+<span class="string">"id integer primary key autoincrement,"</span>+<span class="string">"author text"</span>+<span class="string">"price real,"</span>+<span class="string">"pages integer,"</span>+<span class="string">"name text)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CREATE_CATEGORY=<span class="string">"create table Category ("</span>+<span class="string">"id integer primary key autoincrement,"</span>+<span class="string">"category_name text,"</span>+<span class="string">"category_code integer)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDatabaseHelper</span><span class="params">(Context context, String name, SQLiteDatabase.CursorFactory factory,<span class="keyword">int</span> version)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context,name,factory,version);</span><br><span class="line">        mContext=context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class="line">        db.execSQL(CREATE_BOOK);</span><br><span class="line">        db.execSQL(CREATE_CATEGORY);</span><br><span class="line">        Toast.makeText(mContext, <span class="string">"创建数据库成功"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line">        db.execSQL(<span class="string">"drop table if exists Book"</span>);</span><br><span class="line">        db.execSQL(<span class="string">"drop table if exists Category"</span>);</span><br><span class="line">        onCreate(db);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改MainActivity</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Button</span> crerateDatabase;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">MyDatabaseHelper</span> dbHelper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        dbHelper=<span class="keyword">new</span> <span class="type">MyDatabaseHelper</span>(<span class="keyword">this</span>,<span class="string">"BookStore"</span>,<span class="literal">null</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        crerateDatabase=findViewById(<span class="type">R</span>.id.create_database);</span><br><span class="line"></span><br><span class="line">        crerateDatabase.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                dbHelper.getWritableDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要触发数据库升级的操作，就要传入一个更大的参数给MyDatabaseHelper，之前是1，由于我个人测试了几次，所以是4，其实只要比上一次创建的时候的值大就会触发升级，在升级函数中又对之前的数据库进行了删除，所以即使存在也没有关系，会重新创建（实际中应该不是这样吧，万一之前的表中还有数据？）</p><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/sqliteUpgrade.png" alt=""></p><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><p>对数据进行的操作无非有4种，即CRUD。其中C代表添加（Create），R代表查询（Retrieve），U代表更新（Update），D代表删除（Delete）。</p><p>开发者的水平总会是参差不齐的，未必每一个人都能非常熟悉地使用SQL语言，因此Android也提供了一系列的辅助性方法，使得在Android中即使不去编写SQL语句，也能轻松完成所有的CRUD操作。</p><p>调用SQLiteOpenHelper的getReadableDatabase()或getWritableDatabase()方法是可以用于创建和升级数据库的，不仅如此，这两个方法还都会返回一个SQLiteDatabase对象，借助这个对象就可以对数据进行CRUD操作了。</p><p>SQLiteDatabase中提供了一个insert()方法，这个方法就是专门用于添加数据的。它接收3个参数，第一个参数是表名，我们希望向哪张表里添加数据，这里就传入该表的名字。第二个参数用于在未指定添加数据的情况下给某些可为空的列自动赋值NULL，一般我们用不到这个功能，直接传入null即可。第三个参数是一个ContentValues对象，它提供了一系列的put()方法重载，用于向ContentValues中添加数据，只需要将表中的每个列名以及相应的待添加数据传入即可。</p><ul><li>修改activity_main.xml的代码,增加一个添加数据的按钮</li><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Button crerateDatabase;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyDatabaseHelper dbHelper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        dbHelper=<span class="keyword">new</span> MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">"BookStore.db"</span>,<span class="keyword">null</span>,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        crerateDatabase=findViewById(R.id.create_database);</span><br><span class="line">        Button addData=findViewById(R.id.add_data);</span><br><span class="line"></span><br><span class="line">        crerateDatabase.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                dbHelper.getWritableDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        addData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">                ContentValues values=<span class="keyword">new</span> ContentValues();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//开始组装第一条数据</span></span><br><span class="line">                values.put(<span class="string">"name"</span>,<span class="string">"ZaneCode6574"</span>);</span><br><span class="line">                values.put(<span class="string">"author"</span>,<span class="string">"ZaneCode6574"</span>);</span><br><span class="line">                values.put(<span class="string">"pages"</span>,<span class="number">454</span>);</span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">99.99</span>);</span><br><span class="line">                db.insert(<span class="string">"Book"</span>,<span class="keyword">null</span>,values);</span><br><span class="line">                values.clear();</span><br><span class="line">                <span class="comment">//开始组装第二条数据</span></span><br><span class="line">                values.put(<span class="string">"name"</span>,<span class="string">"Z6574"</span>);</span><br><span class="line">                values.put(<span class="string">"author"</span>,<span class="string">"Ze6574"</span>);</span><br><span class="line">                values.put(<span class="string">"pages"</span>,<span class="number">454</span>);</span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">99.99</span>);</span><br><span class="line">                db.insert(<span class="string">"Book"</span>,<span class="keyword">null</span>,values);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/sqliteInsert.png" alt=""></p><h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h2><p>SQLiteDatabase中也提供了一个非常好用的update()方法，用于对数据进行更新，这个方法接收4个参数，第一个参数和insert()方法一样，也是表名，在这里指定去更新哪张表里的数据。第二个参数是ContentValues对象，要把更新数据在这里组装进去。第三、第四个参数用于约束更新某一行或某几行中的数据，不指定的话默认就是更新所有行。</p><ul><li>修改activity_main.xml中的代码，添加一个更新数据的按钮</li><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Button crerateDatabase;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyDatabaseHelper dbHelper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        dbHelper=<span class="keyword">new</span> MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">"BookStore.db"</span>,<span class="keyword">null</span>,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        crerateDatabase=findViewById(R.id.create_database);</span><br><span class="line">        Button addData=findViewById(R.id.add_data);</span><br><span class="line">        Button updateData=findViewById(R.id.update_data);</span><br><span class="line"></span><br><span class="line">        crerateDatabase.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                dbHelper.getWritableDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        addData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">                ContentValues values=<span class="keyword">new</span> ContentValues();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//开始组装第一条数据</span></span><br><span class="line">                values.put(<span class="string">"name"</span>,<span class="string">"ZaneCode6574"</span>);</span><br><span class="line">                values.put(<span class="string">"author"</span>,<span class="string">"ZaneCode6574"</span>);</span><br><span class="line">                values.put(<span class="string">"pages"</span>,<span class="number">454</span>);</span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">99.99</span>);</span><br><span class="line">                db.insert(<span class="string">"Book"</span>,<span class="keyword">null</span>,values);</span><br><span class="line">                values.clear();</span><br><span class="line">                <span class="comment">//开始组装第二条数据</span></span><br><span class="line">                values.put(<span class="string">"name"</span>,<span class="string">"Z6574"</span>);</span><br><span class="line">                values.put(<span class="string">"author"</span>,<span class="string">"Ze6574"</span>);</span><br><span class="line">                values.put(<span class="string">"pages"</span>,<span class="number">454</span>);</span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">99.99</span>);</span><br><span class="line">                db.insert(<span class="string">"Book"</span>,<span class="keyword">null</span>,values);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        updateData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">                ContentValues values=<span class="keyword">new</span> ContentValues();</span><br><span class="line"></span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">100</span>);</span><br><span class="line">                db.update(<span class="string">"Book"</span>,values,<span class="string">"name=?"</span>,<span class="keyword">new</span> String[]&#123;<span class="string">"Z6574"</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/sqliteUpdate.png" alt=""></p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>SQLiteDatabase中提供了一个delete()方法，专门用于删除数据，这个方法接收3个参数，第一个参数仍然是表名，这个已经没什么好说的了，第二、第三个参数又是用于约束删除某一行或某几行的数据，不指定的话默认就是删除所有行。</p><ul><li>修改activity_main.xml的代码，添加一个删除按钮</li><li>修改MainActivity的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Button crerateDatabase;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyDatabaseHelper dbHelper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        dbHelper=<span class="keyword">new</span> MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">"BookStore.db"</span>,<span class="keyword">null</span>,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        crerateDatabase=findViewById(R.id.create_database);</span><br><span class="line">        Button addData=findViewById(R.id.add_data);</span><br><span class="line">        Button updateData=findViewById(R.id.update_data);</span><br><span class="line">        Button deleteData=findViewById(R.id.delete_data);</span><br><span class="line"></span><br><span class="line">        crerateDatabase.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                dbHelper.getWritableDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        addData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">                ContentValues values=<span class="keyword">new</span> ContentValues();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//开始组装第一条数据</span></span><br><span class="line">                values.put(<span class="string">"name"</span>,<span class="string">"ZaneCode6574"</span>);</span><br><span class="line">                values.put(<span class="string">"author"</span>,<span class="string">"ZaneCode6574"</span>);</span><br><span class="line">                values.put(<span class="string">"pages"</span>,<span class="number">454</span>);</span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">99.99</span>);</span><br><span class="line">                db.insert(<span class="string">"Book"</span>,<span class="keyword">null</span>,values);</span><br><span class="line">                values.clear();</span><br><span class="line">                <span class="comment">//开始组装第二条数据</span></span><br><span class="line">                values.put(<span class="string">"name"</span>,<span class="string">"Z6574"</span>);</span><br><span class="line">                values.put(<span class="string">"author"</span>,<span class="string">"Ze6574"</span>);</span><br><span class="line">                values.put(<span class="string">"pages"</span>,<span class="number">454</span>);</span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">99.99</span>);</span><br><span class="line">                db.insert(<span class="string">"Book"</span>,<span class="keyword">null</span>,values);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        updateData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">                ContentValues values=<span class="keyword">new</span> ContentValues();</span><br><span class="line"></span><br><span class="line">                values.put(<span class="string">"price"</span>,<span class="number">100</span>);</span><br><span class="line">                db.update(<span class="string">"Book"</span>,values,<span class="string">"name=?"</span>,<span class="keyword">new</span> String[]&#123;<span class="string">"Z6574"</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        deleteData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">                db.delete(<span class="string">"Book"</span>,<span class="string">"pages&gt;?"</span>,<span class="keyword">new</span> String[]&#123;<span class="string">"400"</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><p>查询是CRUD中最复杂的一种操作，SQLiteDatabase中还提供了一个query()方法用于对数据进行查询。这个方法的参数非常复杂，最短的一个方法重载也需要传入7个参数。那我们就先来看一下这7个参数各自的含义吧。第一个参数不用说，当然还是表名，表示我们希望从哪张表中查询数据。第二个参数用于指定去查询哪几列，如果不指定则默认查询所有列。第三、第四个参数用于约束查询某一行或某几行的数据，不指定则默认查询所有行的数据。第五个参数用于指定需要去group by的列，不指定则表示不对查询结果进行group by操作。第六个参数用于对group by之后的数据进行进一步的过滤，不指定则表示不进行过滤。第七个参数用于指定查询结果的排序方式，不指定则表示使用默认的排序方式。更多详细的内容可以参考下表。调用query()方法后会返回一个Cursor对象，查询到的所有数据都将从这个对象中取出</p><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/query.png" alt=""></p><ul><li>修改activity_main.xml的代码添加一个查询按钮</li><li>修改MainActivity中的代码</li></ul><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class MainActivity extends AppCompatActivity &#123;</span><br><span class="line">    <span class="keyword">private</span> Button crerateDatabase;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyDatabaseHelper dbHelper;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        dbHelper=<span class="keyword">new</span> MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">"BookStore.db"</span>,null,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">        crerateDatabase=findViewById(R.id.create_database);</span><br><span class="line">        Button addData=findViewById(R.id.add_data);</span><br><span class="line">        Button updateData=findViewById(R.id.update_data);</span><br><span class="line">        Button deleteData=findViewById(R.id.delete_data);</span><br><span class="line">        Button queryData=findViewById(R.id.query_data);</span><br><span class="line"></span><br><span class="line">        crerateDatabase.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> onClick(View v) &#123;</span><br><span class="line">                dbHelper.getWritableDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        addData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> onClick(View v) &#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">                ContentValues values=<span class="keyword">new</span> ContentValues();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//开始组装第一条数据</span></span><br><span class="line">                values.<span class="built_in">put</span>(<span class="string">"name"</span>,<span class="string">"ZaneCode6574"</span>);</span><br><span class="line">                values.<span class="built_in">put</span>(<span class="string">"author"</span>,<span class="string">"ZaneCode6574"</span>);</span><br><span class="line">                values.<span class="built_in">put</span>(<span class="string">"pages"</span>,<span class="number">454</span>);</span><br><span class="line">                values.<span class="built_in">put</span>(<span class="string">"price"</span>,<span class="number">99.99</span>);</span><br><span class="line">                db.insert(<span class="string">"Book"</span>,null,values);</span><br><span class="line">                values.<span class="built_in">clear</span>();</span><br><span class="line">                <span class="comment">//开始组装第二条数据</span></span><br><span class="line">                values.<span class="built_in">put</span>(<span class="string">"name"</span>,<span class="string">"Z6574"</span>);</span><br><span class="line">                values.<span class="built_in">put</span>(<span class="string">"author"</span>,<span class="string">"Ze6574"</span>);</span><br><span class="line">                values.<span class="built_in">put</span>(<span class="string">"pages"</span>,<span class="number">454</span>);</span><br><span class="line">                values.<span class="built_in">put</span>(<span class="string">"price"</span>,<span class="number">99.99</span>);</span><br><span class="line">                db.insert(<span class="string">"Book"</span>,null,values);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        updateData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> onClick(View v) &#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">                ContentValues values=<span class="keyword">new</span> ContentValues();</span><br><span class="line"></span><br><span class="line">                values.<span class="built_in">put</span>(<span class="string">"price"</span>,<span class="number">100</span>);</span><br><span class="line">                db.update(<span class="string">"Book"</span>,values,<span class="string">"name=?"</span>,<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;<span class="string">"Z6574"</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        deleteData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> onClick(View v) &#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line">                db.<span class="keyword">delete</span>(<span class="string">"Book"</span>,<span class="string">"pages&gt;?"</span>,<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;<span class="string">"400"</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        queryData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> onClick(View v) &#123;</span><br><span class="line">                SQLiteDatabase db=dbHelper.getWritableDatabase();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//查询Book表的所有数据</span></span><br><span class="line">                Cursor <span class="built_in">cursor</span>=db.query(<span class="string">"Book"</span>,null,null,null,null,null,null);</span><br><span class="line">                <span class="built_in">if</span>(<span class="built_in">cursor</span>.moveToFirst()) &#123;</span><br><span class="line">                    <span class="built_in">do</span> &#123;</span><br><span class="line">                        <span class="keyword">String</span> name = <span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"name"</span>));</span><br><span class="line">                        <span class="keyword">String</span> author = <span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"author"</span>));</span><br><span class="line">                        <span class="keyword">int</span> pages = <span class="built_in">cursor</span>.getInt(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"pages"</span>));</span><br><span class="line">                        <span class="keyword">double</span> price = <span class="built_in">cursor</span>.getDouble(<span class="built_in">cursor</span>.getColumnIndex(<span class="string">"price"</span>));</span><br><span class="line">                        Log.d(<span class="string">"MainActivity"</span>, <span class="string">"书名:"</span> + name + <span class="string">"作者:"</span> + author + <span class="string">"价格:"</span> + price + <span class="string">"页数:"</span> + pages);</span><br><span class="line">                    &#125; <span class="built_in">while</span> (<span class="built_in">cursor</span>.moveToNext());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">cursor</span>.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/sqliteQuery.png" alt=""></p><h2 id="使用SQL操作数据库"><a href="#使用SQL操作数据库" class="headerlink" title="使用SQL操作数据库"></a>使用SQL操作数据库</h2><ul><li>添加数据的方法如下</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.execSQL("<span class="keyword">insert</span> <span class="keyword">into</span> Book (<span class="keyword">name</span>, author, pages, price) <span class="keyword">values</span>(?, ?, ?, ?)<span class="string">",</span></span><br><span class="line"><span class="string">new String[] &#123; "</span>The Da Vinci Code<span class="string">", "</span>Dan Brown<span class="string">", "</span><span class="number">454</span><span class="string">", "</span><span class="number">16.96</span><span class="string">" &#125;);</span></span><br><span class="line"><span class="string">db.execSQL("</span><span class="keyword">insert</span> <span class="keyword">into</span> Book (<span class="keyword">name</span>, author, pages, price) <span class="keyword">values</span>(?, ?, ?, ?)<span class="string">",</span></span><br><span class="line"><span class="string">new String[] &#123; "</span>The Lost Symbol<span class="string">", "</span>Dan Brown<span class="string">", "</span><span class="number">510</span><span class="string">", "</span><span class="number">19.95</span><span class="string">" &#125;);</span></span><br></pre></td></tr></table></figure><ul><li>更新数据的方法如下</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.execSQL("<span class="keyword">update</span> Book <span class="keyword">set</span> price = ? <span class="keyword">where</span> <span class="keyword">name</span> = ?<span class="string">", new String[] &#123; "</span><span class="number">10.99</span><span class="string">", "</span>The Da Vinci Code<span class="string">" &#125;);</span></span><br></pre></td></tr></table></figure><ul><li>删除数据的方法如下</li></ul><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.execSQL(<span class="string">"delete from Book where pages &gt; ?"</span>, <span class="keyword">new</span> <span class="keyword">String</span>[] &#123; <span class="string">"500"</span> &#125;);</span><br></pre></td></tr></table></figure><ul><li>查询数据的方法如下</li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.rawQuery(<span class="string">"select * from Book"</span>, <span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>使用这种方法建议学习一下数据库的书</p><h1 id="使用LitePal操作数据库"><a href="#使用LitePal操作数据库" class="headerlink" title="使用LitePal操作数据库"></a>使用LitePal操作数据库</h1><p>LitePal是一款开源的Android数据库框架，它采用了对象关系映射（ORM）的模式，并将我们平时开发最常用到的一些数据库功能进行了封装，使得不用编写一行SQL语句就可以完成各种建表和増删改查的操作。LitePal的项目主页上也有详细的使用文档，地址是：<a href="https://github.com/LitePalFramework/LitePal" target="_blank" rel="noopener">https://github.com/LitePalFramework/LitePal</a></p><p>过去的方式比较复杂，通常需要下载开源库的Jar包或者源码，然后再集成到我们的项目当中。而现在就简单得多了，大多数的开源项目都会将版本提交到jcenter上，我们只需要在app/build.gradle文件中声明该开源库的引用就可以了。</p><h2 id="新建一个LitePalTest项目"><a href="#新建一个LitePalTest项目" class="headerlink" title="新建一个LitePalTest项目"></a>新建一个LitePalTest项目</h2><h2 id="修改app-build-gradle文件，在dependencies闭包中添加如下内容"><a href="#修改app-build-gradle文件，在dependencies闭包中添加如下内容" class="headerlink" title="修改app/build.gradle文件，在dependencies闭包中添加如下内容"></a>修改app/build.gradle文件，在dependencies闭包中添加如下内容</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">implementation</span> <span class="string">'org.litepal.android:java:3.0.0'</span></span><br></pre></td></tr></table></figure><p>最新的版本建议自己到项目地址查看</p><h2 id="配置litepal-xml文件"><a href="#配置litepal-xml文件" class="headerlink" title="配置litepal.xml文件"></a>配置litepal.xml文件</h2><ul><li>右击app/src/main目录→New→Directory，创建一个assets目录，然后在assets目录下再新建一个litepal.xml文件，接着编辑litepal.xml文件中的内容，这里dbname标签用于指定数据库名，version标签用于指定数据库版本号，list标签用于指定所有的映射模型</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">litepal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dbname</span> <span class="attr">value</span>=<span class="string">"BookStore"</span> &gt;</span><span class="tag">&lt;/<span class="name">dbname</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span> <span class="attr">value</span>=<span class="string">"1"</span> &gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">litepal</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改AndroidManifest.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.zanecode6574.databasetest"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"org.litepal.LitePalApplication"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建数据库-1"><a href="#创建数据库-1" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>LitePal采取的是对象关系映射（ORM）的模式，简单点说，我们使用的编程语言是面向对象语言，而使用的数据库则是关系型数据库，那么将面向对象的语言和面向关系的数据库之间建立一种映射关系，这就是对象关系映射了。</p><p>对象关系映射模式赋予了我们一个强大的功能，就是可以用面向对象的思维来操作数据库，而不用再和SQL语句打交道了。在6.4.1小节中，为了创建一张Book表，需要先分析表中应该包含哪些列，然后再编写出一条建表语句，最后在自定义的SQLiteOpenHelper中去执行这条建表语句。但是使用LitePal，就可以用面向对象的思维来实现同样的功能了.</p><ul><li>将SQLiteTest项目的布局复制过来</li><li>定义一个Book类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zanecode6574.litepaltest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> price;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pages;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAuthor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAuthor</span><span class="params">(String author)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.author = author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getPrice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrice</span><span class="params">(<span class="keyword">double</span> price)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.price = price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPages</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPages</span><span class="params">(<span class="keyword">int</span> pages)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pages = pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个典型的Java bean，在Book类中我们定义了id、author、price、pages、name这几个字段，并生成了相应的getter和setter方法。Book类就会对应数据库中的Book表，而类中的每一个字段分别对应了表中的每一个列，这就是对象关系映射最直观的体验</p><ul><li>将Book类添加到映射模型列表当中，修改litepal.xml的代码</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">litepal</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dbname</span> <span class="attr">value</span>=<span class="string">"BookStore"</span> &gt;</span><span class="tag">&lt;/<span class="name">dbname</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span> <span class="attr">value</span>=<span class="string">"1"</span> &gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">class</span>=<span class="string">"com.zanecode6574.litepaltest.Book"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">litepal</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用<mapping>标签来声明我们要配置的映射模型类，注意一定要使用完整的类名。不管有多少模型类需要映射，都使用同样的方式配置在<list>标签下即可。</list></mapping></p><p>现在只需要执行一次任意的数据库操作，数据库就会被创建出来</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> createDatabase=findViewById(<span class="type">R</span>.id.create_database);</span><br><span class="line">        createDatabase.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                <span class="type">LitePal</span>.getDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里直接就创建好数据库了，十分方便.</p><p><strong>这里原书上使用的是Litepal的1.4.1，而最新的版本是3.0.0，如果在dependencies中使用org.litepal.android:core:3.0.0,在MainActivity中就会没有Litepal这个对象使用，需要修改为org.litepal.android:java:3.0.0，好像是因为litepal做了更新，氛分为java和kotlin两种语言的</strong></p><h2 id="升级数据库-1"><a href="#升级数据库-1" class="headerlink" title="升级数据库"></a>升级数据库</h2><p>这里解决了之前的疑问，之前的代码中升级数据库是将之前的表删除掉再建，而这里直接就可以完成，不用担心之前的表内数据丢失</p><h3 id="向Book类中添加一个press-出版社-列"><a href="#向Book类中添加一个press-出版社-列" class="headerlink" title="向Book类中添加一个press(出版社)列"></a>向Book类中添加一个press(出版社)列</h3><ul><li>修改Book中的代码，添加一个press字段,同时生成get和set方法<h3 id="添加一张Category表"><a href="#添加一张Category表" class="headerlink" title="添加一张Category表"></a>添加一张Category表</h3></li><li>新建一个Category类</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Category</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String categoryName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> categoryCode;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCategoryName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> categoryName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCategoryName</span><span class="params">(String categoryName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.categoryName = categoryName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCategoryCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> categoryCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCategoryCode</span><span class="params">(<span class="keyword">int</span> categoryCode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.categoryCode = categoryCode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改litepal.xml的代码，添加Category的映射和修改版本号</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">litepal</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dbname</span> <span class="attr">value</span>=<span class="string">"BookStore"</span> &gt;</span><span class="tag">&lt;/<span class="name">dbname</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span> <span class="attr">value</span>=<span class="string">"2"</span> &gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">class</span>=<span class="string">"com.zanecode6574.litepaltest.Book"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapping</span> <span class="attr">class</span>=<span class="string">"com.zanecode6574.litepaltest.Category"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">litepal</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/litepalUpdate.png" alt=""></p><h2 id="添加数据-1"><a href="#添加数据-1" class="headerlink" title="添加数据"></a>添加数据</h2><p>观察现有的模型类，你会发现它们都是没有继承结构的。因为LitePal进行表管理操作时不需要模型类有任何的继承结构，但是进行CRUD操作时就不行了，必须要继承自DataSupport类才行，因此这里我们需要先把继承结构给加上</p><ul><li>修改Book类的代码,让其继承自LitepalSupport类（原书用的DataSupport类，但是新版本中已经弃用并用前者代替）</li><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Button createDatabase=findViewById(R.id.create_database);</span><br><span class="line">        createDatabase.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                LitePal.getDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button addData=findViewById(R.id.add_data);</span><br><span class="line">        addData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Book book=<span class="keyword">new</span> Book();</span><br><span class="line">                book.setName(<span class="string">"ZaneCode6574的书"</span>);</span><br><span class="line">                book.setAuthor(<span class="string">"FFF"</span>);</span><br><span class="line">                book.setPages(<span class="number">666</span>);</span><br><span class="line">                book.setPrice(<span class="number">99.99</span>);</span><br><span class="line">                book.setPress(<span class="string">"大学出版社"</span>);</span><br><span class="line">                book.save();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/litepalAdd.png" alt=""></p><h2 id="更新数据-1"><a href="#更新数据-1" class="headerlink" title="更新数据"></a>更新数据</h2><p>更新数据要比添加数据稍微复杂一点，因为它的API接口比较多，这里我们只介绍最常用的几种更新方式。</p><p>首先，最简单的一种更新方式就是对已存储的对象重新设值，然后重新调用save()方法即可。</p><p>对于LitePal来说，对象是否已存储就是根据调用model.isSaved()方法的结果来判断的，返回true就表示已存储，返回false就表示未存储。</p><p>实际上只有在两种情况下model.isSaved()方法才会返回true，一种情况是已经调用过model.save()方法去添加数据了，此时model会被认为是已存储的对象。另一种情况是model对象是通过LitePal提供的查询API查出来的，由于是从数据库中查到的对象，因此也会被认为是已存储的对象。</p><p>由于查询API我们暂时还没学到，因此只能先通过第一种情况来进行验证.</p><ul><li>修改MainActivity代码（示例，弃用，首选下面的方法）</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity <span class="keyword">extends </span>AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(<span class="keyword">Bundle </span>savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState)<span class="comment">;</span></span><br><span class="line">        setContentView(R.layout.activity_main)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">Button </span>createDatabase=findViewById(R.id.create_database)<span class="comment">;</span></span><br><span class="line">        createDatabase.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                LitePal.getDatabase()<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">Button </span><span class="keyword">addData=findViewById(R.id.add_data);</span></span><br><span class="line"><span class="keyword"> </span>       <span class="keyword">addData.setOnClickListener(new </span>View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                <span class="keyword">Book </span><span class="keyword">book=new </span><span class="keyword">Book();</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setName("ZaneCode6574的书");</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setAuthor("FFF");</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setPages(666);</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setPrice(99.99);</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setPress("大学出版社");</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.save();</span></span><br><span class="line"><span class="keyword"> </span>           &#125;</span><br><span class="line">        &#125;)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">Button </span>updateData=findViewById(R.id.update_data)<span class="comment">;</span></span><br><span class="line">        updateData.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                <span class="keyword">Book </span><span class="keyword">book=new </span><span class="keyword">Book();</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setName("Zanecode6574的第二本书");</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setAuthor("ZZZ");</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setPrice(98.88);</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setPages(1000);</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setPress("不知道");</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.save();</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.setPrice(10.0);</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">book.save();</span></span><br><span class="line"><span class="keyword"> </span>           &#125;</span><br><span class="line">        &#125;)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/litepalUpdate1.png" alt=""></p><p>Book表中新增了一条书的数据，但这本书的价格并不是一开始设置的19.95，而是10.99，说明我们的更新操作确实生效了。<br>但是这种更新方式只能对已存储的对象进行操作，限制性比较大，接下来我们学习另外一种更加灵巧的更新方式。</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Button createDatabase=findViewById(R.id.create_database);</span><br><span class="line">        createDatabase.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                LitePal.getDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button addData=findViewById(R.id.add_data);</span><br><span class="line">        addData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Book book=<span class="keyword">new</span> Book();</span><br><span class="line">                book.setName(<span class="string">"ZaneCode6574的书"</span>);</span><br><span class="line">                book.setAuthor(<span class="string">"FFF"</span>);</span><br><span class="line">                book.setPages(<span class="number">666</span>);</span><br><span class="line">                book.setPrice(<span class="number">99.99</span>);</span><br><span class="line">                book.setPress(<span class="string">"大学出版社"</span>);</span><br><span class="line">                book.save();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button updateData=findViewById(R.id.update_data);</span><br><span class="line">        updateData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Book book=<span class="keyword">new</span> Book();</span><br><span class="line">                book.setPrice(<span class="number">98.88</span>);</span><br><span class="line">                book.setPages(<span class="number">9000</span>);</span><br><span class="line">                book.updateAll(<span class="string">"name=? and author=?"</span>,<span class="string">"Zanecode6574的第二本书"</span>,<span class="string">"ZZZ"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/litepalUpdate2.png" alt=""></p><p>首先new出了一个Book的实例，然后直接调用setPrice()和setPress()方法来设置要更新的数据，最后再调用updateAll()方法去执行更新操作。注意updateAll()方法中可以指定一个条件约束，和SQLiteDatabase中update()方法的where参数部分有点类似，但更加简洁，如果不指定条件语句的话，就表示更新所有数据。这里我们指定将所有书名是The Lost Symbol并且作者是Dan Brown的书价格更新为14.95，出版社更新为Anchor。</p><h2 id="删除数据-1"><a href="#删除数据-1" class="headerlink" title="删除数据"></a>删除数据</h2><p>使用LitePal删除数据的方式主要有两种，第一种比较简单，就是直接调用已存储对象的delete()方法就可以了，对于已存储对象的概念，我们在上一小节中已经学习过了。也就是说，调用过save()方法的对象，或者是通过LitePal提供的查询API查出来的对象，都是可以直接使用delete()方法来删除数据的。这种方式比较简单，我们就不进行代码演示了，下面直接来看另外一种删除数据的方式。</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Button createDatabase=findViewById(R.id.create_database);</span><br><span class="line">        createDatabase.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                LitePal.getDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button addData=findViewById(R.id.add_data);</span><br><span class="line">        addData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Book book=<span class="keyword">new</span> Book();</span><br><span class="line">                book.setName(<span class="string">"ZaneCode6574的书"</span>);</span><br><span class="line">                book.setAuthor(<span class="string">"FFF"</span>);</span><br><span class="line">                book.setPages(<span class="number">666</span>);</span><br><span class="line">                book.setPrice(<span class="number">99.99</span>);</span><br><span class="line">                book.setPress(<span class="string">"大学出版社"</span>);</span><br><span class="line">                book.save();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button updateData=findViewById(R.id.update_data);</span><br><span class="line">        updateData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Book book=<span class="keyword">new</span> Book();</span><br><span class="line">                book.setPrice(<span class="number">98.88</span>);</span><br><span class="line">                book.setPages(<span class="number">9000</span>);</span><br><span class="line">                book.updateAll(<span class="string">"name=? and author=?"</span>,<span class="string">"Zanecode6574的第二本书"</span>,<span class="string">"ZZZ"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button deleteData=findViewById(R.id.delete_data);</span><br><span class="line">        deleteData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                LitePal.deleteAll(Book.class,<span class="string">"price&lt;?"</span>,<span class="string">"99.99"</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/01/19/第六章：数据储存全方案-详解持久化技术/litepalDelete.png" alt=""></p><p>这里书上使用的是DataSupport.deleteAll(),但是之前说了这个类已经弃用了在新版的litepal中，所以这里使用LitePal.deleteAll()</p><h2 id="查询数据-1"><a href="#查询数据-1" class="headerlink" title="查询数据"></a>查询数据</h2><p>使用LitePal来查询数据一点都不复杂。我一直都认为LitePal在查询API方面的设计极为人性化，想想之前我们所使用的query()方法，冗长的参数列表让人看得头疼，即使多数参数都是用不到的，也不得不传入null，使用LitePal完成同样的功能非常简单，只需要这样写</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">List</span>&lt;<span class="keyword">Book&gt; </span><span class="keyword">books </span>= DataSupport.findAll(<span class="keyword">Book.class);</span></span><br></pre></td></tr></table></figure><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Button createDatabase=findViewById(R.id.create_database);</span><br><span class="line">        createDatabase.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                LitePal.getDatabase();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button addData=findViewById(R.id.add_data);</span><br><span class="line">        addData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Book book=<span class="keyword">new</span> Book();</span><br><span class="line">                book.setName(<span class="string">"ZaneCode6574的书"</span>);</span><br><span class="line">                book.setAuthor(<span class="string">"FFF"</span>);</span><br><span class="line">                book.setPages(<span class="number">666</span>);</span><br><span class="line">                book.setPrice(<span class="number">99.99</span>);</span><br><span class="line">                book.setPress(<span class="string">"大学出版社"</span>);</span><br><span class="line">                book.save();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button updateData=findViewById(R.id.update_data);</span><br><span class="line">        updateData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Book book=<span class="keyword">new</span> Book();</span><br><span class="line">                book.setPrice(<span class="number">98.88</span>);</span><br><span class="line">                book.setPages(<span class="number">9000</span>);</span><br><span class="line">                book.updateAll(<span class="string">"name=? and author=?"</span>,<span class="string">"Zanecode6574的第二本书"</span>,<span class="string">"ZZZ"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Button deleteData=findViewById(R.id.delete_data);</span><br><span class="line">        deleteData.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                LitePal.deleteAll(Book.class,<span class="string">"price&lt;?"</span>,<span class="string">"99.99"</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Button queryButton=findViewById(R.id.query_data);</span><br><span class="line">        queryButton.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                List&lt;Book&gt; books=LitePal.findAll(Book.class);</span><br><span class="line">                <span class="keyword">for</span>(Book book:books)&#123;</span><br><span class="line">                    Log.d(<span class="string">"MainActivity"</span>, <span class="string">"书名:"</span>+book.getName()+<span class="string">" "</span>+<span class="string">"作者:"</span>+book.getAuthor()+<span class="string">" "</span>+<span class="string">"页数:"</span>+book.getPages()+<span class="string">" "</span>+<span class="string">"价格:"</span>+book.getPrice()+<span class="string">" "</span>+<span class="string">"出版社:"</span>+book.getPress());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用的LitePal.findAll()，同上，原书使用的DataSupport()</p><h3 id="LitePal其他非常有用的查询API"><a href="#LitePal其他非常有用的查询API" class="headerlink" title="LitePal其他非常有用的查询API"></a>LitePal其他非常有用的查询API</h3><ul><li><p>查询Book表中的第一条数据</p>  <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Book firstBook</span> = DataSupport.findFirst(Book.class);</span><br></pre></td></tr></table></figure></li><li><p>查询Book表中的最后一条数据</p>  <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Book lastBook</span> = DataSupport.findLast(Book.class);</span><br></pre></td></tr></table></figure></li><li><p>连缀查询</p><ul><li><p>select()方法用于指定查询哪几列的数据，对应了SQL当中的select关键字。比如只查name和author这两列的数据，就可以这样写</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;Book&gt; books = DataSupport.<span class="built_in">select</span>(<span class="string">"name"</span>, <span class="string">"author"</span>).<span class="built_in">find</span>(Book.class);</span><br></pre></td></tr></table></figure></li><li><p>where()方法用于指定查询的约束条件，对应了SQL当中的where关键字。比如只查页数大于400的数据，就可以这样写</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span>&lt;<span class="type">Book</span>&gt; books = <span class="type">DataSupport</span>.<span class="keyword">where</span>(<span class="string">"pages &gt; ?"</span>, <span class="string">"400"</span>).<span class="built_in">find</span>(<span class="type">Book</span>.<span class="keyword">class</span>);</span><br></pre></td></tr></table></figure></li><li><p>order()方法用于指定结果的排序方式，对应了SQL当中的order by关键字。比如将查询结果按照书价从高到低排序，就可以这样写,其中desc表示降序排列，asc或者不写表示升序排列</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">List</span>&lt;Book&gt; books = DataSupport.<span class="keyword">order</span>(<span class="string">"price desc"</span>).find(Book.<span class="keyword">class</span>);</span><br></pre></td></tr></table></figure></li><li><p>limit()方法用于指定查询结果的数量，比如只查表中的前3条数据，就可以这样写</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">List</span>&lt;<span class="keyword">Book&gt; </span><span class="keyword">books </span>= DataSupport.limit(<span class="number">3</span>).find(<span class="keyword">Book.class);</span></span><br></pre></td></tr></table></figure></li><li><p>offset()方法用于指定查询结果的偏移量，比如查询表中的第2条、第3条、第4条数据，就可以这样写,由于limit(3)查询到的是前3条数据，这里我们再加上offset(1)进行一个位置的偏移，就能实现查询第2条、第3条、第4条数据的功能了。limit()和offset()方法共同对应了SQL当中的limit关键字。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Book&gt; books = DataSupport.limit(<span class="number">3</span>).<span class="built_in">offset</span>(<span class="number">1</span>).find(Book.<span class="built_in">class</span>);</span><br></pre></td></tr></table></figure></li><li><p>当然，你还可以对这5个方法进行任意的连缀组合，来完成一个比较复杂的查询操作</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Book&gt; books = DataSupport.select(<span class="string">"name"</span>, <span class="string">"author"</span>, <span class="string">"pages"</span>)</span><br><span class="line"><span class="meta">.where</span>(<span class="string">"pages &gt; ?"</span>, <span class="string">"400"</span>)</span><br><span class="line"><span class="meta">.order</span>(<span class="string">"pages"</span>)</span><br><span class="line"><span class="meta">.limit</span>(<span class="number">10</span>)</span><br><span class="line"><span class="meta">.offset</span>(<span class="number">10</span>)</span><br><span class="line"><span class="meta">.find</span>(Book.class)<span class="comment">;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><p>这段代码就表示，查询Book表中第11～20条满足页数大于400这个条件的name、author和pages这3列数据，并将查询结果按照页数升序排列。</p><ul><li>LitePal仍然支持使用原生的SQL来进行查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cursor c = DataSupport.findBySQL("<span class="keyword">select</span> * <span class="keyword">from</span> Book <span class="keyword">where</span> pages &gt; ? <span class="keyword">and</span> price &lt; ?<span class="string">", "</span><span class="number">400</span><span class="string">",  "</span><span class="number">20</span><span class="string">");</span></span><br></pre></td></tr></table></figure><p>调用DataSupport.findBySQL()方法来进行原生查询，其中第一个参数用于指定SQL语句，后面的参数用于指定占位符的值。注意findBySQL()方法返回的是一个Cursor对象，接下来你还需要通过之前所学的老方式将数据一一取出才行。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;持久化技术介绍&quot;&gt;&lt;a href=&quot;#持久化技术介绍&quot; class=&quot;headerlink&quot; title=&quot;持久化技术介绍&quot;&gt;&lt;/a&gt;持久化技术介绍&lt;/h1&gt;&lt;p&gt;数据持久化就是指将那些内存中的瞬时数据保存到存储设备中，保证即使在手机或电脑关机的情况下，这些数据仍然不会丢失。保存在内存中的数据是处于瞬时状态的，而保存在存储设备中的数据是处于持久状态的，持久化技术则提供了一种机制可以让数据在瞬时状态和持久状态之间进行转换。&lt;/p&gt;
&lt;p&gt;Android系统中主要提供了三种方式用于简单实现数据持久化功能，除了这3种方式之外，你还可以将数据保存在手机的SD卡中，不过使用文件、SharedPreferences或数据库来保存数据会相对更简单一些，而且比起将数据保存在SD卡中会更加地安全。&lt;/p&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="数据储存" scheme="https://zanecode6574.github.io/tags/%E6%95%B0%E6%8D%AE%E5%82%A8%E5%AD%98/"/>
    
      <category term="持久化技术" scheme="https://zanecode6574.github.io/tags/%E6%8C%81%E4%B9%85%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>第五章：详解广播机制</title>
    <link href="https://zanecode6574.github.io/2019/01/05/%E7%AC%AC%E4%BA%94%E7%AB%A0%EF%BC%9A%E8%AF%A6%E8%A7%A3%E5%B9%BF%E6%92%AD%E6%9C%BA%E5%88%B6/"/>
    <id>https://zanecode6574.github.io/2019/01/05/第五章：详解广播机制/</id>
    <published>2019-01-05T08:22:49.000Z</published>
    <updated>2019-01-19T06:33:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="广播机制简介"><a href="#广播机制简介" class="headerlink" title="广播机制简介"></a>广播机制简介</h1><p>安卓中每个应用程序都可以对自己感兴趣的广播进行注册，广播可来自系统也可来自应用程序。</p><ul><li><p>标准广播（Normal broadcasts）</p><ul><li>一种完全异步执行的广播，在广播发出之后，所有的广播接收器几乎都会在同一时刻接收到这条广播消息，因此它们之间没有任何先后顺序可言。这种广播的效率会比较高，但同时也意味着它是无法被截断的</li></ul></li><li><p>有序广播（Ordered broadcasts）</p><ul><li>一种同步执行的广播，在广播发出之后，同一时刻只会有一个广播接收器能够收到这条广播消息，当这个广播接收器中的逻辑执行完毕后，广播才会继续传递。所以此时的广播接收器是有先后顺序的，优先级高的广播接收器就可以先收到广播消息，并且前面的广播接收器还可以截断正在传递的广播，这样后面的广播接收器就无法收到广播消息了</li></ul></li></ul><a id="more"></a><h1 id="尝试接收系统广播"><a href="#尝试接收系统广播" class="headerlink" title="尝试接收系统广播"></a>尝试接收系统广播</h1><h2 id="动态注册监听网络变化"><a href="#动态注册监听网络变化" class="headerlink" title="动态注册监听网络变化"></a>动态注册监听网络变化</h2><ul><li>新建BroadcastTest项目</li><li>在AndroidManifest.xml中添加代码注册网络权限</li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="built_in">name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span> /&gt;</span><br></pre></td></tr></table></figure><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">IntentFilter</span> intentFilter;</span><br><span class="line"><span class="keyword">private</span> <span class="type">NetworkChangeReceiver</span> networkChangeReceiver;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line">intentFilter = <span class="keyword">new</span> <span class="type">IntentFilter</span>();</span><br><span class="line">intentFilter.addAction(<span class="string">"android.net.conn.CONNECTIVITY_CHANGE"</span>);</span><br><span class="line">networkChangeReceiver = <span class="keyword">new</span> <span class="type">NetworkChangeReceiver</span>();</span><br><span class="line">registerReceiver(networkChangeReceiver, intentFilter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> void onDestroy() &#123;</span><br><span class="line"><span class="keyword">super</span>.onDestroy();</span><br><span class="line">unregisterReceiver(networkChangeReceiver);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NetworkChangeReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">public void onReceive(<span class="type">Context</span> context, <span class="type">Intent</span> intent) &#123;</span><br><span class="line"><span class="type">Toast</span>.makeText(context, <span class="string">"network changes"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里定义了内部类NetworkChangeReceiver继承自BroadcastReceiver然后重写了onReceive函数，在onCreate中创建了一个IntentFilter的实例，并且添加了android.net.conn.CONNECTIVITY_CHANGE这个action，这是网络改变的时候系统会发出的一条广播的值，调用registerReceiver将两个实例传入就可以接收到这条广播了</p><ul><li>添加对是否有网络的判断，修改MainActivity中NetworkChangeReceiver的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">IntentFilter</span> intentFilter;</span><br><span class="line"><span class="keyword">private</span> <span class="type">NetworkChangeReceiver</span> networkChangeReceiver;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line">intentFilter = <span class="keyword">new</span> <span class="type">IntentFilter</span>();</span><br><span class="line">intentFilter.addAction(<span class="string">"android.net.conn.CONNECTIVITY_CHANGE"</span>);</span><br><span class="line">networkChangeReceiver = <span class="keyword">new</span> <span class="type">NetworkChangeReceiver</span>();</span><br><span class="line">registerReceiver(networkChangeReceiver, intentFilter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> void onDestroy() &#123;</span><br><span class="line"><span class="keyword">super</span>.onDestroy();</span><br><span class="line">unregisterReceiver(networkChangeReceiver);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">NetworkChangeReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">        public void onReceive(<span class="type">Context</span> context,<span class="type">Intent</span> intent)&#123;</span><br><span class="line">            <span class="type">ConnectivityManager</span> connectivityManager=(<span class="type">ConnectivityManager</span>)getSystemService(<span class="type">Context</span>.<span class="type">CONNECTIVITY_SERVICE</span>);</span><br><span class="line">            <span class="type">NetworkInfo</span> networkInfo=connectivityManager.getActiveNetworkInfo();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(networkInfo!=<span class="literal">null</span> &amp;&amp; networkInfo.isAvailable())&#123;</span><br><span class="line">                <span class="type">Toast</span>.makeText(context, <span class="string">"网络已连接"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="type">Toast</span>.makeText(context, <span class="string">"网络已断开"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//Toast.makeText(context,"网络改变了",Toast.LENGTH_SHORT).show();</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在onReceive()方法中，首先通过getSystemService()方法得到了ConnectivityManager的实例，这是一个系统服务类，专门用于管理网络连接的。然后调用它的getActiveNetworkInfo()方法可以得到NetworkInfo的实例，接着调用NetworkInfo的isAvailable()方法，就可以判断出当前是否有网络了</p><h2 id="静态注册实现开机启动"><a href="#静态注册实现开机启动" class="headerlink" title="静态注册实现开机启动"></a>静态注册实现开机启动</h2><p>动态注册的广播比较自由，但是必须在程序启动以后才能收到广播，要让程序在未启动的时候收到广播就要用静态注册的方法</p><ul><li>新建一个广播接收器<br>右键点击包名，新建，选择Other-Broadcast Receiver，这里命名为BootCompleteReceiver，Exported属性表示是否允许这个广播接收器接收本程序以外的广播，Enabled属性表示是否启用这个广播接收器，都勾选上</li><li>修改BootCompleteReceiver的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">BootCompleteReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">public void onReceive(<span class="type">Context</span> context, <span class="type">Intent</span> intent) &#123;</span><br><span class="line"><span class="type">Toast</span>.makeText(context, <span class="string">"Boot Complete"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_LONG</span>).show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在AndroidManifest.xml文件中注册静态广播（一定要）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line">···</span><br><span class="line">       <span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">".MyBroadcastReceiver"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在application标签内添加receiver标签注册静态广播，用法和<activity>标签非常相似，也是通过android:name来指定具体注册哪一个广播接收器，而enabled和exported属性则是根据我们刚才勾选的状态自动生成的</activity></p><ul><li>添加接收开机广播的权限，同样修改AndroidManifest.xml</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.RECEIVE_BOOT_COMPLETED"</span>/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">".BootCompleteReceiver"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:exported</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.BOOT_COMPLETED"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="发送自定义广播"><a href="#发送自定义广播" class="headerlink" title="发送自定义广播"></a>发送自定义广播</h1><h2 id="发送标准广播"><a href="#发送标准广播" class="headerlink" title="发送标准广播"></a>发送标准广播</h2><ul><li>定义一个广播接收器，准备接收自己的广播，新建一个MyBroadcastReceiver</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void onReceive(<span class="type">Context</span> context, <span class="type">Intent</span> intent) &#123;</span><br><span class="line">        <span class="type">Toast</span>.makeText(context, <span class="string">"收到自己的广播了！"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">        abortBroadcast();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改AndroidManifest.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">".MyBroadcastReceiver"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:exported</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.example.broadcasttest.MY_BROADCAST"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里让MyBroadcastReceiver接收一条com.example.broadcasttest.MY_BROADCAST的广播，也就是我们要发出的广播</p><ul><li>修改activity_main.xml的代码</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">       android:<span class="attribute">id</span>=<span class="string">"@+id/button"</span></span><br><span class="line">       android:<span class="attribute">layout_width</span>=<span class="string">"match_parent"</span></span><br><span class="line">       android:<span class="attribute">layout_height</span>=<span class="string">"match_parent"</span></span><br><span class="line">       android:<span class="attribute">text</span>=<span class="string">"按钮"</span>/&gt;</span><br></pre></td></tr></table></figure><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Button button=findViewById(R.id.button);</span><br><span class="line">button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">Intent intent=<span class="keyword">new</span> Intent(<span class="string">"com.example.broadcasttest.LOCAL_BROADCAST"</span>);</span><br><span class="line">localBroadcastManager.sendBroadcast(intent);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>为按钮添加事件，发送一个广播</p><h2 id="发送有序广播"><a href="#发送有序广播" class="headerlink" title="发送有序广播"></a>发送有序广播</h2><p>广播是跨进程的通信方式，创建一个BroadcastTest2项目</p><ul><li>新建一个AnotherBroadcastReceiver继承自BroadcastReceiver</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">AnotherBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void onReceive(<span class="type">Context</span> context, <span class="type">Intent</span> intent) &#123;</span><br><span class="line">        <span class="type">Toast</span>.makeText(context, <span class="string">"在另外的软件里收到了广播"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改AndroidManifest.xml文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">".AnotherBroadcastReceiver"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.example.broadcasttest.MY_BROADCAST"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里AnotherBroadcastReceiver同样接收com.example.broadcasttest.MY_BROADCAST广播</p><ul><li><p>在BroadcastTest项目中点击按钮就会弹出两次提示，说明两个程序都收到了广播</p></li><li><p>发送有序广播，修改BroadcastTest项目中MainActivity中的代码</p></li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"><span class="type">Button</span> button = (<span class="type">Button</span>) findViewById(<span class="type">R</span>.id.button);</span><br><span class="line">button.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line"><span class="type">Intent</span> intent = <span class="keyword">new</span></span><br><span class="line"><span class="type">Intent</span>(<span class="string">"com.example.broadcasttest.MY_BROADCAST"</span>);</span><br><span class="line">sendOrderedBroadcast(intent, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发送有序广播只需要改动一行代码，即将sendBroadcast()方法改成sendOrderedBroadcast()方法。sendOrderedBroadcast()方法接收两个参数，第一个参数仍然是Intent，第二个参数是一个与权限相关的字符串，这里传入null就行了</p><ul><li>设定有序广播的接收顺序</li></ul><p>修改AndroidManifest.xml中的代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag"><span class="attr">package</span>=<span class="string">"com.example.broadcasttest2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">".MyBroadcastReceiver"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:exported</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">"100"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.example.broadcasttest.MY_BROADCAST"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过android:priority属性给广播接收器设定了优先级</p><ul><li>选择是否允许广播继续传播</li></ul><p>修改MyBroadcastReceiver中的代码</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">public void onReceive(<span class="type">Context</span> context, <span class="type">Intent</span> intent) &#123;</span><br><span class="line"><span class="type">Toast</span>.makeText(context, <span class="string">"received in MyBroadcastReceiver"</span>,</span><br><span class="line"><span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">abortBroadcast();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里表示将这条广播截断</p><h1 id="使用本地广播"><a href="#使用本地广播" class="headerlink" title="使用本地广播"></a>使用本地广播</h1><p>前面我们发送和接收的广播全部属于系统全局广播，即发出的广播可以被其他任何应用程序接收到，并且我们也可以接收来自于其他任何应用程序的广播。这样就很容易引起安全性的问题，比如说我们发送的一些携带关键性数据的广播有可能被其他的应用程序截获，或者其他的程序不停地向我们的广播接收器里发送各种垃圾广播。<br>为了能够简单地解决广播的安全性问题，Android引入了一套本地广播机制，使用这个机制发出的广播只能够在应用程序的内部进行传递，并且广播接收器也只能接收来自本应用程序发出的广播，这样所有的安全性问题就都不存在了。</p><p>本地广播使用LocalBroadcastManager来管理广播</p><ul><li>修改MainActivity中的代码</li></ul><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> MainActivity extends AppCompatActivity &#123;</span><br><span class="line"><span class="keyword">private</span> IntentFilter intentFilter;</span><br><span class="line"><span class="keyword">private</span> LocalReceiver localReceiver;</span><br><span class="line"><span class="keyword">private</span> LocalBroadcastManager localBroadcastManager;</span><br><span class="line"><span class="keyword">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.activity_main);</span><br><span class="line">localBroadcastManager = LocalBroadcastManager.getInstance(<span class="keyword">this</span>); <span class="comment">// 获取实例</span></span><br><span class="line">Button button = (Button) findViewById(R.id.button);</span><br><span class="line">button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"><span class="keyword">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> onClick(View v) &#123;</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.example.broadcasttest.LOCAL_</span></span><br><span class="line"><span class="string">BROADCAST"</span>);</span><br><span class="line">localBroadcastManager.sendBroadcast(intent); <span class="comment">// 发送本地广播</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">intentFilter.addAction(<span class="string">"com.example.broadcasttest.LOCAL_BROADCAST"</span>);</span><br><span class="line">localReceiver = <span class="keyword">new</span> LocalReceiver();</span><br><span class="line">localBroadcastManager.registerReceiver(localReceiver, intentFilter); <span class="comment">// 注</span></span><br><span class="line">册本地广播监听器</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> onDestroy() &#123;</span><br><span class="line"><span class="keyword">super</span>.onDestroy();</span><br><span class="line">localBroadcastManager.unregisterReceiver(localReceiver);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> LocalReceiver extends BroadcastReceiver &#123;</span><br><span class="line"><span class="keyword">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> onReceive(Context context, Intent intent) &#123;</span><br><span class="line">Toast.makeText(context, <span class="string">"received local broadcast"</span>, Toast.LENGTH_SHORT).</span><br><span class="line">show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="广播的最佳实践-实现强制下线功能"><a href="#广播的最佳实践-实现强制下线功能" class="headerlink" title="广播的最佳实践-实现强制下线功能"></a>广播的最佳实践-实现强制下线功能</h1><h2 id="创建ActivityCollector类"><a href="#创建ActivityCollector类" class="headerlink" title="创建ActivityCollector类"></a>创建ActivityCollector类</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ActivityCollector</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Activity&gt; activities=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addActivity</span>(<span class="params">Activity activity</span>)</span>&#123;</span><br><span class="line">        activities.<span class="keyword">add</span>(activity);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">removeActivity</span>(<span class="params">Activity activity</span>)</span>&#123;</span><br><span class="line">        activities.<span class="keyword">remove</span>(activity);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">finishAll</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(Activity activity:activities)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!activity.isFinishing())&#123;</span><br><span class="line">                activity.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        activities.clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建BaseActivity类作为所有活动的父类"><a href="#创建BaseActivity类作为所有活动的父类" class="headerlink" title="创建BaseActivity类作为所有活动的父类"></a>创建BaseActivity类作为所有活动的父类</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">BaseActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="type">ActivityCollector</span>.addActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        <span class="type">ActivityCollector</span>.removeActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="新建LoginActivity，这里选择空白活动"><a href="#新建LoginActivity，这里选择空白活动" class="headerlink" title="新建LoginActivity，这里选择空白活动"></a>新建LoginActivity，这里选择空白活动</h2><ul><li>编辑activity_login.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".LoginActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"30dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"账号"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/EditText_UserName"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"输入账号"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">"30dp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"30dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"密码"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/EditText_Password"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"输入密码"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">"30dp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/Button_Login"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"登陆"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改LoginActivity中的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">LoginActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EditText</span> userNameEdit;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EditText</span> passwordEdit;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_login);</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> loginButton=findViewById(<span class="type">R</span>.id.<span class="type">Button_Login</span>);</span><br><span class="line">        userNameEdit=findViewById(<span class="type">R</span>.id.<span class="type">EditText_UserName</span>);</span><br><span class="line">        passwordEdit=findViewById(<span class="type">R</span>.id.<span class="type">EditText_Password</span>);</span><br><span class="line"></span><br><span class="line">        loginButton.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                <span class="type">String</span> userName=userNameEdit.getText().toString();</span><br><span class="line">                <span class="type">String</span> password=passwordEdit.getText().toString();</span><br><span class="line">                <span class="keyword">if</span>(userName.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(password.toString().equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">                        <span class="type">Intent</span> intent=<span class="keyword">new</span> <span class="type">Intent</span>(<span class="type">LoginActivity</span>.<span class="keyword">this</span>,<span class="type">MainActivity</span>.<span class="keyword">class</span>);</span><br><span class="line">                        startActivity(intent);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="type">Toast</span>.makeText(<span class="type">LoginActivity</span>.<span class="keyword">this</span>, <span class="string">"输入有误！"</span>, <span class="type">Toast</span>.<span class="type">LENGTH_SHORT</span>).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改MainActivity"><a href="#修改MainActivity" class="headerlink" title="修改MainActivity"></a>修改MainActivity</h2><ul><li>修改activity_main.xml的代码添加一个按钮</li><li>修改MainActivity中的代码</li></ul><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> button=findViewById(<span class="type">R</span>.id.<span class="type">Button_Main</span>);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                <span class="type">Intent</span> intent=<span class="keyword">new</span> <span class="type">Intent</span>(<span class="string">"com.zanecode6574.cquclass.broadcastpractice.FORCE_OFFLINE"</span>);</span><br><span class="line">                sendBroadcast(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于广播接收器里面需要弹出一个对话框来阻塞用户的正常操作，但如果创建的是一个静态注册的广播接收器，是没有办法在onReceive()方法里弹出对话框这样的UI控件的，而我们显然也不可能在每个活动中都去注册一个动态的广播接收器。<br>那么只需要在BaseActivity中动态注册一个广播接收器就可以了，因为所有的活动都是继承自BaseActivity的。</p><h2 id="修改BaseActivity中的代码"><a href="#修改BaseActivity中的代码" class="headerlink" title="修改BaseActivity中的代码"></a>修改BaseActivity中的代码</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">BaseActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ForceOfflineReceiver</span> receiver;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="type">ActivityCollector</span>.addActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onResume() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        <span class="type">IntentFilter</span> intentFilter=<span class="keyword">new</span> <span class="type">IntentFilter</span>();</span><br><span class="line">        intentFilter.addAction(<span class="string">"com.zanecode6574.cquclass.broadcastpractice.FORCE_OFFLINE"</span>);</span><br><span class="line">        receiver=<span class="keyword">new</span> <span class="type">ForceOfflineReceiver</span>();</span><br><span class="line">        registerReceiver(receiver,intentFilter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onPause() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        <span class="keyword">if</span>(receiver!=<span class="literal">null</span>)&#123;</span><br><span class="line">            unregisterReceiver(receiver);</span><br><span class="line">            receiver=<span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onDestroy() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        <span class="type">ActivityCollector</span>.removeActivity(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ForceOfflineReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        public void onReceive(<span class="keyword">final</span> <span class="type">Context</span> context, <span class="type">Intent</span> intent) &#123;</span><br><span class="line">            <span class="type">AlertDialog</span>.<span class="type">Builder</span> builder=<span class="keyword">new</span> <span class="type">AlertDialog</span>.<span class="type">Builder</span>(context);</span><br><span class="line">            builder.setTitle(<span class="string">"警告"</span>);</span><br><span class="line">            builder.setMessage(<span class="string">"强制下线！重新登录！"</span>);</span><br><span class="line">            builder.setCancelable(<span class="literal">false</span>);</span><br><span class="line">            builder.setPositiveButton(<span class="string">"确定"</span>, <span class="keyword">new</span> <span class="type">DialogInterface</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                public void onClick(<span class="type">DialogInterface</span> dialog, int which) &#123;</span><br><span class="line">                    <span class="type">ActivityCollector</span>.finishAll();</span><br><span class="line">                    <span class="type">Intent</span> intent=<span class="keyword">new</span> <span class="type">Intent</span>(context,<span class="type">LoginActivity</span>.<span class="keyword">class</span>);</span><br><span class="line">                    context.startActivity(intent);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            builder.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>onReceive()方法里使用AlertDialog.Builder来构建一个对话框，注意这里一定要调用setCancelable()方法将对话框设为不可取消，否则用户按一下Back键就可以关闭对话框继续使用程序了。然后使用setPositiveButton()方法来给对话框注册确定按钮，当用户点击了确定按钮时，就调用ActivityCollector的finishAll()方法来销毁掉所有活动，并重新启动LoginActivity这个活动。<br>注册ForceOfflineReceiver这个广播接收器的方法，可以看到，这里重写了onResume()和onPause()这两个生命周期函数，然后分别在这两个方法里注册和取消注册了ForceOfflineReceiver。<br>之前都是在onCreate()和onDestroy()方法里来注册和取消注册广播接收器的，因为我们始终需要保证只有处于栈顶的活动才能接收到这条强制下线广播，非栈顶的活动不应该也没有必要去接收这条广播，所以写在onResume()和onPause()方法里就可以很好地解决这个问题，当一个活动失去栈顶位置时就会自动取消广播接收器的注册。</p><h2 id="修改AndroidManifest-xml"><a href="#修改AndroidManifest-xml" class="headerlink" title="修改AndroidManifest.xml"></a>修改AndroidManifest.xml</h2><p>这里将主活动设置为LoginActivity即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.zanecode6574.cquclass.broadcastpractice"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- To auto-complete the email text field in the login form with the user's emails --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.GET_ACCOUNTS"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PROFILE"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_CONTACTS"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".LoginActivity"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2019/01/05/第五章：详解广播机制/result.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;广播机制简介&quot;&gt;&lt;a href=&quot;#广播机制简介&quot; class=&quot;headerlink&quot; title=&quot;广播机制简介&quot;&gt;&lt;/a&gt;广播机制简介&lt;/h1&gt;&lt;p&gt;安卓中每个应用程序都可以对自己感兴趣的广播进行注册，广播可来自系统也可来自应用程序。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;标准广播（Normal broadcasts）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一种完全异步执行的广播，在广播发出之后，所有的广播接收器几乎都会在同一时刻接收到这条广播消息，因此它们之间没有任何先后顺序可言。这种广播的效率会比较高，但同时也意味着它是无法被截断的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有序广播（Ordered broadcasts）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一种同步执行的广播，在广播发出之后，同一时刻只会有一个广播接收器能够收到这条广播消息，当这个广播接收器中的逻辑执行完毕后，广播才会继续传递。所以此时的广播接收器是有先后顺序的，优先级高的广播接收器就可以先收到广播消息，并且前面的广播接收器还可以截断正在传递的广播，这样后面的广播接收器就无法收到广播消息了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="第一行代码Android" scheme="https://zanecode6574.github.io/categories/%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81Android/"/>
    
    
      <category term="广播" scheme="https://zanecode6574.github.io/tags/%E5%B9%BF%E6%92%AD/"/>
    
  </entry>
  
  <entry>
    <title>Java远程操作完全分布式Hadoop集群</title>
    <link href="https://zanecode6574.github.io/2018/12/21/%E9%85%8D%E7%BD%AEEcplise%E7%94%A8Java%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C%E5%AE%8C%E5%85%A8%E5%88%86%E5%B8%83%E5%BC%8FHadoop%E9%9B%86%E7%BE%A4/"/>
    <id>https://zanecode6574.github.io/2018/12/21/配置Ecplise用Java远程操作完全分布式Hadoop集群/</id>
    <published>2018-12-21T04:02:47.000Z</published>
    <updated>2018-12-21T07:02:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>再次说到最近的作业需要用Hadoop，网上随便搜都能搜到相应的代码，但是直接复制下来换IP换路径以后一直报错，没法读取Hadoop集群上的文件，又搞了一天，终于搞清楚了，这篇文章教你如何使用Ecplise远程操作Hadoop完全分布式集群，伪分布式理论也通用</p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>完全分布式hadoop集群（参考Hadoop分类第一篇文章）</li><li>MacOS</li><li>Ecplise</li><li>Hadoop-2.8.5</li></ul><a id="more"></a><h1 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h1><h2 id="下载Hadoop-2-8-5和Hadoop-eclipse-plugin-2-8-5"><a href="#下载Hadoop-2-8-5和Hadoop-eclipse-plugin-2-8-5" class="headerlink" title="下载Hadoop-2.8.5和Hadoop-eclipse-plugin-2.8.5"></a>下载Hadoop-2.8.5和Hadoop-eclipse-plugin-2.8.5</h2><p><em>复制到下载器下载即可</em><br>Hadoop-2.8.5:  </p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//onedrive.zanecode6574.com/hadoop-2.8.5.tar.gz</span></span><br></pre></td></tr></table></figure><p>Hadoop-eclipse-plugin-2.8.5：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//onedrive.zanecode6574.com/Hadoop-eclipse-plugin-2.8.5.zip</span></span><br></pre></td></tr></table></figure><h2 id="配置Ecplise"><a href="#配置Ecplise" class="headerlink" title="配置Ecplise"></a>配置Ecplise</h2><ul><li>解压Hadoop-eclipse-plugin-2.8.5，复制release文件夹内的包到Ecplise安装目录的Ecplise/dropins文件夹（有人说是plugins文件夹，个人测试是dropins文件夹，具体自己试试）</li><li>重启Ecplise</li><li>打开Ecplise-Window-Show View-Other，选择MapReduce Tools-Map/Reduce Location</li><li>点击如图的位置添加服务器位置(可能界面有点差别，我调整过)<br><img src="/2018/12/21/配置Ecplise用Java远程操作完全分布式Hadoop集群/MapReduce主界面.png" alt=""></li><li>设置如下<br><img src="/2018/12/21/配置Ecplise用Java远程操作完全分布式Hadoop集群/MapReduce设置.png" alt=""><br>到此就设置完成了</li></ul><h2 id="测试项目"><a href="#测试项目" class="headerlink" title="测试项目"></a>测试项目</h2><ul><li>创建一个项目，选择File-New-Other-Map/Reduce Project</li><li>添加Hadoop-2.8.5目录（这里下载Hadoop是为了开发环境用，不需要配置，解压出来就行了）<br><img src="/2018/12/21/配置Ecplise用Java远程操作完全分布式Hadoop集群/Hadoop路径设置.png" alt=""></li><li>创建完成在项目上方会看到一个选项能看见你设置的Hadoop远程服务器上的目录和文件</li><li>测试从Hadoop读取文件,在项目中新建class名字为MyFSDataInputStream继承FSDataInputStream，地址自己设置（我在Hadoop目录添加了一个文件夹叫做Hadoop，上传了1.txt到这个文件夹下面,如何上传自行百度Hadoop基本操作，创建和上传都是在主节点上完成的）</li></ul><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FSDataInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFSDataInputStream</span> <span class="keyword"><span class="keyword">extends</span> <span class="type">FSDataInputStream</span></span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> MyFSDataInputStream(InputStream <span class="keyword">in</span>) &#123;</span><br><span class="line">       <span class="keyword">super</span>(<span class="keyword">in</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> readline(Configuration conf, <span class="keyword">String</span> remoteFilePath) &#123;</span><br><span class="line">       <span class="keyword">try</span> (FileSystem fs = FileSystem.<span class="keyword">get</span>(conf)) &#123;</span><br><span class="line">           Path remotePath = <span class="keyword">new</span> <span class="type">Path</span>(remoteFilePath);</span><br><span class="line">           FSDataInputStream <span class="keyword">in</span> = fs.open(remotePath);</span><br><span class="line">           BufferedReader d = <span class="keyword">new</span> <span class="type">BufferedReader</span>(<span class="keyword">new</span> <span class="type">InputStreamReader</span>(<span class="keyword">in</span>));</span><br><span class="line">           <span class="keyword">String</span> line = <span class="literal">null</span>;</span><br><span class="line">           <span class="keyword">if</span> ((line = d.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">               d.close();</span><br><span class="line">               <span class="keyword">in</span>.close();</span><br><span class="line">               <span class="keyword">return</span> line;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">           <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">           e.printStackTrace();</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">       Configuration conf = <span class="keyword">new</span> <span class="type">Configuration</span>();</span><br><span class="line">       conf.<span class="keyword">set</span>(<span class="string">"fs.default.name"</span>, <span class="string">"hdfs://122.152.230.48:9000"</span>);</span><br><span class="line">       <span class="keyword">String</span> remoteFilePath = <span class="string">"/hadoop/1.txt"</span>; <span class="comment">// HDFS路径</span></span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">"读取文件: "</span> + remoteFilePath);</span><br><span class="line">       System.out.println(MyFSDataInputStream.readline(conf, remoteFilePath));</span><br><span class="line">       System.out.println(<span class="string">"\n读取完成"</span>);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>成功读取文件<br><img src="/2018/12/21/配置Ecplise用Java远程操作完全分布式Hadoop集群/读取文件.png" alt=""><br>前面两行报错可以忽略，或者自行百度解决；后面的warning是因为jdk版本问题，也可以忽略，读取成功输出文本第一行，也就是我打码的地方</li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>配置整个Hadoop环境花了很多时间，网上很多博客都没雨说清楚具体该怎么做，我也是参考别人的做出来，文中需要的程序在网盘里都有</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;再次说到最近的作业需要用Hadoop，网上随便搜都能搜到相应的代码，但是直接复制下来换IP换路径以后一直报错，没法读取Hadoop集群上的文件，又搞了一天，终于搞清楚了，这篇文章教你如何使用Ecplise远程操作Hadoop完全分布式集群，伪分布式理论也通用&lt;/p&gt;
&lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;完全分布式hadoop集群（参考Hadoop分类第一篇文章）&lt;/li&gt;
&lt;li&gt;MacOS&lt;/li&gt;
&lt;li&gt;Ecplise&lt;/li&gt;
&lt;li&gt;Hadoop-2.8.5&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Hadoop" scheme="https://zanecode6574.github.io/categories/Hadoop/"/>
    
    
      <category term="Java" scheme="https://zanecode6574.github.io/tags/Java/"/>
    
      <category term="Ecplise" scheme="https://zanecode6574.github.io/tags/Ecplise/"/>
    
      <category term="远程" scheme="https://zanecode6574.github.io/tags/%E8%BF%9C%E7%A8%8B/"/>
    
      <category term="完全分布式Hadoop集群" scheme="https://zanecode6574.github.io/tags/%E5%AE%8C%E5%85%A8%E5%88%86%E5%B8%83%E5%BC%8FHadoop%E9%9B%86%E7%BE%A4/"/>
    
  </entry>
  
</feed>
